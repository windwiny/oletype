
ALL Class.Method => Return:
  Application.ActivateMicrosoftApp -> 
  Application.AddCustomList -> 
  Application.Calculate -> 
  Application.CalculateFull -> 
  Application.CalculateFullRebuild -> 
  Application.CalculateUntilAsyncQueriesDone -> 
  Application.CentimetersToPoints -> float
  Application.CheckAbort -> 
  Application.CheckSpelling -> bool
  Application.ConvertFormula -> list
  Application.DDEExecute -> 
  Application.DDEInitiate -> int
  Application.DDEPoke -> 
  Application.DDERequest -> list
  Application.DDETerminate -> 
  Application.DeleteCustomList -> 
  Application.DisplayXMLSourcePane -> 
  Application.DoubleClick -> 
  Application.Evaluate -> list
  Application.ExecuteExcel4Macro -> list
  Application.FindFile -> bool
  Application.GetCustomListContents -> list
  Application.GetCustomListNum -> int
  Application.GetOpenFilename -> list
  Application.GetPhonetic -> str
  Application.GetSaveAsFilename -> list
  Application.Goto -> 
  Application.Help -> 
  Application.InchesToPoints -> float
  Application.InputBox -> list
  Application.Intersect -> Range
  Application.MacroOptions -> 
  Application.MailLogoff -> 
  Application.MailLogon -> 
  Application.NextLetter -> Workbook
  Application.OnKey -> 
  Application.OnRepeat -> 
  Application.OnTime -> 
  Application.OnUndo -> 
  Application.Quit -> 
  Application.RecordMacro -> 
  Application.RegisterXLL -> bool
  Application.Repeat -> 
  Application.Run -> list
  Application.SendKeys -> 
  Application.SharePointVersion -> int
  Application.Undo -> 
  Application.Union -> Range
  Application.Volatile -> 
  Application.Wait -> bool
  Range.Activate -> list
  Range.AddComment -> Comment
  Range.AddCommentThreaded -> CommentThreaded
  Range.AdvancedFilter -> list
  Range.AllocateChanges -> 
  Range.ApplyNames -> list
  Range.ApplyOutlineStyles -> list
  Range.AutoComplete -> str
  Range.AutoFill -> list
  Range.AutoFilter -> list
  Range.AutoFit -> list
  Range.AutoOutline -> list
  Range.BorderAround -> list
  Range.Calculate -> list
  Range.CalculateRowMajorOrder -> list
  Range.CheckSpelling -> list
  Range.Clear -> list
  Range.ClearComments -> 
  Range.ClearContents -> list
  Range.ClearFormats -> list
  Range.ClearHyperlinks -> None
  Range.ClearNotes -> list
  Range.ClearOutline -> list
  Range.ColumnDifferences -> Range
  Range.Consolidate -> list
  Range.ConvertToLinkedDataType -> 
  Range.Copy -> list
  Range.CopyFromRecordset -> int
  Range.CopyPicture -> list
  Range.CreateNames -> list
  Range.Cut -> list
  Range.DataTypeToText -> 
  Range.DataSeries -> list
  Range.Delete -> list
  Range.DialogBox -> list
  Range.Dirty -> 
  Range.DiscardChanges -> 
  Range.EditionOptions -> list
  Range.ExportAsFixedFormat -> 
  Range.FillDown -> list
  Range.FillLeft -> list
  Range.FillRight -> list
  Range.FillUp -> list
  Range.Find -> A Range object that represents the first cell where that information is found.
  Range.FindNext -> Range
  Range.FindPrevious -> Range
  Range.FlashFill -> None
  Range.FunctionWizard -> list
  Range.Group -> list
  Range.Insert -> list
  Range.InsertIndent -> 
  Range.Justify -> list
  Range.ListNames -> list
  Range.Merge -> 
  Range.NavigateArrow -> list
  Range.NoteText -> str
  Range.Parse -> list
  Range.PasteSpecial -> list
  Range.PrintOut -> list
  Range.PrintPreview -> list
  Range.RemoveDuplicates -> 
  Range.RemoveSubtotal -> list
  Range.RowDifferences -> Range
  Range.Run -> list
  Range.Select -> list
  Range.SetCellDataTypeFromCell -> 
  Range.SetPhonetic -> 
  Range.Show -> list
  Range.ShowCard -> 
  Range.ShowDependents -> list
  Range.ShowErrors -> list
  Range.ShowPrecedents -> list
  Range.Sort -> list
  Range.SortSpecial -> list
  Range.Speak -> 
  Range.SpecialCells -> Range
  Range.SubscribeTo -> list
  Range.Subtotal -> list
  Range.Table -> list
  Range.TextToColumns -> list
  Range.Ungroup -> list
  Range.UnMerge -> 
  Chart.Activate -> 
  Chart.ApplyChartTemplate -> 
  Chart.ApplyDataLabels -> 
  Chart.ApplyLayout -> 
  Chart.Axes -> object
  Chart.ChartGroups -> object
  Chart.ChartObjects -> object
  Chart.ChartWizard -> 
  Chart.CheckSpelling -> 
  Chart.ClearToMatchColorStyle -> None
  Chart.ClearToMatchStyle -> 
  Chart.Copy -> 
  Chart.CopyPicture -> 
  Chart.Delete -> 
  Chart.Evaluate -> list
  Chart.Export -> bool
  Chart.ExportAsFixedFormat -> 
  Chart.FullSeriesCollection -> object
  Chart.GetChartElement -> 
  Chart.Location -> The new Chart at the new location. Note that the Location method deletes the old chart and creates a new one in the new location. As a result, the old chart is invalidated and subsequent operations on it is not well defined.
  Chart.Move -> 
  Chart.OLEObjects -> object
  Chart.Paste -> 
  Chart.PrintOut -> list
  Chart.PrintPreview -> 
  Chart.Protect -> 
  Chart.Refresh -> 
  Chart.SaveAs -> 
  Chart.SaveChartTemplate -> 
  Chart.Select -> 
  Chart.SeriesCollection -> object
  Chart.SetBackgroundPicture -> 
  Chart.SetDefaultChart -> 
  Chart.SetElement -> None
  Chart.SetSourceData -> 
  Chart.Unprotect -> 
  ProtectedViewWindow.Activate -> None
  ProtectedViewWindow.Close -> bool
  ProtectedViewWindow.Edit -> Workbook
  Window.Activate -> list
  Window.ActivateNext -> list
  Window.ActivatePrevious -> list
  Window.Close -> bool
  Window.LargeScroll -> list
  Window.NewWindow -> Window
  Window.PointsToScreenPixelsX -> int
  Window.PointsToScreenPixelsY -> int
  Window.PrintOut -> list
  Window.PrintPreview -> list
  Window.RangeFromPoint -> object
  Window.ScrollIntoView -> 
  Window.ScrollWorkbookTabs -> list
  Window.SmallScroll -> list
  Workbook.AcceptAllChanges -> 
  Workbook.Activate -> 
  Workbook.AddToFavorites -> 
  Workbook.ApplyTheme -> 
  Workbook.BreakLink -> 
  Workbook.CanCheckIn -> bool
  Workbook.ChangeFileAccess -> 
  Workbook.ChangeLink -> 
  Workbook.CheckIn -> 
  Workbook.CheckInWithVersion -> None
  Workbook.Close -> 
  Workbook.ConvertComments -> 
  Workbook.CreateForecastSheet -> None
  Workbook.DeleteNumberFormat -> 
  Workbook.EnableConnections -> 
  Workbook.EndReview -> 
  Workbook.ExclusiveAccess -> bool
  Workbook.ExportAsFixedFormat -> 
  Workbook.FollowHyperlink -> 
  Workbook.ForwardMailer -> 
  Workbook.GetWorkflowTasks -> WorkFlowTasks
  Workbook.GetWorkflowTemplates -> WorkflowTemplates
  Workbook.HighlightChangesOptions -> 
  Workbook.LinkInfo -> list
  Workbook.LinkSources -> list
  Workbook.LockServerFile -> 
  Workbook.MergeWorkbook -> 
  Workbook.NewWindow -> Window
  Workbook.OpenLinks -> 
  Workbook.PivotCaches -> PivotCaches
  Workbook.Post -> 
  Workbook.PrintOut -> list
  Workbook.PrintPreview -> 
  Workbook.Protect -> 
  Workbook.ProtectSharing -> 
  Workbook.PublishToDocs -> 
  Workbook.PurgeChangeHistoryNow -> 
  Workbook.RefreshAll -> 
  Workbook.RejectAllChanges -> 
  Workbook.ReloadAs -> 
  Workbook.RemoveDocumentInformation -> 
  Workbook.RemoveUser -> 
  Workbook.Reply -> 
  Workbook.ReplyAll -> 
  Workbook.ReplyWithChanges -> 
  Workbook.ResetColors -> 
  Workbook.RunAutoMacros -> 
  Workbook.Save -> 
  Workbook.SaveAs -> 
  Workbook.SaveAsXMLData -> 
  Workbook.SaveCopyAs -> 
  Workbook.SendFaxOverInternet -> 
  Workbook.SendForReview -> 
  Workbook.SendMail -> 
  Workbook.SendMailer -> 
  Workbook.SetLinkOnData -> 
  Workbook.SetPasswordEncryptionOptions -> 
  Workbook.ToggleFormsDesign -> 
  Workbook.Unprotect -> 
  Workbook.UnprotectSharing -> 
  Workbook.UpdateFromFile -> 
  Workbook.UpdateLink -> 
  Workbook.WebPagePreview -> 
  Workbook.XmlImport -> XlXmlImportResult
  Workbook.XmlImportXml -> XlXmlImportResult
  AddIns.Add -> An AddIn object that represents the new add-in.
  AddIns2.Add -> AddIn
  AutoCorrect.AddReplacement -> list
  AutoCorrect.DeleteReplacement -> list
  Sheets.Add -> An Object value that represents the new worksheet, chart, or macro sheet.
  Sheets.Add2 -> object
  Sheets.Copy -> 
  Sheets.Delete -> 
  Sheets.FillAcrossSheets -> 
  Sheets.Move -> 
  Sheets.PrintOut -> list
  Sheets.PrintPreview -> 
  Sheets.Select -> 
  Names.Add -> Name
  Names.Item -> A Name object contained by the collection.
  ODBCErrors.Item -> ODBCError
  OLEDBErrors.Item -> OLEDBError
  ProtectedViewWindows.Open -> ProtectedViewWindow
  QuickAnalysis.Hide -> None
  QuickAnalysis.Show -> None
  RecentFiles.Add -> RecentFile
  RTD.RefreshData -> 
  RTD.RestartServers -> 
  Speech.Speak -> 
  Watches.Add -> Watch
  Watches.Delete -> 
  Windows.Arrange -> list
  Windows.BreakSideBySide -> bool
  Windows.CompareSideBySideWith -> bool
  Windows.ResetPositionsSideBySide -> 
  Workbooks.Add -> Workbook
  Workbooks.CanCheckOut -> bool
  Workbooks.CheckOut -> 
  Workbooks.Close -> 
  Workbooks.Open -> Workbook
  Workbooks.OpenDatabase -> Workbook
  Workbooks.OpenText -> 
  Workbooks.OpenXML -> Workbook
  WorksheetFunction.AccrInt -> float
  WorksheetFunction.AccrIntM -> float
  WorksheetFunction.Acos -> float
  WorksheetFunction.Acosh -> float
  WorksheetFunction.Acot -> float
  WorksheetFunction.Acoth -> float
  WorksheetFunction.Aggregate -> float
  WorksheetFunction.AmorDegrc -> float
  WorksheetFunction.AmorLinc -> float
  WorksheetFunction.And -> bool
  WorksheetFunction.Arabic -> float
  WorksheetFunction.Asc -> str
  WorksheetFunction.Asin -> float
  WorksheetFunction.Asinh -> float
  WorksheetFunction.Atan2 -> float
  WorksheetFunction.Atanh -> float
  WorksheetFunction.AveDev -> float
  WorksheetFunction.Average -> float
  WorksheetFunction.AverageIf -> float
  WorksheetFunction.AverageIfs -> float
  WorksheetFunction.BahtText -> str
  WorksheetFunction.Base -> str
  WorksheetFunction.BesselI -> float
  WorksheetFunction.BesselJ -> float
  WorksheetFunction.BesselK -> float
  WorksheetFunction.BesselY -> float
  WorksheetFunction.Beta_Dist -> float
  WorksheetFunction.Beta_Inv -> float
  WorksheetFunction.BetaDist -> float
  WorksheetFunction.BetaInv -> float
  WorksheetFunction.Bin2Dec -> str
  WorksheetFunction.Bin2Hex -> str
  WorksheetFunction.Bin2Oct -> str
  WorksheetFunction.Binom_Dist -> float
  WorksheetFunction.Binom_Dist_Range -> float
  WorksheetFunction.Binom_Inv -> float
  WorksheetFunction.BinomDist -> float
  WorksheetFunction.Bitand -> float
  WorksheetFunction.Bitlshift -> float
  WorksheetFunction.Bitor -> float
  WorksheetFunction.Bitrshift -> float
  WorksheetFunction.Bitxor -> float
  WorksheetFunction.Ceiling -> float
  WorksheetFunction.Ceiling_Math -> float
  WorksheetFunction.Ceiling_Precise -> float
  WorksheetFunction.ChiDist -> float
  WorksheetFunction.ChiInv -> float
  WorksheetFunction.ChiSq_Dist -> float
  WorksheetFunction.ChiSq_Dist_RT -> float
  WorksheetFunction.ChiSq_Inv -> float
  WorksheetFunction.ChiSq_Inv_RT -> float
  WorksheetFunction.ChiSq_Test -> float
  WorksheetFunction.ChiTest -> float
  WorksheetFunction.Choose -> list
  WorksheetFunction.Clean -> str
  WorksheetFunction.Combin -> float
  WorksheetFunction.Combina -> float
  WorksheetFunction.Complex -> str
  WorksheetFunction.Confidence -> float
  WorksheetFunction.Confidence_Norm -> float
  WorksheetFunction.Confidence_T -> float
  WorksheetFunction.Convert -> float
  WorksheetFunction.Correl -> float
  WorksheetFunction.Cosh -> float
  WorksheetFunction.Cot -> float
  WorksheetFunction.Coth -> float
  WorksheetFunction.Count -> float
  WorksheetFunction.CountA -> float
  WorksheetFunction.CountBlank -> float
  WorksheetFunction.CountIf -> float
  WorksheetFunction.CountIfs -> float
  WorksheetFunction.CoupDayBs -> float
  WorksheetFunction.CoupDays -> float
  WorksheetFunction.CoupDaysNc -> float
  WorksheetFunction.CoupNcd -> float
  WorksheetFunction.CoupNum -> float
  WorksheetFunction.CoupPcd -> float
  WorksheetFunction.Covar -> float
  WorksheetFunction.Covariance_P -> float
  WorksheetFunction.Covariance_S -> float
  WorksheetFunction.CritBinom -> float
  WorksheetFunction.Csc -> float
  WorksheetFunction.Csch -> float
  WorksheetFunction.CumIPmt -> float
  WorksheetFunction.CumPrinc -> float
  WorksheetFunction.DAverage -> float
  WorksheetFunction.Days -> float
  WorksheetFunction.Days360 -> float
  WorksheetFunction.Db -> float
  WorksheetFunction.Dbcs -> str
  WorksheetFunction.DCount -> float
  WorksheetFunction.DCountA -> float
  WorksheetFunction.Ddb -> float
  WorksheetFunction.Dec2Bin -> str
  WorksheetFunction.Dec2Hex -> str
  WorksheetFunction.Dec2Oct -> str
  WorksheetFunction.Decimal -> float
  WorksheetFunction.Degrees -> float
  WorksheetFunction.Delta -> float
  WorksheetFunction.DevSq -> float
  WorksheetFunction.DGet -> list
  WorksheetFunction.Disc -> float
  WorksheetFunction.DMax -> float
  WorksheetFunction.DMin -> float
  WorksheetFunction.Dollar -> str
  WorksheetFunction.DollarDe -> float
  WorksheetFunction.DollarFr -> float
  WorksheetFunction.DProduct -> float
  WorksheetFunction.DStDev -> float
  WorksheetFunction.DStDevP -> float
  WorksheetFunction.DSum -> float
  WorksheetFunction.Duration -> float
  WorksheetFunction.DVar -> float
  WorksheetFunction.DVarP -> float
  WorksheetFunction.EDate -> float
  WorksheetFunction.Effect -> float
  WorksheetFunction.EncodeUrl -> list
  WorksheetFunction.EoMonth -> float
  WorksheetFunction.Erf -> float
  WorksheetFunction.Erf_Precise -> float
  WorksheetFunction.ErfC -> float
  WorksheetFunction.ErfC_Precise -> float
  WorksheetFunction.Even -> float
  WorksheetFunction.Expon_Dist -> float
  WorksheetFunction.ExponDist -> float
  WorksheetFunction.F_Dist -> float
  WorksheetFunction.F_Dist_RT -> float
  WorksheetFunction.F_Inv -> float
  WorksheetFunction.F_Inv_RT -> float
  WorksheetFunction.F_Test -> float
  WorksheetFunction.Fact -> float
  WorksheetFunction.FactDouble -> float
  WorksheetFunction.FDist -> float
  WorksheetFunction.FilterXML -> list
  WorksheetFunction.Find -> float
  WorksheetFunction.FindB -> float
  WorksheetFunction.FInv -> float
  WorksheetFunction.Fisher -> float
  WorksheetFunction.FisherInv -> float
  WorksheetFunction.Fixed -> str
  WorksheetFunction.Floor -> float
  WorksheetFunction.Floor_Math -> float
  WorksheetFunction.Floor_Precise -> float
  WorksheetFunction.Forecast -> float
  WorksheetFunction.Forecast_ETS -> float
  WorksheetFunction.Forecast_ETS_ConfInt -> float
  WorksheetFunction.Forecast_ETS_Seasonality -> float
  WorksheetFunction.Forecast_ETS_STAT -> float
  WorksheetFunction.Forecast_Linear -> float
  WorksheetFunction.Frequency -> list
  WorksheetFunction.FTest -> float
  WorksheetFunction.Fv -> float
  WorksheetFunction.FVSchedule -> float
  WorksheetFunction.Gamma -> float
  WorksheetFunction.Gamma_Dist -> float
  WorksheetFunction.Gamma_Inv -> float
  WorksheetFunction.GammaDist -> float
  WorksheetFunction.GammaInv -> float
  WorksheetFunction.GammaLn -> float
  WorksheetFunction.GammaLn_Precise -> float
  WorksheetFunction.Gauss -> float
  WorksheetFunction.Gcd -> float
  WorksheetFunction.GeoMean -> float
  WorksheetFunction.GeStep -> float
  WorksheetFunction.Growth -> list
  WorksheetFunction.HarMean -> float
  WorksheetFunction.Hex2Bin -> str
  WorksheetFunction.Hex2Dec -> str
  WorksheetFunction.Hex2Oct -> str
  WorksheetFunction.HLookup -> list
  WorksheetFunction.HypGeom_Dist -> float
  WorksheetFunction.HypGeomDist -> float
  WorksheetFunction.IfError -> list
  WorksheetFunction.IfNa -> list
  WorksheetFunction.ImAbs -> str
  WorksheetFunction.Imaginary -> float
  WorksheetFunction.ImArgument -> str
  WorksheetFunction.ImConjugate -> str
  WorksheetFunction.ImCos -> str
  WorksheetFunction.ImCosh -> str
  WorksheetFunction.ImCot -> str
  WorksheetFunction.ImCsc -> str
  WorksheetFunction.ImCsch -> str
  WorksheetFunction.ImDiv -> str
  WorksheetFunction.ImExp -> str
  WorksheetFunction.ImLn -> str
  WorksheetFunction.ImLog10 -> str
  WorksheetFunction.ImLog2 -> str
  WorksheetFunction.ImPower -> str
  WorksheetFunction.ImProduct -> str
  WorksheetFunction.ImReal -> float
  WorksheetFunction.ImSec -> str
  WorksheetFunction.ImSech -> str
  WorksheetFunction.ImSin -> str
  WorksheetFunction.ImSinh -> str
  WorksheetFunction.ImSqrt -> str
  WorksheetFunction.ImSub -> str
  WorksheetFunction.ImSum -> str
  WorksheetFunction.ImTan -> str
  WorksheetFunction.Index -> list
  WorksheetFunction.Intercept -> float
  WorksheetFunction.IntRate -> float
  WorksheetFunction.Ipmt -> float
  WorksheetFunction.Irr -> float
  WorksheetFunction.IsErr -> bool
  WorksheetFunction.IsError -> bool
  WorksheetFunction.IsEven -> bool
  WorksheetFunction.IsFormula -> bool
  WorksheetFunction.IsLogical -> bool
  WorksheetFunction.IsNA -> bool
  WorksheetFunction.IsNonText -> bool
  WorksheetFunction.IsNumber -> bool
  WorksheetFunction.ISO_Ceiling -> float
  WorksheetFunction.IsOdd -> bool
  WorksheetFunction.IsoWeekNum -> float
  WorksheetFunction.Ispmt -> float
  WorksheetFunction.IsText -> bool
  WorksheetFunction.Kurt -> float
  WorksheetFunction.Large -> float
  WorksheetFunction.Lcm -> float
  WorksheetFunction.LinEst -> list
  WorksheetFunction.Ln -> float
  WorksheetFunction.Log -> float
  WorksheetFunction.Log10 -> float
  WorksheetFunction.LogEst -> list
  WorksheetFunction.LogInv -> float
  WorksheetFunction.LogNorm_Dist -> float
  WorksheetFunction.LogNorm_Inv -> float
  WorksheetFunction.LogNormDist -> float
  WorksheetFunction.Lookup -> list
  WorksheetFunction.Match -> float
  WorksheetFunction.Max -> float
  WorksheetFunction.MDeterm -> float
  WorksheetFunction.MDuration -> float
  WorksheetFunction.Median -> float
  WorksheetFunction.Min -> float
  WorksheetFunction.MInverse -> list
  WorksheetFunction.MIrr -> float
  WorksheetFunction.MMult -> list
  WorksheetFunction.Mode -> float
  WorksheetFunction.Mode_Mult -> list
  WorksheetFunction.Mode_Sngl -> float
  WorksheetFunction.MRound -> float
  WorksheetFunction.MultiNomial -> float
  WorksheetFunction.Munit -> list
  WorksheetFunction.NegBinom_Dist -> float
  WorksheetFunction.NegBinomDist -> float
  WorksheetFunction.NetworkDays -> float
  WorksheetFunction.NetworkDays_Intl -> float
  WorksheetFunction.Nominal -> float
  WorksheetFunction.Norm_Dist -> float
  WorksheetFunction.Norm_Inv -> float
  WorksheetFunction.Norm_S_Dist -> float
  WorksheetFunction.Norm_S_Inv -> float
  WorksheetFunction.NormDist -> float
  WorksheetFunction.NormInv -> float
  WorksheetFunction.NormSDist -> float
  WorksheetFunction.NormSInv -> float
  WorksheetFunction.NPer -> float
  WorksheetFunction.Npv -> float
  WorksheetFunction.NumberValue -> float
  WorksheetFunction.Oct2Bin -> str
  WorksheetFunction.Oct2Dec -> str
  WorksheetFunction.Oct2Hex -> str
  WorksheetFunction.Odd -> float
  WorksheetFunction.OddFPrice -> float
  WorksheetFunction.OddFYield -> float
  WorksheetFunction.OddLPrice -> float
  WorksheetFunction.OddLYield -> float
  WorksheetFunction.Or -> bool
  WorksheetFunction.PDuration -> float
  WorksheetFunction.Pearson -> float
  WorksheetFunction.Percentile -> float
  WorksheetFunction.Percentile_Exc -> float
  WorksheetFunction.Percentile_Inc -> float
  WorksheetFunction.PercentRank -> float
  WorksheetFunction.PercentRank_Exc -> float
  WorksheetFunction.PercentRank_Inc -> float
  WorksheetFunction.Permut -> float
  WorksheetFunction.Permutationa -> float
  WorksheetFunction.Phi -> float
  WorksheetFunction.Phonetic -> float
  WorksheetFunction.Pi -> float
  WorksheetFunction.Pmt -> float
  WorksheetFunction.Poisson -> float
  WorksheetFunction.Poisson_Dist -> float
  WorksheetFunction.Power -> float
  WorksheetFunction.Ppmt -> float
  WorksheetFunction.Price -> float
  WorksheetFunction.PriceDisc -> float
  WorksheetFunction.PriceMat -> float
  WorksheetFunction.Prob -> float
  WorksheetFunction.Product -> float
  WorksheetFunction.Proper -> str
  WorksheetFunction.Pv -> float
  WorksheetFunction.Quartile -> float
  WorksheetFunction.Quartile_Exc -> float
  WorksheetFunction.Quartile_Inc -> float
  WorksheetFunction.Quotient -> float
  WorksheetFunction.Radians -> float
  WorksheetFunction.RandBetween -> float
  WorksheetFunction.Rank -> float
  WorksheetFunction.Rank_Avg -> float
  WorksheetFunction.Rank_Eq -> float
  WorksheetFunction.Rate -> float
  WorksheetFunction.Received -> float
  WorksheetFunction.Replace -> A String value that represents the new string, after replacement.
  WorksheetFunction.ReplaceB -> str
  WorksheetFunction.Rept -> str
  WorksheetFunction.Roman -> str
  WorksheetFunction.Round -> float
  WorksheetFunction.RoundDown -> float
  WorksheetFunction.RoundUp -> float
  WorksheetFunction.Rri -> float
  WorksheetFunction.RSq -> float
  WorksheetFunction.RTD -> list
  WorksheetFunction.Search -> float
  WorksheetFunction.SearchB -> float
  WorksheetFunction.Sec -> float
  WorksheetFunction.Sech -> float
  WorksheetFunction.SeriesSum -> float
  WorksheetFunction.Sinh -> float
  WorksheetFunction.Skew -> float
  WorksheetFunction.Skew_p -> float
  WorksheetFunction.Sln -> float
  WorksheetFunction.Slope -> float
  WorksheetFunction.Small -> float
  WorksheetFunction.SqrtPi -> float
  WorksheetFunction.Standardize -> float
  WorksheetFunction.StDev -> float
  WorksheetFunction.StDev_P -> float
  WorksheetFunction.StDev_S -> float
  WorksheetFunction.StDevP -> float
  WorksheetFunction.StEyx -> float
  WorksheetFunction.Substitute -> str
  WorksheetFunction.Subtotal -> A Double value that represents the subtotal.
  WorksheetFunction.Sum -> float
  WorksheetFunction.SumIf -> float
  WorksheetFunction.SumIfs -> float
  WorksheetFunction.SumProduct -> float
  WorksheetFunction.SumSq -> float
  WorksheetFunction.SumX2MY2 -> float
  WorksheetFunction.SumX2PY2 -> float
  WorksheetFunction.SumXMY2 -> float
  WorksheetFunction.Syd -> float
  WorksheetFunction.T_Dist -> float
  WorksheetFunction.T_Dist_2T -> float
  WorksheetFunction.T_Dist_RT -> float
  WorksheetFunction.T_Inv -> float
  WorksheetFunction.T_Inv_2T -> float
  WorksheetFunction.T_Test -> float
  WorksheetFunction.Tanh -> float
  WorksheetFunction.TBillEq -> float
  WorksheetFunction.TBillPrice -> float
  WorksheetFunction.TBillYield -> float
  WorksheetFunction.TDist -> float
  WorksheetFunction.Text -> str
  WorksheetFunction.TInv -> float
  WorksheetFunction.Transpose -> list
  WorksheetFunction.Trend -> list
  WorksheetFunction.Trim -> str
  WorksheetFunction.TrimMean -> float
  WorksheetFunction.TTest -> float
  WorksheetFunction.Unichar -> str
  WorksheetFunction.Unicode -> float
  WorksheetFunction.USDollar -> str
  WorksheetFunction.Var -> float
  WorksheetFunction.Var_P -> float
  WorksheetFunction.Var_S -> float
  WorksheetFunction.VarP -> float
  WorksheetFunction.Vdb -> float
  WorksheetFunction.VLookup -> list
  WorksheetFunction.WebService -> list
  WorksheetFunction.Weekday -> float
  WorksheetFunction.WeekNum -> float
  WorksheetFunction.Weibull -> float
  WorksheetFunction.Weibull_Dist -> float
  WorksheetFunction.WorkDay -> float
  WorksheetFunction.WorkDay_Intl -> float
  WorksheetFunction.Xirr -> float
  WorksheetFunction.Xnpv -> float
  WorksheetFunction.Xor -> bool
  WorksheetFunction.YearFrac -> float
  WorksheetFunction.YieldDisc -> float
  WorksheetFunction.YieldMat -> float
  WorksheetFunction.Z_Test -> float
  WorksheetFunction.ZTest -> float
  Characters.Delete -> list
  Characters.Insert -> list
  Comment.Delete -> 
  Comment.Next -> Comment
  Comment.Previous -> Comment
  Comment.Text -> str
  CommentThreaded.AddReply -> CommentThreaded
  CommentThreaded.Delete -> 
  CommentThreaded.Next -> CommentThreaded
  CommentThreaded.Previous -> CommentThreaded
  CommentThreaded.Text -> str
  FormatConditions.Add -> FormatCondition
  FormatConditions.AddAboveAverage -> AboveAverage object
  FormatConditions.AddColorScale -> ColorScale object
  FormatConditions.AddDatabar -> Databar object
  FormatConditions.AddIconSetCondition -> IconSetCondition object
  FormatConditions.AddTop10 -> Top10 object
  FormatConditions.AddUniqueValues -> UniqueValues object
  FormatConditions.Delete -> 
  FormatConditions.Item -> An Object value that represents an object contained by the collection.
  Hyperlinks.Add -> Hyperlink
  Hyperlinks.Delete -> 
  ListObject.Delete -> 
  ListObject.ExportToVisio -> 
  ListObject.Publish -> A String value that represents the URL of the published list on the SharePoint site.
  ListObject.Refresh -> 
  ListObject.Resize -> 
  ListObject.Unlink -> 
  ListObject.Unlist -> 
  PivotTable.AddDataField -> PivotField
  PivotTable.AddFields -> list
  PivotTable.AllocateChanges -> None
  PivotTable.CalculatedFields -> CalculatedFields
  PivotTable.ChangeConnection -> 
  PivotTable.ChangePivotCache -> 
  PivotTable.ClearAllFilters -> 
  PivotTable.ClearTable -> 
  PivotTable.CommitChanges -> None
  PivotTable.ConvertToFormulas -> 
  PivotTable.CreateCubeFile -> str
  PivotTable.DiscardChanges -> None
  PivotTable.DrillDown -> None
  PivotTable.DrillTo -> None
  PivotTable.DrillUp -> None
  PivotTable.GetData -> float
  PivotTable.GetPivotData -> Range
  PivotTable.ListFormulas -> 
  PivotTable.PivotCache -> PivotCache
  PivotTable.PivotFields -> object
  PivotTable.PivotSelect -> 
  PivotTable.PivotTableWizard -> 
  PivotTable.PivotValueCell -> PIVOTVALUECELL
  PivotTable.RefreshDataSourceValues -> None
  PivotTable.RefreshTable -> bool
  PivotTable.RepeatAllLabels -> None
  PivotTable.RowAxisLayout -> 
  PivotTable.ShowPages -> list
  PivotTable.SubtotalLocation -> 
  PivotTable.Update -> 
  Phonetics.Add -> 
  Phonetics.Delete -> 
  PivotCell.AllocateChange -> None
  PivotCell.DiscardChange -> None
  PivotField.AddPageItem -> 
  PivotField.AutoGroup -> 
  PivotField.AutoShow -> 
  PivotField.AutoSort -> 
  PivotField.CalculatedItems -> CalculatedItems
  PivotField.ClearAllFilters -> 
  PivotField.ClearLabelFilters -> 
  PivotField.ClearManualFilter -> 
  PivotField.ClearValueFilters -> 
  PivotField.Delete -> 
  PivotField.DrillTo -> 
  PivotField.PivotItems -> list
  PivotItem.Delete -> 
  PivotItem.DrillTo -> 
  QueryTable.CancelRefresh -> 
  QueryTable.Delete -> 
  QueryTable.Refresh -> bool
  QueryTable.ResetTimer -> 
  QueryTable.SaveAsODC -> 
  SparklineGroups.Add -> SparklineGroup
  SparklineGroups.Clear -> None
  SparklineGroups.ClearGroups -> None
  SparklineGroups.Group -> None
  SparklineGroups.Ungroup -> None
  Style.Delete -> list
  Validation.Add -> 
  Validation.Delete -> 
  Validation.Modify -> 
  Worksheet.Activate -> 
  Worksheet.Calculate -> 
  Worksheet.ChartObjects -> object
  Worksheet.CheckSpelling -> 
  Worksheet.CircleInvalid -> 
  Worksheet.ClearArrows -> 
  Worksheet.ClearCircles -> 
  Worksheet.Copy -> 
  Worksheet.Delete -> bool
  Worksheet.Evaluate -> list
  Worksheet.ExportAsFixedFormat -> 
  Worksheet.Move -> 
  Worksheet.OLEObjects -> object
  Worksheet.Paste -> 
  Worksheet.PasteSpecial -> 
  Worksheet.PivotTables -> object
  Worksheet.PivotTableWizard -> PivotTable
  Worksheet.PrintOut -> list
  Worksheet.PrintPreview -> 
  Worksheet.Protect -> 
  Worksheet.ResetAllPageBreaks -> 
  Worksheet.SaveAs -> 
  Worksheet.Scenarios -> object
  Worksheet.Select -> 
  Worksheet.SetBackgroundPicture -> 
  Worksheet.ShowAllData -> 
  Worksheet.ShowDataForm -> 
  Worksheet.Unprotect -> 
  Worksheet.XmlDataQuery -> Range
  Worksheet.XmlMapQuery -> Range
  XPath.Clear -> 
  XPath.SetValue -> 
  Walls.ClearFormats -> list
  Walls.Paste -> 
  Walls.Select -> list
  ChartArea.Clear -> list
  ChartArea.ClearContents -> list
  ChartArea.ClearFormats -> list
  ChartArea.Copy -> list
  ChartArea.Select -> A Variant value that represents the selected object.
  ChartTitle.Delete -> list
  ChartTitle.Select -> list
  DataTable.Delete -> 
  DataTable.Select -> 
  Floor.ClearFormats -> list
  Floor.Paste -> 
  Floor.Select -> list
  Legend.Clear -> list
  Legend.Delete -> list
  Legend.LegendEntries -> object
  Legend.Select -> list
  PlotArea.ClearFormats -> list
  PlotArea.Select -> list
  Shapes.AddCallout -> Shape
  Shapes.AddChart2 -> Shape
  Shapes.AddConnector -> Shape
  Shapes.AddCurve -> Shape
  Shapes.AddFormControl -> Shape
  Shapes.AddLabel -> Shape
  Shapes.AddLine -> Shape
  Shapes.AddOLEObject -> Shape
  Shapes.AddPicture -> Shape
  Shapes.AddPicture2 -> Shape
  Shapes.AddPolyline -> Shape
  Shapes.AddShape -> Shape
  Shapes.AddSmartArt -> Shape
  Shapes.AddTextbox -> Shape
  Shapes.AddTextEffect -> Shape
  Shapes.Add3DModel -> Shape
  Shapes.BuildFreeform -> FreeformBuilder
  Shapes.Item -> Shape
  Shapes.SelectAll -> 
  Pane.Activate -> bool
  Pane.LargeScroll -> list
  Pane.PointsToScreenPixelsX -> int
  Pane.PointsToScreenPixelsY -> int
  Pane.ScrollIntoView -> 
  Pane.SmallScroll -> list
  Connections.Add -> WorkbookConnection
  Connections.AddFromFile -> WorkbookConnection
  Connections.Item -> WorkbookConnection
  CustomViews.Add -> CustomView
  CustomViews.Item -> CustomView
  TableStyles.Add -> TableStyle
  TableStyles.Item -> TableStyle
  Model.AddConnection -> WORKBOOKCONNECTION
  Model.CreateModelWorkbookConnection -> WORKBOOKCONNECTION
  Model.Initialize -> None
  Model.Refresh -> None
  PublishObjects.Add -> A PublishObject object that represents the new item.
  PublishObjects.Delete -> 
  PublishObjects.Publish -> 
  Queries.Add -> WorkbookQuery
  Queries.Item -> WorkbookQuery
  SlicerCaches.Add -> SlicerCache
  Styles.Add -> Style
  Styles.Merge -> list
  WebOptions.UseDefaultFolderSuffix -> 
  Worksheets.Add -> An Object value that represents the new worksheet, chart, or macro sheet.
  Worksheets.Add2 -> object
  Worksheets.Copy -> 
  Worksheets.Delete -> 
  Worksheets.FillAcrossSheets -> 
  Worksheets.Move -> 
  Worksheets.PrintOut -> list
  Worksheets.PrintPreview -> 
  Worksheets.Select -> 
  XmlMaps.Add -> XmlMap
  XmlNamespaces.InstallManifest -> 
  HPageBreaks.Add -> HPageBreak
  VPageBreaks.Add -> VPageBreak
  Name.Delete -> 
  RecentFile.Delete -> 
  RecentFile.Open -> Workbook
  Watch.Delete -> 
  Shape.Apply -> 
  Shape.Copy -> 
  Shape.CopyPicture -> 
  Shape.Cut -> None
  Shape.Delete -> 
  Shape.Duplicate -> Shape
  Shape.Flip -> 
  Shape.IncrementLeft -> 
  Shape.IncrementRotation -> 
  Shape.IncrementTop -> 
  Shape.PickUp -> 
  Shape.RerouteConnections -> 
  Shape.ScaleHeight -> 
  Shape.ScaleWidth -> 
  Shape.Select -> 
  Shape.SetShapesDefaultProperties -> 
  Shape.Ungroup -> ShapeRange
  Shape.ZOrder -> 
  CommentsThreaded.Item -> CommentThreaded
  FormatCondition.Delete -> 
  FormatCondition.Modify -> 
  FormatCondition.ModifyAppliesToRange -> 
  FormatCondition.SetFirstPriority -> 
  FormatCondition.SetLastPriority -> 
  Hyperlink.AddToFavorites -> 
  Hyperlink.CreateNewDocument -> 
  Hyperlink.Delete -> 
  Hyperlink.Follow -> 
  ListColumns.Add -> ListColumn
  ListRows.Add -> ListRow
  TableObject.Delete -> None
  TableObject.Refresh -> BOOL
  XmlMap.Delete -> 
  XmlMap.Export -> XlXmlExportResult
  XmlMap.ExportXml -> XlXmlExportResult
  XmlMap.Import -> XlXmlImportResult
  XmlMap.ImportXml -> XlXmlImportResult
  CalculatedMembers.Add -> A CalculatedMember object that represents the new calculated field or calculated item.
  CalculatedMembers.AddCalculatedMember -> CALCULATEDMEMBER
  PivotTableChangeList.Add -> ValueChange
  CubeFields.AddSet -> CubeField
  CubeFields.GetMeasure -> CUBEFIELD
  PivotFormulas.Add -> PivotFormula
  PivotFormulas.Item -> PivotFormula
  Slicers.Add -> Slicer
  PivotItemList.Item -> PivotItem
  CubeField.AddMemberPropertyField -> 
  CubeField.AutoGroup -> 
  CubeField.ClearManualFilter -> 
  CubeField.CreatePivotFields -> 
  CubeField.Delete -> 
  Parameters.Add -> Parameter
  Parameters.Delete -> 
  Parameters.Item -> Parameter
  WorkbookConnection.Delete -> 
  WorkbookConnection.Refresh -> 
  SparklineGroup.Delete -> None
  SparklineGroup.Modify -> None
  SparklineGroup.ModifyDateRange -> None
  SparklineGroup.ModifyLocation -> None
  SparklineGroup.ModifySourceData -> None
  AutoFilter.ApplyFilter -> 
  AutoFilter.ShowAllData -> 
  Comments.Item -> Comment
  CustomProperties.Add -> CustomProperty
  Outline.ShowLevels -> list
  QueryTables.Add -> QueryTable
  QueryTables.Item -> QueryTable
  Sort.Apply -> 
  Sort.SetRange -> 
  ShapeRange.Align -> 
  ShapeRange.Apply -> 
  ShapeRange.Delete -> 
  ShapeRange.Distribute -> 
  ShapeRange.Duplicate -> 
  ShapeRange.Flip -> 
  ShapeRange.Group -> Shape
  ShapeRange.IncrementLeft -> 
  ShapeRange.IncrementRotation -> 
  ShapeRange.IncrementTop -> 
  ShapeRange.Item -> Shape
  ShapeRange.PickUp -> 
  ShapeRange.Regroup -> Shape
  ShapeRange.RerouteConnections -> 
  ShapeRange.ScaleHeight -> 
  ShapeRange.ScaleWidth -> 
  ShapeRange.Select -> 
  ShapeRange.SetShapesDefaultProperties -> 
  ShapeRange.Ungroup -> A ShapeRange object that represents the ungrouped shapes.
  ShapeRange.ZOrder -> 
  CustomView.Delete -> 
  CustomView.Show -> 
  ModelMeasures.Add -> ModelMeasure
  ModelMeasures.Item -> ModelMeasure
  ModelRelationships.Add -> MODELRELATIONSHIP
  ModelRelationships.DetectRelationships -> None
  ModelRelationships.Item -> ModelRelationship
  ModelTables.Item -> MODELTABLE
  WorkbookQuery.Delete -> None
  SlicerCache.ClearAllFilters -> None
  SlicerCache.ClearDateFilter -> None
  SlicerCache.ClearManualFilter -> None
  SlicerCache.Delete -> 
  HPageBreak.Delete -> 
  HPageBreak.DragOff -> 
  VPageBreak.Delete -> 
  VPageBreak.DragOff -> 
  CalloutFormat.AutomaticLength -> 
  CalloutFormat.CustomDrop -> 
  CalloutFormat.CustomLength -> 
  CalloutFormat.PresetDrop -> 
  ConnectorFormat.BeginConnect -> 
  ConnectorFormat.BeginDisconnect -> 
  ConnectorFormat.EndConnect -> 
  ConnectorFormat.EndDisconnect -> 
  ControlFormat.AddItem -> 
  ControlFormat.List -> list
  ControlFormat.RemoveAllItems -> 
  ControlFormat.RemoveItem -> 
  FillFormat.OneColorGradient -> 
  FillFormat.Patterned -> 
  FillFormat.PresetGradient -> 
  FillFormat.PresetTextured -> 
  FillFormat.Solid -> 
  FillFormat.TwoColorGradient -> 
  FillFormat.UserPicture -> 
  FillFormat.UserTextured -> 
  GroupShapes.Item -> Shape
  LinkFormat.Update -> 
  Model3DFormat.IncrementRotationX -> 
  Model3DFormat.IncrementRotationY -> 
  Model3DFormat.IncrementRotationZ -> 
  Model3DFormat.ResetModel -> 
  ShapeNodes.Delete -> 
  ShapeNodes.Insert -> 
  ShapeNodes.Item -> ShapeNode
  ShapeNodes.SetEditingType -> 
  ShapeNodes.SetPosition -> 
  ShapeNodes.SetSegmentType -> 
  OLEFormat.Activate -> 
  OLEFormat.Verb -> 
  PictureFormat.IncrementBrightness -> 
  PictureFormat.IncrementContrast -> 
  ShadowFormat.IncrementOffsetX -> 
  ShadowFormat.IncrementOffsetY -> 
  TextEffectFormat.ToggleVerticalText -> 
  TextFrame.Characters -> Characters
  TextFrame2.DeleteText -> 
  ThreeDFormat.IncrementRotationHorizontal -> 
  ThreeDFormat.IncrementRotationVertical -> 
  ThreeDFormat.IncrementRotationX -> 
  ThreeDFormat.IncrementRotationY -> 
  ThreeDFormat.IncrementRotationZ -> 
  ThreeDFormat.ResetRotation -> 
  ThreeDFormat.SetExtrusionDirection -> 
  ThreeDFormat.SetPresetCamera -> 
  ThreeDFormat.SetThreeDFormat -> 
  ListColumn.Delete -> 
  ListRow.Delete -> 
  XmlDataBinding.ClearSettings -> 
  XmlDataBinding.LoadSettings -> 
  XmlDataBinding.Refresh -> XlXmlImportResult
  ValueChange.Delete -> 
  PivotFormula.Delete -> 
  Slicer.Copy -> 
  Slicer.Cut -> 
  Slicer.Delete -> None
  PivotFields.Item -> An Object value that represents an object contained by the collection.
  Parameter.SetParam -> 
  DataFeedConnection.CancelRefresh -> None
  DataFeedConnection.Refresh -> None
  DataFeedConnection.SaveAsODC -> None
  Sparkline.ModifyLocation -> None
  Sparkline.ModifySourceData -> None
  CustomProperty.Delete -> 
  AllowEditRanges.Add -> An AllowEditRange object that represents the range.
  SortFields.Add -> SortField
  SortFields.Add2 -> SortField
  SortFields.Clear -> 
  ModelMeasure.Delete -> None
  ModelRelationship.Delete -> None
  ModelTable.Refresh -> None
  SlicerPivotTables.AddPivotTable -> None
  SlicerPivotTables.RemovePivotTable -> None
  SortField.Delete -> 
  SortField.ModifyKey -> 
  SortField.SetIcon -> 
  ModelTableColumns.Item -> MODELTABLECOLUMN
1069

ALL Class.Parameter => Type:
  Application.ActiveCell -> Range
  Application.ActiveChart -> Chart
  Application.ActiveEncryptionSession -> Returns a Long that represents the encryption session associated with the active document. Read-only.
  Application.ActivePrinter -> Returns or sets the name of the active printer. Read/write String.
  Application.ActiveProtectedViewWindow -> ProtectedViewWindow
  Application.ActiveSheet -> Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook. Returns Nothing if no sheet is active.
  Application.ActiveWindow -> Window
  Application.ActiveWorkbook -> Workbook
  Application.AddIns -> AddIns
  Application.AddIns2 -> AddIns2
  Application.AlertBeforeOverwriting -> True if Microsoft Excel displays a message before overwriting nonblank cells during a drag-and-drop editing operation. Read/write Boolean.
  Application.AltStartupPath -> Returns or sets the name of the alternate startup folder. Read/write String.
  Application.AlwaysUseClearType -> Returns or sets a Boolean that represents whether to use ClearType to display fonts in the menu, ribbon, and dialog box text. Read/write Boolean.
  Application.Application -> When used without an object qualifier, this property returns an Application object that represents the Microsoft Excel application.
  Application.ArbitraryXMLSupportAvailable -> Returns a Boolean value that indicates whether the XML features in Microsoft Excel are available. Read-only.
  Application.AskToUpdateLinks -> bool
  Application.Assistance -> IAssistance
  Application.AutoCorrect -> AutoCorrect
  Application.AutoFormatAsYouTypeReplaceHyperlinks -> bool
  Application.AutomationSecurity -> MsoAutomationSecurity
  Application.AutoPercentEntry -> True if entries in cells formatted as percentages aren't automatically multiplied by 100 as soon as they are entered. Read/write Boolean.
  Application.AutoRecover -> AutoRecover
  Application.Build -> Returns the Microsoft Excel build number. Read-only Long.
  Application.CalculateBeforeSave -> Calculation
  Application.Calculation -> XlCalculation
  Application.CalculationInterruptKey -> XlCalculationInterruptKey
  Application.CalculationState -> XlCalculationState
  Application.CalculationVersion -> Returns a number whose rightmost four digits are the minor calculation engine version number, and whose other digits (on the left) are the major version of Microsoft Excel. Read-only Long.
  Application.Caller -> Returns information about how Visual Basic was called (for more information, see the Remarks section).
  Application.CanPlaySounds -> 
  Application.CanRecordSounds -> 
  Application.Caption -> Returns or sets a String value that represents the name that appears in the title bar of the main Microsoft Excel window.
  Application.CellDragAndDrop -> True if dragging and dropping cells is enabled. Read/write Boolean.
  Application.Cells -> Range
  Application.ChartDataPointTrack -> True causes all charts in newly created documents to use the cell reference tracking behavior. Boolean.
  Application.Charts -> Sheets
  Application.ClipboardFormats -> Returns the formats that are currently on the Clipboard, as an array of numeric values. To determine whether a particular format is on the Clipboard, compare each element in the array with the appropriate constant listed in the Remarks section. Read-only Variant.
  Application.ClusterConnector -> Returns or sets the name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins. Read/write.
  Application.Columns -> Range
  Application.COMAddIns -> COMAddIns
  Application.CommandBars -> CommandBars
  Application.CommandUnderlines -> XlCommandUnderlines
  Application.ConstrainNumeric -> True if handwriting recognition is limited to numbers and punctuation only. Read/write Boolean.
  Application.ControlCharacters -> True if Microsoft Excel displays control characters for right-to-left languages. Read/write Boolean.
  Application.CopyObjectsWithCells -> True if objects are cut, copied, extracted, and sorted with cells. Read/write Boolean.
  Application.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Application.Cursor -> XlMousePointer
  Application.CursorMovement -> Returns or sets a value that indicates whether a visual cursor or a logical cursor is used. Can be one of the following constants: xlVisualCursor or xlLogicalCursor. Read/write Long.
  Application.CustomListCount -> Returns the number of defined custom lists (including built-in lists). Read-only Long.
  Application.CutCopyMode -> XLCutCopyMode
  Application.DataEntryMode -> Returns or sets Data Entry mode, as shown in the following table. When in Data Entry mode, you can enter data only in the unlocked cells in the currently selected range. Read/write Long.
  Application.DDEAppReturnCode -> Returns the application-specific DDE return code that was contained in the last DDE acknowledge message received by Microsoft Excel. Read-only Long.
  Application.DecimalSeparator -> Sets or returns the character used for the decimal separator as a String. Read/write.
  Application.DefaultFilePath -> Returns or sets the default path that Microsoft Excel uses when it opens files. Read/write String.
  Application.DefaultSaveFormat -> FileFormat
  Application.DefaultSheetDirection -> XlReadingOrder
  Application.DefaultWebOptions -> DefaultWebOptions
  Application.DeferAsyncQueries -> Gets or sets whether asynchronous queries to OLAP data sources are executed when a worksheet is calculated by VBA code. Read/write Boolean.
  Application.Dialogs -> Dialogs
  Application.DisplayAlerts -> True if Microsoft Excel displays certain alerts and messages while a macro is running. Read/write Boolean.
  Application.DisplayClipboardWindow -> Returns True if the Microsoft Office Clipboard can be displayed. Read/write Boolean.
  Application.DisplayCommentIndicator -> XlCommentDisplayMode
  Application.DisplayDocumentActionTaskPane -> bool
  Application.DisplayDocumentInformationPanel -> Returns or sets a Boolean that represents whether the document properties panel is displayed. Read/write Boolean.
  Application.DisplayExcel4Menus -> True if Microsoft Excel displays version 4.0 menu bars. Read/write Boolean.
  Application.DisplayFormulaAutoComplete -> Gets or sets whether to show a list of relevant functions and defined names when building cell formulas. Read/write Boolean.
  Application.DisplayFormulaBar -> True if the formula bar is displayed. Read/write Boolean.
  Application.DisplayFullScreen -> True if Microsoft Excel is in full-screen mode. Read/write Boolean.
  Application.DisplayFunctionToolTips -> True if function ToolTips can be displayed. Read/write Boolean.
  Application.DisplayInsertOptions -> True if the Insert Options button should be displayed. Read/write Boolean.
  Application.DisplayNoteIndicator -> True if cells containing notes display cell tips and contain note indicators (small dots in their upper-right corners). Read/write Boolean.
  Application.DisplayPasteOptions -> True if the Paste Options button can be displayed. Read/write Boolean.
  Application.DisplayRecentFiles -> True if the list of recently used files is displayed in the UI. Read/write Boolean.
  Application.DisplayScrollBars -> True if scroll bars are visible for all workbooks. Read/write Boolean.
  Application.DisplayStatusBar -> True if the status bar is displayed. Read/write Boolean.
  Application.EditDirectlyInCell -> True if Microsoft Excel allows editing in cells. Read/write Boolean.
  Application.EnableAnimations -> 
  Application.EnableAutoComplete -> True if the AutoComplete feature is enabled. Read/write Boolean.
  Application.EnableCancelKey -> XlEnableCancelKey
  Application.EnableCheckFileExtensions -> True to enable the Tell me if Microsoft Excel isn't the default program for viewing and editing spreadsheets dialog box. Read/write Boolean.
  Application.EnableEvents -> True if events are enabled for the specified object. Read/write Boolean.
  Application.EnableLargeOperationAlert -> Sets or returns a Boolean that represents whether to display an alert message when a user attempts to perform an operation that affects a larger number of cells than is specified in the Office Center UI. Read/write Boolean.
  Application.EnableLivePreview -> Sets or returns a Boolean that represents whether to show or hide gallery previews that appear when using galleries that support previewing. Setting this property to True shows a preview of your workbook before applying the command. Read/write Boolean.
  Application.EnableMacroAnimations -> bool
  Application.EnableSound -> True if sound is enabled for Microsoft Office. Read/write Boolean.
  Application.ErrorCheckingOptions -> ErrorCheckingOptions
  Application.Excel4IntlMacroSheets -> Sheets
  Application.Excel4MacroSheets -> Sheets
  Application.ExtendList -> True if Microsoft Excel automatically extends formatting and formulas to new data that is added to a list. Read/write Boolean.
  Application.FeatureInstall -> MsoFeatureInstall
  Application.FileConverters -> Returns information about installed file converters. Returns null if there are no converters installed. Read-only Variant.
  Application.FileDialog -> FileDialog
  Application.FileExportConverters -> FileExportConverters
  Application.FileValidation -> Returns or sets how Excel will validate files before opening them. Read/write.
  Application.FileValidationPivot -> Returns or sets how Excel will validate the contents of the data caches for PivotTable reports. Read/write.
  Application.FindFormat -> Sets or returns the search criteria for the type of cell formats to find.
  Application.FixedDecimal -> FixedDecimalPlaces
  Application.FixedDecimalPlaces -> FixedDecimal
  Application.FlashFill -> True indicates that the Excel Flash Fill feature has been enabled and active. Read/write Boolean.
  Application.FlashFillMode -> True if the Flash Fill feature is enabled. Read/write Boolean.
  Application.FormulaBarHeight -> Allows the user to specify the height of the formula bar in lines. Read/write Long.
  Application.GenerateGetPivotData -> Returns True when Microsoft Excel can get PivotTable report data. Read/write Boolean.
  Application.GenerateTableRefs -> The GenerateTableRefs property determines whether the traditional notation method or the new structured referencing notation method is used for referencing tables in formulas. Read/write.
  Application.Height -> points
  Application.HighQualityModeForGraphics -> Returns or sets whether Excel uses high quality mode to print graphics. Read/write.
  Application.Hinstance -> Returns a handle to the instance of Excel represented by the Application object. Read-only Long.
  Application.HinstancePtr -> Returns a handle to the instance of Excel represented by the specified Application object. Read-only Variant.
  Application.hWnd -> Returns a Long indicating the top-level window handle of the Microsoft Excel window. Read-only.
  Application.IgnoreRemoteRequests -> True if remote DDE requests are ignored. Read/write Boolean.
  Application.Interactive -> bool
  Application.International -> Returns information about the current country/region and international settings. Read-only Variant.
  Application.IsSandboxed -> Returns True if the specified workbook is open in a Protected View window. Read-only.
  Application.Iteration -> True if Microsoft Excel uses iteration to resolve circular references. Read/write Boolean.
  Application.LanguageSettings -> LanguageSettings
  Application.LargeOperationCellThousandCount -> Returns or sets the maximum number of cells needed in an operation beyond which an alert is triggered. Read/write Long.
  Application.Left -> points
  Application.LibraryPath -> Returns the path to the Library folder, but without the final separator. Read-only String.
  Application.MailSession -> Returns the MAPI mail session number as a hexadecimal string (if there's an active session), or returns null if there's no session. Read-only Variant.
  Application.MailSystem -> XlMailSystem
  Application.MapPaperSize -> True if documents formatted for the standard paper size of another country/region (for example, A4) are automatically adjusted so that they're printed correctly on the standard paper size (for example, Letter) of your country/region. Read/write Boolean.
  Application.MathCoprocessorAvailable -> True if a math coprocessor is available. Read-only Boolean.
  Application.MaxChange -> Returns or sets the maximum amount of change between each iteration as Microsoft Excel resolves circular references. Read/write Double.
  Application.MaxIterations -> Returns or sets the maximum number of iterations that Microsoft Excel can use to resolve a circular reference. Read/write Long.
  Application.MeasurementUnit -> XlMeasurementUnits
  Application.MergeInstances -> True to merge multiple instances of the application into a single instance. Read/write Boolean.
  Application.MouseAvailable -> True if a mouse is available. Read-only Boolean.
  Application.MoveAfterReturn -> True if the active cell is moved as soon as the Enter (Return) key is pressed. Read/write Boolean.
  Application.MoveAfterReturnDirection -> XlDirection
  Application.MultiThreadedCalculation -> MultiThreadedCalculation
  Application.Name -> Returns a String value that represents the name of the object.
  Application.Names -> Names
  Application.NetworkTemplatesPath -> Returns the network path where templates are stored. If the network path doesn't exist, this property returns an empty string. Read-only String.
  Application.NewWorkbook -> NewFile
  Application.ODBCErrors -> ODBCErrors
  Application.ODBCTimeout -> Returns or sets the ODBC query time limit, in seconds. The default value is 45 seconds. Read/write Long.
  Application.OLEDBErrors -> OLEDBErrors
  Application.OnWindow -> Returns or sets the name of the procedure that's run whenever you activate a window. Read/write String.
  Application.OperatingSystem -> Returns the name and version number of the current operating system. Read-only String.
  Application.OrganizationName -> Returns the registered organization name. Read-only String.
  Application.Parent -> Returns the parent object for the specified object. Read-only.
  Application.Path -> Returns a String value that represents the complete path to the application, excluding the final separator and name of the application.
  Application.PathSeparator -> Returns the path separator character (\). Read-only String.
  Application.PivotTableSelection -> True if PivotTable reports use structured selection. Read/write Boolean.
  Application.PreviousSelections -> Range
  Application.PrintCommunication -> Specifies whether communication with the printer is turned on. Read/write Boolean.
  Application.ProductCode -> Returns the globally unique identifier (GUID) for Microsoft Excel. Read-only String.
  Application.PromptForSummaryInfo -> True if Microsoft Excel asks for summary information when files are first saved. Read/write Boolean.
  Application.ProtectedViewWindows -> ProtectedViewWindows
  Application.QuickAnalysis -> QuickAnalysis
  Application.Range -> Range
  Application.Ready -> bool
  Application.RecentFiles -> RecentFiles
  Application.RecordRelative -> bool
  Application.ReferenceStyle -> XlReferenceStyle
  Application.RegisteredFunctions -> Returns information about functions in either dynamic-link libraries (DLLs) or code resources that were registered with the REGISTER or REGISTER.ID macro functions. Read-only Variant.
  Application.ReplaceFormat -> Replace
  Application.RollZoom -> True if the IntelliMouse zooms instead of scrolling. Read/write Boolean.
  Application.Rows -> Range
  Application.RTD -> RTD
  Application.ScreenUpdating -> True if screen updating is turned on. Read/write Boolean.
  Application.Selection -> TypeName
  Application.SensitivityLabelPolicy -> Returns the sensitivity label policy for the Application object.
  Application.Sheets -> Sheets
  Application.SheetsInNewWorkbook -> Returns or sets the number of sheets that Microsoft Excel automatically inserts into new workbooks. Read/write Long.
  Application.ShowChartTipNames -> True if charts show chart tip names. The default value is True. Read/write Boolean.
  Application.ShowChartTipValues -> True if charts show chart tip values. The default value is True. Read/write Boolean.
  Application.ShowDevTools -> Returns or sets a Boolean that represents whether the Developer tab is displayed in the ribbon. Read/write Boolean.
  Application.ShowMenuFloaties -> Returns or sets a Boolean that represents whether to display Mini toolbars when the user right-clicks in the workbook window. False if Mini toolbars are displayed. Read/write Boolean.
  Application.ShowQuickAnalysis -> Controls whether the Quick Analysis contextual user interface is displayed on selection. True means that the Quick Analysis button will show.
  Application.ShowSelectionFloaties -> Returns or sets a Boolean that represents whether Mini toolbars displays when a user selects text. False if Mini toolbars are displayed. Read/write Boolean.
  Application.ShowStartupDialog -> bool
  Application.ShowToolTips -> True if ToolTips are turned on. Read/write Boolean.
  Application.SmartArtColors -> SmartArtColors
  Application.SmartArtLayouts -> SmartArtLayouts
  Application.SmartArtQuickStyles -> SmartArtQuickStyles
  Application.Speech -> Speech
  Application.SpellingOptions -> SpellingOptions
  Application.StandardFont -> Returns or sets the name of the standard font. Read/write String.
  Application.StandardFontSize -> Returns or sets the standard font size, in points. Read/write Long.
  Application.StartupPath -> Returns the complete path of the startup folder, excluding the final separator. Read-only String.
  Application.StatusBar -> Returns or sets the text in the status bar. Read/write String.
  Application.TemplatesPath -> Returns the local path where templates are stored. Read-only String.
  Application.ThisCell -> Range
  Application.ThisWorkbook -> Workbook
  Application.ThousandsSeparator -> Sets or returns the character used for the thousands separator as a String. Read/write.
  Application.Top -> points
  Application.TransitionMenuKey -> Returns or sets the Microsoft Excel menu or help key, which is usually /. Read/write String.
  Application.TransitionMenuKeyAction -> Excel constants enumeration
  Application.TransitionNavigKeys -> True if transition navigation keys are active. Read/write Boolean.
  Application.UsableHeight -> Returns the maximum height of the space that a window can occupy in the application window area, in points. Read-only Double.
  Application.UsableWidth -> Returns the maximum width of the space that a window can occupy in the application window area, in points. Read-only Double.
  Application.UseClusterConnector -> Returns or sets whether Excel allows user-defined functions in XLL add-ins to be run on a compute cluster. Read/write.
  Application.UsedObjects -> UsedObjects
  Application.UserControl -> bool
  Application.UserLibraryPath -> Returns the path to the location on the user's computer where the COM add-ins are installed. Read-only String.
  Application.UserName -> Returns or sets the name of the current user. Read/write String.
  Application.UseSystemSeparators -> True (default) if the system separators of Microsoft Excel are enabled. Read/write Boolean.
  Application.Value -> Returns a String value that represents the name of the application.
  Application.VBE -> Returns a VBE object that represents the Visual Basic Editor. Read-only.
  Application.Version -> Returns a String value that represents the Microsoft Excel version number.
  Application.Visible -> Returns or sets a Boolean value that determines whether the object is visible. Read/write.
  Application.WarnOnFunctionNameConflict -> The WarnOnFunctionNameConflict property, when set to True, raises an alert if a developer tries to create a new function by using an existing function name. Read/write Boolean.
  Application.Watches -> Watches
  Application.Width -> points
  Application.Windows -> Windows
  Application.WindowsForPens -> True if the computer is running under Microsoft Windows for Pen Computing. Read-only Boolean.
  Application.WindowState -> XlWindowState
  Application.Workbooks -> Workbooks
  Application.WorksheetFunction -> WorksheetFunction
  Application.Worksheets -> Sheets
  Range.AddIndent -> Returns or sets a Variant value that indicates if text is automatically indented when the text alignment in a cell is set to equal distribution (either horizontally or vertically).
  Range.Address -> Returns a String value that represents the range reference in the language of the macro.
  Range.AddressLocal -> Returns the range reference for the specified range in the language of the user. Read-only String.
  Range.AllowEdit -> Returns a Boolean value that indicates if the range can be edited on a protected worksheet.
  Range.Application -> Application
  Range.Areas -> Areas
  Range.Borders -> Borders
  Range.Cells -> Returns a Range object that represents the cells in the specified range.
  Range.Characters -> Characters
  Range.Column -> Returns the number of the first column in the first area in the specified range. Read-only Long.
  Range.Columns -> Returns a Range object that represents the columns in the specified range.
  Range.ColumnWidth -> Returns or sets the width of all columns in the specified range. Read/write Double.
  Range.Comment -> Comment
  Range.CommentThreaded -> CommentThreaded
  Range.Count -> Returns a Long value that represents the number of objects in the collection.
  Range.CountLarge -> Returns a value that represents the number of objects in the collection. Read-only Variant.
  Range.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Range.CurrentArray -> If the specified cell is part of an array, returns a Range object that represents the entire array. Read-only.
  Range.CurrentRegion -> Returns a Range object that represents the current region. The current region is a range bounded by any combination of blank rows and blank columns. Read-only.
  Range.Dependents -> Returns a Range object that represents the range containing all the dependents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one dependent. Read-only Range object.
  Range.DirectDependents -> Returns a Range object that represents the range containing all the direct dependents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one dependent. Read-only Range object.
  Range.DirectPrecedents -> Returns a Range object that represents the range containing all the direct precedents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one precedent. Read-only Range object.
  Range.DisplayFormat -> DisplayFormat
  Range.End -> Returns a Range object that represents the cell at the end of the region that contains the source range. Equivalent to pressing END+UP ARROW, END+DOWN ARROW, END+LEFT ARROW, or END+RIGHT ARROW. Read-only Range object.
  Range.EntireColumn -> Returns a Range object that represents the entire column (or columns) that contains the specified range. Read-only.
  Range.EntireRow -> Returns a Range object that represents the entire row (or rows) that contains the specified range. Read-only.
  Range.Errors -> Allows the user to access error checking options.
  Range.Font -> Font
  Range.FormatConditions -> FormatConditions
  Range.Formula -> Returns or sets a Variant value that represents the object's implicitly intersecting formula in A1-style notation.
  Range.FormulaArray -> Returns or sets the array formula of a range. Returns (or can be set to) a single formula or a Visual Basic array. If the specified range doesn't contain an array formula, this property returns null. Read/write Variant.
  Range.FormulaHidden -> Returns or sets a Variant value that indicates if the formula will be hidden when the worksheet is protected.
  Range.FormulaLocal -> Returns or sets the formula for the object, using A1-style references in the language of the user. Read/write Variant.
  Range.FormulaR1C1 -> Returns or sets the formula for the object, using R1C1-style notation in the language of the macro. Read/write Variant.
  Range.FormulaR1C1Local -> Returns or sets the formula for the object, using R1C1-style notation in the language of the user. Read/write Variant.
  Range.HasArray -> True if the specified cell is part of an array formula. Read-only Variant.
  Range.HasFormula -> bool
  Range.HasRichDataType -> bool
  Range.Height -> points
  Range.Hidden -> Returns or sets a Variant value that indicates if the rows or columns are hidden.
  Range.HorizontalAlignment -> Returns or sets a Variant value that represents the horizontal alignment for the specified object. Read/write.
  Range.Hyperlinks -> Hyperlinks
  Range.ID -> Returns or sets a String value that represents the identifying label for the specified cell when the page is saved as a webpage.
  Range.IndentLevel -> Returns or sets a Variant value that represents the indent level for the cell or range. Can be an integer from 0 to 15.
  Range.Interior -> Interior
  Range.Item -> Returns a Range object that represents a range at an offset to the specified range.
  Range.Left -> points
  Range.LinkedDataTypeState -> Stocks or Geography
  Range.ListHeaderRows -> Returns the number of header rows for the specified range. Read-only Long.
  Range.ListObject -> ListObject
  Range.LocationInTable -> PivotTable
  Range.Locked -> Returns or sets a Variant value that indicates if the object is locked.
  Range.MDX -> Returns the MDX name for the specified Range object. Read-only String.
  Range.MergeArea -> Returns a Range object that represents the merged range containing the specified cell. If the specified cell isn't in a merged range, this property returns the specified cell. Read-only Variant.
  Range.MergeCells -> True if the range contains merged cells. Read/write Variant.
  Range.Name -> Returns or sets a Variant value that represents the name of the object.
  Range.Next -> Returns a Range object that represents the next cell.
  Range.NumberFormat -> Returns or sets a Variant value that represents the format code for the object.
  Range.NumberFormatLocal -> Returns or sets a Variant value that represents the format code for the object as a string in the language of the user.
  Range.Offset -> Returns a Range object that represents a range that's offset from the specified range.
  Range.Orientation -> Returns or sets a Variant value that represents the text orientation.
  Range.OutlineLevel -> Returns or sets the current outline level of the specified row or column. Read/write Variant.
  Range.PageBreak -> XlPageBreak
  Range.Parent -> Returns the parent object for the specified object. Read-only.
  Range.Phonetic -> Phonetic
  Range.Phonetics -> Phonetics
  Range.PivotCell -> PivotCell
  Range.PivotField -> PivotField
  Range.PivotItem -> PivotItem
  Range.PivotTable -> PivotTable
  Range.Precedents -> Returns a Range object that represents all the precedents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one precedent. Read-only.
  Range.PrefixCharacter -> Returns the prefix character for the cell. Read-only Variant.
  Range.Previous -> Returns a Range object that represents the previous cell.
  Range.QueryTable -> QueryTable
  Range.Range -> Returns a Range object that represents a cell or a range of cells.
  Range.ReadingOrder -> XlReadingOrder
  Range.Resize -> Resizes the specified range. Returns a Range object that represents the resized range.
  Range.Row -> Returns the number of the first row of the first area in the range. Read-only Long.
  Range.RowHeight -> points
  Range.Rows -> Returns a Range object that represents the rows in the specified range.
  Range.ServerActions -> Specifies the actions that can be performed on the SharePoint server for a Range object.
  Range.ShowDetail -> True if the outline is expanded for the specified range (so that the detail of the column or row is visible). The specified range must be a single summary column or row in an outline. Read/write Variant.
  Range.ShrinkToFit -> Returns or sets a Variant value that indicates if text automatically shrinks to fit in the available column width.
  Range.SoundNote -> 
  Range.SparklineGroups -> SparklineGroups
  Range.Style -> Style
  Range.Summary -> True if the range is an outlining summary row or column. The range should be a row or a column. Read-only Variant.
  Range.Text -> Returns the formatted text for the specified object. Read-only String.
  Range.Top -> points
  Range.UseStandardHeight -> True if the row height of the Range object equals the standard height of the sheet. Returns Null if the range contains more than one row and the rows aren't all the same height. Read/write Variant.
  Range.UseStandardWidth -> True if the column width of the Range object equals the standard width of the sheet. Returns null if the range contains more than one column and the columns aren't all the same width. Read/write Variant.
  Range.Validation -> Validation
  Range.Value -> Returns or sets a Variant value that represents the value of the specified range.
  Range.Value2 -> Returns or sets the cell value. Read/write Variant.
  Range.VerticalAlignment -> Returns or sets a Variant value that represents the vertical alignment of the specified object. Read/write.
  Range.Width -> points
  Range.Worksheet -> Worksheet
  Range.WrapText -> Returns or sets a Variant value that indicates if Microsoft Excel wraps the text in the object.
  Range.XPath -> XPath
  Chart.Application -> Application
  Chart.AutoScaling -> RightAngleAxes
  Chart.BackWall -> Walls
  Chart.BarShape -> XlBarShape
  Chart.CategoryLabelLevel -> XlCategoryLabelLevel
  Chart.ChartArea -> ChartArea
  Chart.ChartColor -> Returns or sets an Integer that represents the color scheme for the chart. Read/write.
  Chart.ChartStyle -> Returns or sets the chart style for the chart. Read/write Variant.
  Chart.ChartTitle -> ChartTitle
  Chart.ChartType -> XlChartType
  Chart.CodeName -> Returns the code name for the object. Read-only String.
  Chart.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Chart.DataTable -> DataTable
  Chart.DepthPercent -> Returns or sets the depth of a 3D chart as a percentage of the chart width (between 20 and 2000 percent). Read/write Long.
  Chart.DisplayBlanksAs -> XlDisplayBlanksAs
  Chart.Elevation -> Returns or sets the elevation of the 3D chart view, in degrees. Read/write Long.
  Chart.Floor -> Floor
  Chart.GapDepth -> Returns or sets the distance between the data series in a 3D chart as a percentage of the marker width. The value of this property must be between 0 and 500. Read/write Long.
  Chart.HasAxis -> Returns or sets which axes exist on the chart. Read/write Variant.
  Chart.HasDataTable -> True if the chart has a data table. Read/write Boolean.
  Chart.HasLegend -> True if the chart has a legend. Read/write Boolean.
  Chart.HasTitle -> True if the axis or chart has a visible title. Read/write Boolean.
  Chart.HeightPercent -> Returns or sets the height of a 3D chart as a percentage of the chart width (between 5 and 500 percent). Read/write Long.
  Chart.Hyperlinks -> Hyperlinks
  Chart.Index -> Returns a Long value that represents the index number of the object within the collection of similar objects.
  Chart.Legend -> Legend
  Chart.MailEnvelope -> Represents an email header for a document.
  Chart.Name -> Returns or sets a String value representing the name of the object.
  Chart.Next -> Worksheet
  Chart.PageSetup -> PageSetup
  Chart.Parent -> Returns the parent object for the specified object. Read-only.
  Chart.Perspective -> Returns or sets a Long value that represents the perspective for the 3D chart view.
  Chart.PivotLayout -> PivotLayout
  Chart.PlotArea -> PlotArea
  Chart.PlotBy -> XlRowCol
  Chart.PlotVisibleOnly -> bool
  Chart.Previous -> Worksheet
  Chart.PrintedCommentPages -> Returns the number of comment pages that will be printed for the current chart. Read-only.
  Chart.ProtectContents -> Protect
  Chart.ProtectData -> True if series formulas cannot be modified by the user. Read/write Boolean.
  Chart.ProtectDrawingObjects -> Protect
  Chart.ProtectFormatting -> True if chart formatting cannot be modified by the user. Read/write Boolean.
  Chart.ProtectionMode -> Protect
  Chart.ProtectSelection -> True if chart elements cannot be selected. Read/write Boolean.
  Chart.RightAngleAxes -> True if the chart axes are at right angles, independent of chart rotation or elevation. Applies only to 3D line, column, and bar charts. Read/write Boolean.
  Chart.Rotation -> Returns or sets the rotation of the 3D chart view (the rotation of the plot area around the z-axis, in degrees). The value of this property must be from 0 to 360, except for 3D bar charts, where the value must be from 0 to 44. The default value is 20. Applies only to 3D charts. Read/write Variant.
  Chart.SeriesNameLevel -> XlSeriesNameLevel
  Chart.Shapes -> Shapes
  Chart.ShowAllFieldButtons -> Returns or sets whether to display all field buttons on a PivotChart. Read/write.
  Chart.ShowAxisFieldButtons -> Returns or sets whether to display axis field buttons on a PivotChart. Read/write.
  Chart.ShowDataLabelsOverMaximum -> Returns or sets whether to show the data labels when the value is greater than the maximum value on the value axis. Read/write Boolean.
  Chart.ShowExpandCollapseEntireFieldButtons -> True to display the Expand Entire Field and Collapse Entire Field buttons on the specified PivotChart. Read/write Boolean.
  Chart.ShowLegendFieldButtons -> Returns or sets whether to display legend field buttons on a PivotChart. Read/write.
  Chart.ShowReportFilterFieldButtons -> Returns or sets whether to display the report filter field buttons on a PivotChart. Read/write.
  Chart.ShowValueFieldButtons -> Returns or sets whether to display the value field buttons on a PivotChart. Read/write.
  Chart.SideWall -> Walls
  Chart.Tab -> Tab
  Chart.Visible -> XlSheetVisibility
  Chart.Walls -> Walls
  ProtectedViewWindow.Caption -> Returns or sets a Variant value that represents the name that appears in the title bar of the Protected View window. Read/write.
  ProtectedViewWindow.EnableResize -> True if the Protected View window can be resized. Read/write.
  ProtectedViewWindow.Height -> points
  ProtectedViewWindow.Left -> points
  ProtectedViewWindow.SourceName -> Returns the name of the source file that is open in the specified Protected View window. Read-only.
  ProtectedViewWindow.SourcePath -> Returns the path of the source file that is open in the specified Protected View window. Read-only.
  ProtectedViewWindow.Top -> points
  ProtectedViewWindow.Visible -> Returns or sets a value that determines whether the specified Protected View window is visible. Read/write.
  ProtectedViewWindow.Width -> points
  ProtectedViewWindow.WindowState -> Returns or sets the state of the specified Protected View window. Read/write.
  ProtectedViewWindow.Workbook -> Returns an object that represents the workbook that is open in the specified Protected View window. Read-only.
  Window.ActiveCell -> Range
  Window.ActiveChart -> Chart
  Window.ActivePane -> Pane
  Window.ActiveSheet -> Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook. Returns Nothing if no sheet is active.
  Window.ActiveSheetView -> Returns an object that represents the view of the active sheet in the specified window. Read-only.
  Window.Application -> Application
  Window.AutoFilterDateGrouping -> True if the auto filter for date grouping is currently displayed in the specified window. Read/write Boolean.
  Window.Caption -> Returns or sets a Variant value that represents the name that appears in the title bar of the document window.
  Window.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Window.DisplayFormulas -> bool
  Window.DisplayGridlines -> True if gridlines are displayed. Read/write Boolean.
  Window.DisplayHeadings -> bool
  Window.DisplayHorizontalScrollBar -> True if the horizontal scroll bar is displayed. Read/write Boolean.
  Window.DisplayOutline -> True if outline symbols are displayed. Read/write Boolean.
  Window.DisplayRightToLeft -> bool
  Window.DisplayRuler -> True if a ruler is displayed for the specified window. Read/write Boolean.
  Window.DisplayVerticalScrollBar -> True if the vertical scroll bar is displayed. Read/write Boolean.
  Window.DisplayWhitespace -> True if whitespace is displayed. Read/write Boolean.
  Window.DisplayWorkbookTabs -> True if the workbook tabs are displayed. Read/write Boolean.
  Window.DisplayZeros -> True if zero values are displayed. Read/write Boolean.
  Window.EnableResize -> True if the window can be resized. Read/write Boolean.
  Window.FreezePanes -> True if split panes are frozen. Read/write Boolean.
  Window.GridlineColor -> Returns or sets the gridline color as an RGB value. Read/write Long.
  Window.GridlineColorIndex -> XlColorIndex
  Window.Height -> points
  Window.hWnd -> Returns a Long that indicates the window handle of the specified window. Read-only.
  Window.Index -> Returns a Long value that represents the index number of the object within the collection of similar objects.
  Window.Left -> points
  Window.OnWindow -> Returns or sets the name of the procedure that's run whenever you activate a window. Read/write String.
  Window.Panes -> Panes
  Window.Parent -> Returns the parent object for the specified object. Read-only.
  Window.RangeSelection -> Range
  Window.ScrollColumn -> Returns or sets the number of the leftmost column in the pane or window. Read/write Long.
  Window.ScrollRow -> Returns or sets the number of the row that appears at the top of the pane or window. Read/write Long.
  Window.SelectedSheets -> Sheets
  Window.Selection -> Windows
  Window.SheetViews -> SheetViews
  Window.Split -> True if the window is split. Read/write Boolean.
  Window.SplitColumn -> Returns or sets the column number where the window is split into panes (the number of columns to the left of the split line). Read/write Long.
  Window.SplitHorizontal -> points
  Window.SplitRow -> Returns or sets the row number where the window is split into panes (the number of rows above the split). Read/write Long.
  Window.SplitVertical -> points
  Window.TabRatio -> Returns or sets the ratio of the width of the workbook's tab area to the width of the window's horizontal scroll bar (as a number between 0 (zero) and 1; the default value is 0.6). Read/write Double.
  Window.Top -> points
  Window.Type -> XlWindowType
  Window.UsableHeight -> points
  Window.UsableWidth -> points
  Window.View -> XlWindowView
  Window.Visible -> Returns or sets a Boolean value that determines whether the object is visible. Read/write.
  Window.VisibleRange -> Range
  Window.Width -> points
  Window.WindowNumber -> Returns the window number. For example, a window named Book1.xls:2 has 2 as its window number. Most windows have the window number 1. Read-only Long.
  Window.WindowState -> XlWindowState
  Window.Zoom -> Returns or sets a Variant value that represents the display size of the window, as a percentage (100 equals normal size, 200 equals double size, and so on).
  Workbook.AccuracyVersion -> Specifies whether certain worksheet functions use the latest accuracy algorithms to calculate their results. Read/write.
  Workbook.ActiveChart -> Chart
  Workbook.ActiveSheet -> Worksheet
  Workbook.ActiveSlicer -> Returns an object that represents the active slicer in the active workbook or in the specified workbook. Returns Nothing if no slicer is active. Read-only.
  Workbook.Application -> Application
  Workbook.AutoSaveOn -> True if the edits in the workbook are automatically saved. Read/write Boolean.
  Workbook.AutoUpdateFrequency -> Returns or sets the number of minutes between automatic updates to the shared workbook. Read/write Long.
  Workbook.AutoUpdateSaveChanges -> bool
  Workbook.BuiltinDocumentProperties -> DocumentProperties
  Workbook.CalculationVersion -> Returns the information about the version of Excel that the workbook was last fully recalculated by. Read-only Long.
  Workbook.CaseSensitive -> True if the workbook distinguishes between uppercase and lowercase when comparing content. Read-only Boolean.
  Workbook.ChangeHistoryDuration -> Returns or sets the number of days shown in the shared workbook's change history. Read/write Long.
  Workbook.ChartDataPointTrack -> bool
  Workbook.Charts -> Sheets
  Workbook.CheckCompatibility -> Controls whether or not the compatibility checker is run automatically when the workbook is saved. Read/write Boolean.
  Workbook.CodeName -> Returns the code name for the object. Read-only String.
  Workbook.Colors -> Returns or sets colors in the palette for the workbook. The palette has 56 entries, each represented by an RGB value. Read/write Variant.
  Workbook.CommandBars -> CommandBars
  Workbook.ConflictResolution -> XlSaveConflictResolution
  Workbook.Connections -> Connections
  Workbook.ConnectionsDisabled -> Disables the external connections or links in the workbook. Read-only.
  Workbook.Container -> Returns the object that represents the container application for the specified OLE object. Read-only Object.
  Workbook.ContentTypeProperties -> MetaProperties
  Workbook.CreateBackup -> True if a backup file is created when this file is saved. Read-only Boolean.
  Workbook.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Workbook.CustomDocumentProperties -> DocumentProperties
  Workbook.CustomViews -> CustomViews
  Workbook.CustomXMLParts -> CustomXMLParts
  Workbook.Date1904 -> True if the workbook uses the 1904 date system. Read/write Boolean.
  Workbook.DefaultPivotTableStyle -> TableStyles
  Workbook.DefaultSlicerStyle -> TableStyles
  Workbook.DefaultTableStyle -> TableStyles
  Workbook.DefaultTimelineStyle -> The name of the default slicer style of the workbook. Read/write Variant.
  Workbook.DisplayDrawingObjects -> Returns or sets how shapes are displayed. Read/write Long.
  Workbook.DisplayInkComments -> A Boolean value that determines whether ink comments are displayed in the workbook. Read/write Boolean.
  Workbook.DocumentInspectors -> DocumentInspectors
  Workbook.DocumentLibraryVersions -> DocumentLibraryVersions
  Workbook.DoNotPromptForConvert -> Returns or sets if the user should be prompted to convert the workbook if the workbook contains features that are not supported by versions of Excel earlier than Excel 2007. Read/write Boolean.
  Workbook.EnableAutoRecover -> Saves changed files of all formats on a timed interval. Read/write Boolean.
  Workbook.EncryptionProvider -> Returns a String specifying the name of the algorithm encryption provider that Microsoft Excel uses when encrypting documents. Read/write.
  Workbook.EnvelopeVisible -> True if the email composition header and the envelope toolbar are both visible. Read/write Boolean.
  Workbook.Excel4IntlMacroSheets -> Sheets
  Workbook.Excel4MacroSheets -> Sheets
  Workbook.Excel8CompatibilityMode -> Provides developers with a way to check if the workbook is in compatibility mode. Read-only Boolean.
  Workbook.Final -> Returns or sets a Boolean that indicates whether a workbook is final. Read/write Boolean.
  Workbook.ForceFullCalculation -> Returns or sets the specified workbook to forced calculation mode. Read/write.
  Workbook.FullName -> Returns the name of the object, including its path on disk, as a string. Read-only String.
  Workbook.FullNameURLEncoded -> Returns a String indicating the name of the object, including its path on disk, as a string. Read-only.
  Workbook.HasPassword -> True if the workbook has a protection password. Read-only Boolean.
  Workbook.HasVBProject -> Returns a Boolean that represents whether a workbook has an attached Microsoft Visual Basic for Applications project. Read-only Boolean.
  Workbook.HighlightChangesOnScreen -> True if changes to the shared workbook are highlighted on-screen. Read/write Boolean.
  Workbook.IconSets -> IconSets
  Workbook.InactiveListBorderVisible -> A Boolean value that specifies whether list borders are visible when a list is not active. Returns True if the border is visible. Read/write Boolean.
  Workbook.IsAddin -> True if the workbook is running as an add-in. Read/write Boolean.
  Workbook.IsInplace -> bool
  Workbook.KeepChangeHistory -> True if change tracking is enabled for the shared workbook. Read/write Boolean.
  Workbook.ListChangesOnNewSheet -> True if changes to the shared workbook are shown on a separate worksheet. Read/write Boolean.
  Workbook.Mailer -> You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.
  Workbook.Model -> Model
  Workbook.MultiUserEditing -> True if the workbook is open as a shared list. Read-only Boolean.
  Workbook.Name -> Returns a String value that represents the name of the object.
  Workbook.Names -> Names
  Workbook.Parent -> Returns the parent object for the specified object. Read-only.
  Workbook.Password -> Returns or sets the password that must be supplied to open the specified workbook. Read/write String.
  Workbook.PasswordEncryptionAlgorithm -> Returns a String indicating the algorithm that Microsoft Excel uses to encrypt passwords for the specified workbook. Read-only.
  Workbook.PasswordEncryptionFileProperties -> True if Microsoft Excel encrypts file properties for the specified password-protected workbook. Read-only Boolean.
  Workbook.PasswordEncryptionKeyLength -> Returns a Long indicating the key length of the algorithm that Microsoft Excel uses when encrypting passwords for the specified workbook. Read-only.
  Workbook.PasswordEncryptionProvider -> Returns a String specifying the name of the algorithm encryption provider that Microsoft Excel uses when encrypting passwords for the specified workbook. Read-only.
  Workbook.Path -> Returns a String that represents the complete path to the workbook/file that this workbook object represents.
  Workbook.Permission -> Permission
  Workbook.PersonalViewListSettings -> True if filter and sort settings for lists are included in the user's personal view of the shared workbook. Read/write Boolean.
  Workbook.PersonalViewPrintSettings -> True if print settings are included in the user's personal view of the shared workbook. Read/write Boolean.
  Workbook.PivotTables -> Returns an object that represents a collection of all the PivotTable reports on a worksheet. Read-only.
  Workbook.PrecisionAsDisplayed -> True if calculations in this workbook are done by using only the precision of the numbers as they're displayed. Read/write Boolean.
  Workbook.ProtectStructure -> True if the order of the sheets in the workbook is protected. Read-only Boolean.
  Workbook.ProtectWindows -> True if the windows of the workbook are protected. Read-only Boolean.
  Workbook.PublishObjects -> PublishObjects
  Workbook.Queries -> Queries
  Workbook.ReadOnly -> Returns True if the object has been opened as read-only. Read-only Boolean.
  Workbook.ReadOnlyRecommended -> True if the workbook was saved as read-only recommended. Read-only Boolean.
  Workbook.RemovePersonalInformation -> bool
  Workbook.Research -> Returns a Research object that represents the research service for a workbook. Read-only.
  Workbook.RevisionNumber -> Returns the number of times the workbook has been saved while open as a shared list. If the workbook is open in exclusive mode, this property returns 0 (zero). Read-only Long.
  Workbook.Saved -> True if no changes have been made to the specified workbook since it was last saved. Read/write Boolean.
  Workbook.SaveLinkValues -> True if Microsoft Excel saves external link values with the workbook. Read/write Boolean.
  Workbook.SensitivityLabel -> Returns the Microsoft Office SensitivityLabel object from the Workbook.
  Workbook.ServerPolicy -> ServerPolicy
  Workbook.ServerViewableItems -> Allows a developer to interact with the list of published objects in the workbook that are shown on the server. Read-only.
  Workbook.SharedWorkspace -> 
  Workbook.Sheets -> Sheets
  Workbook.ShowConflictHistory -> True if the Conflict History worksheet is visible in the workbook that's open as a shared list. Read/write Boolean.
  Workbook.ShowPivotChartActiveFields -> This property controls the visibility of the PivotChart Filter pane. Read/write Boolean.
  Workbook.ShowPivotTableFieldList -> True (default) if the PivotTable field list can be shown. Read/write Boolean.
  Workbook.Signatures -> Returns the digital signatures for a workbook. Read-only.
  Workbook.SlicerCaches -> SlicerCaches
  Workbook.SmartDocument -> SmartDocument
  Workbook.Styles -> Styles
  Workbook.Sync -> 
  Workbook.TableStyles -> TableStyles
  Workbook.TemplateRemoveExtData -> True if external data references are removed when the workbook is saved as a template. Read/write Boolean.
  Workbook.Theme -> Returns the theme applied to the current workbook. Read-only.
  Workbook.UpdateLinks -> XlUpdateLink
  Workbook.UpdateRemoteReferences -> True if Microsoft Excel updates remote references in the workbook. Read/write Boolean.
  Workbook.UserStatus -> Returns a 1-based, two-dimensional array that provides information about each user who has the workbook open as a shared list. Read-only Variant.
  Workbook.UseWholeCellCriteria -> True if the workbook uses search patterns that match the entire content of a cell. Read-only Boolean.
  Workbook.UseWildcards -> True if the workbook enables wildcards for character string comparisons and searching. Read-only Boolean.
  Workbook.VBASigned -> True if the Visual Basic for Applications project for the specified workbook has been digitally signed. Read-only Boolean.
  Workbook.VBProject -> Returns a VBProject object that represents the Visual Basic project in the specified workbook. Read-only.
  Workbook.WebOptions -> WebOptions
  Workbook.Windows -> Windows
  Workbook.Worksheets -> Worksheets
  Workbook.WritePassword -> Returns or sets a String for the write password of a workbook. Read/write.
  Workbook.WriteReserved -> True if the workbook is write-reserved. Read-only Boolean.
  Workbook.WriteReservedBy -> Returns the name of the user who currently has write permission for the workbook. Read-only String.
  Workbook.XmlMaps -> XmlMaps
  Workbook.XmlNamespaces -> XmlNamespaces
  AddIns.Application -> Application
  AddIns.Count -> Returns a Long value that represents the number of objects in the collection.
  AddIns.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  AddIns.Item -> Returns a single object from a collection.
  AddIns.Parent -> Returns the parent object for the specified object. Read-only.
  AddIns2.Application -> Application
  AddIns2.Count -> Returns a Long value that represents the number of objects in the collection.
  AddIns2.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  AddIns2.Item -> Returns a single object from a collection.
  AddIns2.Parent -> Returns the parent object for the specified object. Read-only.
  AutoCorrect.Application -> Application
  AutoCorrect.AutoExpandListRange -> A Boolean value indicating whether automatic expansion is enabled for lists. When you type in a cell of an empty row or column next to a list, the list will expand to include that row or column if automatic expansion is enabled. Read/write Boolean.
  AutoCorrect.AutoFillFormulasInLists -> Affects the creation of calculated columns created by automatic fill-down lists. Read/write Boolean.
  AutoCorrect.CapitalizeNamesOfDays -> True if the first letter of day names is capitalized automatically. Read/write Boolean.
  AutoCorrect.CorrectCapsLock -> True if Microsoft Excel automatically corrects accidental use of the CapsLock key. Read/write Boolean.
  AutoCorrect.CorrectSentenceCap -> True if Microsoft Excel automatically corrects sentence (first word) capitalization. Read/write Boolean.
  AutoCorrect.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  AutoCorrect.DisplayAutoCorrectOptions -> Allows the user to display or hide the AutoCorrect Options button. The default value is True. Read/write Boolean.
  AutoCorrect.Parent -> Returns the parent object for the specified object. Read-only.
  AutoCorrect.ReplacementList -> Returns the array of AutoCorrect replacements.
  AutoCorrect.ReplaceText -> True if text in the list of AutoCorrect replacements is replaced automatically. Read/write Boolean.
  AutoCorrect.TwoInitialCapitals -> True if words that begin with two capital letters are corrected automatically. Read/write Boolean.
  AutoRecover.Application -> Application
  AutoRecover.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  AutoRecover.Enabled -> True if the object is enabled. Read/write Boolean.
  AutoRecover.Parent -> Returns the parent object for the specified object. Read-only.
  AutoRecover.Path -> Returns or sets a String value that represents the complete path to where Microsoft Excel will store the AutoRecover temporary files.
  AutoRecover.Time -> Sets or returns the time interval for the AutoRecover object. Permissible values are integers from 1 to 120 minutes. The default value is 10 minutes. Read/write Long.
  Sheets.Application -> Application
  Sheets.Count -> Returns a Long value that represents the number of objects in the collection.
  Sheets.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Sheets.HPageBreaks -> HPageBreaks
  Sheets.Item -> Returns a single object from a collection.
  Sheets.Parent -> Returns the parent object for the specified object. Read-only.
  Sheets.Visible -> Returns or sets a Variant value that determines whether the object is visible.
  Sheets.VPageBreaks -> VPageBreaks
  DefaultWebOptions.AllowPNG -> bool
  DefaultWebOptions.AlwaysSaveInDefaultEncoding -> bool
  DefaultWebOptions.Application -> Application
  DefaultWebOptions.CheckIfOfficeIsHTMLEditor -> bool
  DefaultWebOptions.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  DefaultWebOptions.DownloadComponents -> bool
  DefaultWebOptions.Encoding -> MsoEncoding
  DefaultWebOptions.FolderSuffix -> UseLongFileNames
  DefaultWebOptions.Fonts -> WebPageFonts
  DefaultWebOptions.LoadPictures -> bool
  DefaultWebOptions.LocationOfComponents -> Returns or sets the central URL (on the intranet or web) or path (local or network) to the location from which authorized users can download Microsoft Office Web components when viewing your saved document. The default value is the local or network installation path for Microsoft Office. Read/write String.
  DefaultWebOptions.OrganizeInFolder -> bool
  DefaultWebOptions.Parent -> Returns the parent object for the specified object. Read-only.
  DefaultWebOptions.PixelsPerInch -> Returns or sets the density (pixels per inch) of graphics images and table cells on a webpage. The range of settings is usually from 19 to 480, and common settings for popular screen sizes are 72, 96, and 120. The default setting is 96. Read/write Long.
  DefaultWebOptions.RelyOnCSS -> OrganizeInFolder
  DefaultWebOptions.RelyOnVML -> bool
  DefaultWebOptions.SaveHiddenData -> bool
  DefaultWebOptions.SaveNewWebPagesAsWebArchives -> True if new webpages can be saved as web archives. Read/write Boolean.
  DefaultWebOptions.ScreenSize -> MsoScreenSize
  DefaultWebOptions.TargetBrowser -> MsoTargetBrowser
  DefaultWebOptions.UpdateLinksOnSave -> bool
  DefaultWebOptions.UseLongFileNames -> bool
  Dialogs.Application -> Application
  Dialogs.Count -> Returns a Long value that represents the number of objects in the collection.
  Dialogs.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Dialogs.Item -> Returns a single object from a collection.
  Dialogs.Parent -> Returns the parent object for the specified object. Read-only.
  ErrorCheckingOptions.Application -> Application
  ErrorCheckingOptions.BackgroundChecking -> bool
  ErrorCheckingOptions.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ErrorCheckingOptions.EmptyCellReferences -> bool
  ErrorCheckingOptions.EvaluateToError -> bool
  ErrorCheckingOptions.InconsistentFormula -> bool
  ErrorCheckingOptions.InconsistentTableFormula -> Returns True if the table formula is inconsistent. Read/write Boolean.
  ErrorCheckingOptions.IndicatorColorIndex -> XlColorIndex
  ErrorCheckingOptions.ListDataValidation -> A Boolean value that is True if data validation is enabled in a list. Read/write Boolean.
  ErrorCheckingOptions.NumberAsText -> bool
  ErrorCheckingOptions.OmittedCells -> bool
  ErrorCheckingOptions.Parent -> Returns the parent object for the specified object. Read-only.
  ErrorCheckingOptions.TextDate -> bool
  ErrorCheckingOptions.UnlockedFormulaCells -> bool
  FileExportConverters.Application -> Application
  FileExportConverters.Count -> Returns a Long that represents the number of file converters in the collection. Read-only.
  FileExportConverters.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  FileExportConverters.Item -> FileExportConverter
  FileExportConverters.Parent -> Returns an Object that represents the parent object of the specified FileExportConverters object. Read-only.
  MultiThreadedCalculation.Application -> Application
  MultiThreadedCalculation.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  MultiThreadedCalculation.Enabled -> The Enabled property allows MultiThreadedCalculation objects to be enabled or disabled at run time. Read/write.
  MultiThreadedCalculation.Parent -> Returns the parent object for the specified object. Read-only.
  MultiThreadedCalculation.ThreadCount -> Gets the total count of the process threads that are a part of the specified MultiThreadedCalculation object.
  MultiThreadedCalculation.ThreadMode -> XlThreadMode
  Names.Application -> Application
  Names.Count -> Returns a Long value that represents the number of objects in the collection.
  Names.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Names.Parent -> Returns the parent object for the specified object. Read-only.
  ODBCErrors.Application -> Application
  ODBCErrors.Count -> Returns a Long value that represents the number of objects in the collection.
  ODBCErrors.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ODBCErrors.Parent -> Returns the parent object for the specified object. Read-only.
  OLEDBErrors.Application -> Application
  OLEDBErrors.Count -> Returns a Long value that represents the number of objects in the collection.
  OLEDBErrors.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  OLEDBErrors.Parent -> Returns the parent object for the specified object. Read-only.
  ProtectedViewWindows.Application -> Application
  ProtectedViewWindows.Count -> Returns a Long value that represents the number of objects in the collection.
  ProtectedViewWindows.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ProtectedViewWindows.Item -> Returns a single object from a collection.
  ProtectedViewWindows.Parent -> Returns the parent object for the specified object. Read-only.
  QuickAnalysis.Application -> Application
  QuickAnalysis.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  QuickAnalysis.Parent -> Returns an Object that represents the parent object of the specified QuickAnalysis object. Read-only.
  RecentFiles.Application -> Application
  RecentFiles.Count -> Returns a Long value that represents the number of objects in the collection.
  RecentFiles.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  RecentFiles.Item -> Returns a single object from a collection.
  RecentFiles.Maximum -> Returns or sets the maximum number of files in the list of recently used files. Can be a value from 0 (zero) through 50. Read/write Long.
  RecentFiles.Parent -> Returns the parent object for the specified object. Read-only.
  RTD.ThrottleInterval -> Returns or sets a Long indicating the time interval between updates. Read/write.
  Speech.Direction -> XlSpeakDirection
  Speech.SpeakCellOnEnter -> bool
  SpellingOptions.ArabicModes -> XlArabicModes
  SpellingOptions.ArabicStrictAlefHamza -> Returns or sets whether the spelling checker uses rules regarding Arabic words beginning with an alef hamza. Read/write.
  SpellingOptions.ArabicStrictFinalYaa -> Returns or sets whether the spelling checker uses rules regarding Arabic words ending with the letter yaa. Read/write.
  SpellingOptions.ArabicStrictTaaMarboota -> Returns or sets whether the spelling checker uses rules to flag Arabic words ending with haa instead of taa marboota. Read/write.
  SpellingOptions.BrazilReform -> Returns or sets the mode for checking the spelling of Brazilian Portuguese. Read/write.
  SpellingOptions.DictLang -> Selects the dictionary language used when Microsoft Excel performs spelling checks. Read/write Long.
  SpellingOptions.GermanPostReform -> bool
  SpellingOptions.HebrewModes -> XlHebrewModes
  SpellingOptions.IgnoreCaps -> False instructs Microsoft Excel to check for uppercase words; True instructs Excel to ignore words in uppercase when using the spelling checker. Read/write Boolean.
  SpellingOptions.IgnoreFileNames -> False instructs Microsoft Excel to check for Internet and file addresses; True instructs Excel to ignore Internet and file addresses when using the spell checker. Read/write Boolean.
  SpellingOptions.IgnoreMixedDigits -> False instructs Microsoft Excel to check for mixed digits; True instructs Excel to ignore mixed digits when checking spelling. Read/write Boolean.
  SpellingOptions.KoreanCombineAux -> When set to True, Microsoft Excel combines Korean auxiliary verbs and adjectives when spelling is checked. Read/write Boolean.
  SpellingOptions.KoreanProcessCompound -> When set to True, this enables Microsoft Excel to process Korean compound nouns when using the spelling checker. Read/write Boolean.
  SpellingOptions.KoreanUseAutoChangeList -> When set to True, this enables Microsoft Excel to use the auto-change list for Korean words when using the spelling checker. Read/write Boolean.
  SpellingOptions.PortugalReform -> Returns or sets the mode for checking the spelling of European Portuguese. Read/write.
  SpellingOptions.RussianStrictE -> Returns or sets whether the spelling checker uses rules regarding Russian words containing the character ë. Read/write.
  SpellingOptions.SpanishModes -> Returns or sets the mode for checking the spelling of Spanish. Read/write.
  SpellingOptions.SuggestMainOnly -> bool
  SpellingOptions.UserDict -> Instructs Microsoft Excel to create a custom dictionary to which new words can be added when performing spelling checks on a worksheet. Read/write String.
  UsedObjects.Application -> Application
  UsedObjects.Count -> Returns a Long value that represents the number of objects in the collection.
  UsedObjects.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  UsedObjects.Item -> Returns a single object from a collection.
  UsedObjects.Parent -> Returns the parent object for the specified object. Read-only.
  Watches.Application -> Application
  Watches.Count -> Returns a Long value that represents the number of objects in the collection.
  Watches.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Watches.Item -> Returns a single object from a collection.
  Watches.Parent -> Returns the parent object for the specified object. Read-only.
  Windows.Application -> Application
  Windows.Count -> Returns a Long value that represents the number of objects in the collection.
  Windows.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Windows.Item -> Returns a single object from a collection.
  Windows.Parent -> Returns the parent object for the specified object. Read-only.
  Windows.SyncScrollingSideBySide -> bool
  Workbooks.Application -> Application
  Workbooks.Count -> Returns a Long value that represents the number of objects in the collection.
  Workbooks.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Workbooks.Item -> Returns a single object from a collection.
  Workbooks.Parent -> Returns the parent object for the specified object. Read-only.
  WorksheetFunction.Application -> Application
  WorksheetFunction.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  WorksheetFunction.Parent -> Returns the parent object for the specified object. Read-only.
  Areas.Application -> Application
  Areas.Count -> Returns a Long value that represents the number of objects in the collection.
  Areas.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Areas.Item -> Returns a single object from a collection.
  Areas.Parent -> Returns the parent object for the specified object. Read-only.
  Borders.Application -> Application
  Borders.Color -> RGB
  Borders.ColorIndex -> Returns or sets a Variant value that represents the color of all four borders.
  Borders.Count -> Returns a Long value that represents the number of objects in the collection.
  Borders.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Borders.Item -> Border
  Borders.LineStyle -> XlLineStyle
  Borders.Parent -> Returns the parent object for the specified object. Read-only.
  Borders.ThemeColor -> Returns or sets the theme color in the applied color scheme that is associated with the specified object. Read/write Variant.
  Borders.TintAndShade -> Returns or sets a Single that lightens or darkens a color.
  Borders.Value -> Borders.LineStyle
  Borders.Weight -> XlBorderWeight
  Characters.Application -> Application
  Characters.Caption -> Returns a String value that represents the text of this range of characters.
  Characters.Count -> Returns a Long value that represents the number of objects in the collection.
  Characters.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Characters.Font -> Font
  Characters.Parent -> Returns the parent object for the specified object. Read-only.
  Characters.PhoneticCharacters -> Returns or sets the phonetic text in the specified Characters object. Read/write String.
  Characters.Text -> Returns or sets the text for the specified object. Read/write String.
  Comment.Application -> Application
  Comment.Author -> Returns the author of the comment. Read-only String.
  Comment.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Comment.Parent -> Returns the parent object for the specified object. Read-only.
  Comment.Shape -> Shape
  Comment.Visible -> Returns or sets a Boolean value that determines whether the object is visible. Read/write.
  CommentThreaded.Application -> Application
  CommentThreaded.Author -> Author
  CommentThreaded.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  CommentThreaded.Date -> Returns a date String-Variant that represents the date and time that a threaded comment was added in local time. Read-only.
  CommentThreaded.Parent -> Returns the parent object for the specified object. Read-only.
  CommentThreaded.Replies -> CommentsThreaded
  DisplayFormat.AddIndent -> Range
  DisplayFormat.Application -> Application
  DisplayFormat.Borders -> Borders
  DisplayFormat.Characters -> Characters
  DisplayFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  DisplayFormat.Font -> Font
  DisplayFormat.FormulaHidden -> Range
  DisplayFormat.HorizontalAlignment -> Range
  DisplayFormat.IndentLevel -> Range
  DisplayFormat.Interior -> Interior
  DisplayFormat.Locked -> Range
  DisplayFormat.MergeCells -> Range
  DisplayFormat.NumberFormat -> Range
  DisplayFormat.NumberFormatLocal -> Range
  DisplayFormat.Orientation -> Range
  DisplayFormat.Parent -> Returns the parent object for the specified object. Read-only.
  DisplayFormat.ReadingOrder -> Range
  DisplayFormat.ShrinkToFit -> Range
  DisplayFormat.Style -> Style
  DisplayFormat.VerticalAlignment -> Range
  DisplayFormat.WrapText -> Range
  Font.Application -> Application
  Font.Background -> XlBackground
  Font.Bold -> True if the font is bold. Read/write Variant.
  Font.Color -> RGB
  Font.ColorIndex -> Returns or sets a Variant value that represents the color of the font.
  Font.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Font.FontStyle -> Returns or sets the font style. Read/write String.
  Font.Italic -> True if the font style is italic. Read/write Boolean.
  Font.Name -> Returns or sets a Variant value that represents the name of the object.
  Font.Parent -> Returns the parent object for the specified object. Read-only.
  Font.Size -> Returns or sets the size of the font. Read/write Variant.
  Font.Strikethrough -> True if the font is struck through with a horizontal line. Read/write Boolean.
  Font.Subscript -> bool
  Font.Superscript -> bool
  Font.ThemeColor -> Returns or sets the theme color in the applied color scheme that is associated with the specified object. Read/write Variant.
  Font.ThemeFont -> XlThemeFont
  Font.TintAndShade -> Returns or sets a Single that lightens or darkens a color.
  Font.Underline -> Returns or sets the type of underline applied to the font. Read/write Variant.
  FormatConditions.Application -> Application
  FormatConditions.Count -> Returns a Long value that represents the number of objects in the collection.
  FormatConditions.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  FormatConditions.Parent -> Returns the parent object for the specified object. Read-only.
  Hyperlinks.Application -> Application
  Hyperlinks.Count -> Returns a Long value that represents the number of objects in the collection.
  Hyperlinks.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Hyperlinks.Item -> Returns a single object from a collection.
  Hyperlinks.Parent -> Returns the parent object for the specified object. Read-only.
  Interior.Application -> Application
  Interior.Color -> RGB
  Interior.ColorIndex -> Returns or sets a Variant value that represents the color of the interior.
  Interior.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Interior.Gradient -> Returns or sets the Gradient property of an Interior object of a selection. Read-only.
  Interior.InvertIfNegative -> True if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number. Read/write Variant.
  Interior.Parent -> Returns the parent object for the specified object. Read-only.
  Interior.Pattern -> XlPattern
  Interior.PatternColor -> RGB
  Interior.PatternColorIndex -> XlColorIndex
  Interior.PatternThemeColor -> Returns or sets a theme color pattern for an Interior object. Read/write Variant.
  Interior.PatternTintAndShade -> Returns or sets a tint and shade pattern for an Interior object. Read/write Variant.
  Interior.ThemeColor -> XlThemeColor
  Interior.TintAndShade -> Returns or sets a Single that lightens or darkens a color.
  ListObject.Active -> Returns a Boolean value indicating whether a ListObject object on a worksheet is active—that is, whether the active cell is inside the range of the ListObject object. Read-only Boolean.
  ListObject.AlternativeText -> Returns or sets the descriptive (alternative) text string for the specified table. Read/write.
  ListObject.Application -> Application
  ListObject.AutoFilter -> Filters a table using the AutoFilter feature. Read-only.
  ListObject.Comment -> Returns or sets the comment associated with the list object. Read/write String.
  ListObject.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ListObject.DataBodyRange -> Range
  ListObject.DisplayName -> Returns or sets the display name for the specified ListObject object. Read/write String.
  ListObject.DisplayRightToLeft -> bool
  ListObject.HeaderRowRange -> Range
  ListObject.InsertRowRange -> Range
  ListObject.ListColumns -> ListColumns
  ListObject.ListRows -> ListRows
  ListObject.Name -> Returns or sets a String value that represents the name of the ListObject object.
  ListObject.Parent -> Returns the parent object for the specified object. Read-only.
  ListObject.QueryTable -> QueryTable
  ListObject.Range -> Range
  ListObject.SharePointURL -> Returns a String representing the URL of the SharePoint list for a given ListObject object. Read-only String.
  ListObject.ShowAutoFilter -> Returns Boolean to indicate whether the AutoFilter will be displayed. Read/write Boolean.
  ListObject.ShowAutoFilterDropDown -> True when the AutoFilter drop-down for the ListObject object is displayed. Read/write Boolean.
  ListObject.ShowHeaders -> Returns or sets if the header information should be displayed for the specified ListObject object. Read/write Boolean.
  ListObject.ShowTableStyleColumnStripes -> Returns or sets if the Column Stripes table style is used for the specified ListObject object. Read/write Boolean.
  ListObject.ShowTableStyleFirstColumn -> Returns or sets if the first column is formatted for the specified ListObject object. Read/write Boolean.
  ListObject.ShowTableStyleLastColumn -> Returns or sets if the last column is displayed for the specified ListObject object. Read/write Boolean.
  ListObject.ShowTableStyleRowStripes -> Returns or sets if the Row Stripes table style is used for the specified ListObject object. Read/write Boolean.
  ListObject.ShowTotals -> Gets or sets a Boolean to indicate whether the Total row is visible. Read/write Boolean.
  ListObject.Slicers -> Returns a list of the table slicers associated with a ListObject. Read-only.
  ListObject.Sort -> Gets or sets the sort column or columns and sort order for the ListObject collection.
  ListObject.SourceType -> XlListObjectSourceType
  ListObject.Summary -> Returns or sets the description associated with the alternative text string for the specified table. Read/write.
  ListObject.TableObject -> TableObject
  ListObject.TableStyle -> Gets or sets the table style for the specified ListObject object. Read/write Variant.
  ListObject.TotalsRowRange -> Range
  ListObject.XmlMap -> XmlMap
  PivotTable.ActiveFilters -> Indicates the currently active filter in the specified PivotTable. Read-only.
  PivotTable.Allocation -> Returns or sets whether to run an UPDATE CUBE statement for each cell that is edited, or only when the user chooses to calculate changes when performing what-if analysis on a PivotTable based on an OLAP data source. Read/write.
  PivotTable.AllocationMethod -> Returns or sets the method to use to allocate values when performing what-if analysis on a PivotTable report based on an OLAP data source. Read/write.
  PivotTable.AllocationValue -> Returns or sets the value to allocate when performing what-if analysis on a PivotTable report based on an OLAP data source. Read/write.
  PivotTable.AllocationWeightExpression -> Returns or sets the MDX weight expression to use when performing what-if analysis on a PivotTable report based on an OLAP data source. Read/write.
  PivotTable.AllowMultipleFilters -> Sets or retrieves a value that indicates whether a PivotField can have multiple filters applied to it at the same time. Read/write Boolean.
  PivotTable.AlternativeText -> Returns or sets the descriptive (alternative) text string for the specified PivotTable. Read/write.
  PivotTable.Application -> Application
  PivotTable.CacheIndex -> Returns or sets the index number of the PivotTable cache. Read/write Long.
  PivotTable.CalculatedMembers -> CalculatedMembers
  PivotTable.CalculatedMembersInFilters -> Returns or sets whether to evaluate calculated members from OLAP servers in filters. Read/write.
  PivotTable.ChangeList -> PivotTableChangeList
  PivotTable.ColumnFields -> PivotField
  PivotTable.ColumnGrand -> True if the PivotTable report shows grand totals for columns. Read/write Boolean.
  PivotTable.ColumnRange -> Range
  PivotTable.CompactLayoutColumnHeader -> Specifies the caption that is displayed in the column header of a PivotTable when in compact row layout form. Read/write String.
  PivotTable.CompactLayoutRowHeader -> Specifies the caption that is displayed in the row header of a PivotTable when in compact row layout form. Read/write String.
  PivotTable.CompactRowIndent -> Returns or sets the indent increment for PivotItems when compact row layout form is turned on. Read/write.
  PivotTable.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PivotTable.CubeFields -> CubeFields
  PivotTable.DataBodyRange -> Range
  PivotTable.DataFields -> PivotField
  PivotTable.DataLabelRange -> Range
  PivotTable.DataPivotField -> PivotField
  PivotTable.DisplayContextTooltips -> Controls whether tooltips are displayed for PivotTable cells. Read/write Boolean.
  PivotTable.DisplayEmptyColumn -> bool
  PivotTable.DisplayEmptyRow -> bool
  PivotTable.DisplayErrorString -> bool
  PivotTable.DisplayFieldCaptions -> Controls whether filter buttons and PivotField captions for rows and columns are displayed in the grid. Read/write.
  PivotTable.DisplayImmediateItems -> Returns or sets a Boolean that indicates whether items in the row and column areas are visible when the data area of the PivotTable is empty. Set this property to False to hide the items in the row and column areas when the data area of the PivotTable is empty. The default value is True.
  PivotTable.DisplayMemberPropertyTooltips -> Controls whether to display member properties in tooltips. Read/write Boolean.
  PivotTable.DisplayNullString -> True if the PivotTable report displays a custom string in cells that contain null values. The default value is True. Read/write Boolean.
  PivotTable.EnableDataValueEditing -> bool
  PivotTable.EnableDrilldown -> True if drilldown is enabled. The default value is True. Read/write Boolean.
  PivotTable.EnableFieldDialog -> True if the PivotTable Field dialog box is available when the user double-clicks the PivotTable field. The default value is True. Read/write Boolean.
  PivotTable.EnableFieldList -> False to disable the ability to display the field list for the PivotTable. If the field list was already being displayed, it disappears. The default value is True. Read/write Boolean.
  PivotTable.EnableWizard -> True if the PivotTable Wizard is available. The default value is True. Read/write Boolean.
  PivotTable.EnableWriteback -> Returns or sets whether writing back to the data source is enabled for the specified PivotTable. The default value is False. Read/write.
  PivotTable.ErrorString -> DisplayErrorString
  PivotTable.FieldListSortAscending -> bool
  PivotTable.GrandTotalName -> Returns or sets the text string label that is displayed in the grand total column or row heading in the specified PivotTable report. The default value is the string Grand Total. Read/write String.
  PivotTable.HasAutoFormat -> True if the PivotTable report is automatically formatted when it's refreshed or when fields are moved. Read/write Boolean.
  PivotTable.Hidden -> Checks whether the PivotTable exists at the worksheet level. Read-only Boolean.
  PivotTable.HiddenFields -> PivotField
  PivotTable.InGridDropZones -> This property is used to toggle in-grid drop zones for a PivotTable object. In some cases, it also affects the layout of the PivotTable. Read/write Boolean.
  PivotTable.InnerDetail -> Returns or sets the name of the field that will be shown as detail when the ShowDetail property is True for the innermost row or column field. Read/write String.
  PivotTable.LayoutRowDefault -> XlLayoutRowType
  PivotTable.Location -> Gets or sets a String that represents the top-left cell in the body of the specified PivotTable object. Read/write.
  PivotTable.ManualUpdate -> bool
  PivotTable.MDX -> Returns a String indicating the Multidimensional Expression (MDX) that would be sent to the provider to populate the current PivotTable view. Read-only.
  PivotTable.MergeLabels -> True if the specified PivotTable report's outer-row item, column item, subtotal, and grand total labels use merged cells. Read/write Boolean.
  PivotTable.Name -> Returns or sets a String value representing the name of the object.
  PivotTable.NullString -> DisplayNullString
  PivotTable.PageFieldOrder -> XlOrder
  PivotTable.PageFields -> PivotField
  PivotTable.PageFieldStyle -> Returns or sets the style used in the bound page field area. The default value is a null string (no style is applied by default). Read/write String.
  PivotTable.PageFieldWrapCount -> Returns or sets the number of page fields in each column or row in the PivotTable report. Read/write Long.
  PivotTable.PageRange -> Range
  PivotTable.PageRangeCells -> Range
  PivotTable.Parent -> Returns the parent object for the specified object. Read-only.
  PivotTable.PivotChart -> Shape
  PivotTable.PivotColumnAxis -> PivotAxis
  PivotTable.PivotFormulas -> PivotFormulas
  PivotTable.PivotRowAxis -> PivotAxis
  PivotTable.PivotSelection -> Returns or sets the PivotTable selection in standard PivotTable report selection format. Read/write String.
  PivotTable.PivotSelectionStandard -> Returns or sets a String indicating the PivotTable selection in standard PivotTable report format using English (United States) settings. Read/write.
  PivotTable.PreserveFormatting -> True if formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.
  PivotTable.PrintDrillIndicators -> Specifies whether drill indicators are printed with the PivotTable. Read/write Boolean.
  PivotTable.PrintTitles -> bool
  PivotTable.RefreshDate -> Returns the date on which the PivotTable report was last refreshed. Read-only Date.
  PivotTable.RefreshName -> Returns the name of the person who last refreshed the PivotTable report data. Read-only String.
  PivotTable.RepeatItemsOnEachPrintedPage -> bool
  PivotTable.RowFields -> PivotField
  PivotTable.RowGrand -> True if the PivotTable report shows grand totals for rows. Read/write Boolean.
  PivotTable.RowRange -> Range
  PivotTable.SaveData -> bool
  PivotTable.SelectionMode -> XlPTSelectionMode
  PivotTable.ShowDrillIndicators -> The ShowDrillIndicators property is used for toggling the display of drill indicators in the PivotTable. Read/write Boolean.
  PivotTable.ShowPageMultipleItemLabel -> When set to True (default), "(Multiple Items)" will appear in the PivotTable cell on the worksheet whenever items are hidden and an aggregate of non-hidden items is shown in the PivotTable view. Read/write Boolean.
  PivotTable.ShowTableStyleColumnHeaders -> The ShowTableStyleColumnHeaders property is set to True if the column headers should be displayed in the PivotTable. Read/write Boolean.
  PivotTable.ShowTableStyleColumnStripes -> The ShowTableStyleColumnStripes property displays banded columns in which even columns are formatted differently from odd columns. This makes PivotTables easier to read. Read/write Boolean.
  PivotTable.ShowTableStyleLastColumn -> Returns or sets if the last column is displayed for the specified PivotTable object. Read/write Boolean.
  PivotTable.ShowTableStyleRowHeaders -> The ShowTableStyleRowHeaders property is set to True if the row headers should be displayed in the PivotTable. Read/write Boolean.
  PivotTable.ShowTableStyleRowStripes -> The ShowTableStyleRowStripes property displays banded rows in which even rows are formatted differently from odd rows. This makes PivotTables easier to read. Read/write Boolean.
  PivotTable.ShowValuesRow -> Returns or sets whether the values row is displayed. Read/write.
  PivotTable.Slicers -> Slicers
  PivotTable.SmallGrid -> bool
  PivotTable.SortUsingCustomLists -> The SortUsingCustomLists property controls whether custom lists are used for sorting items of fields, both initially when the PivotField is initialized and the PivotItems are ordered by their captions, and later when the user applies a sort. Read/write Boolean.
  PivotTable.SourceData -> Returns the data source for the PivotTable report, as shown in the following table. Read/write Variant.
  PivotTable.SubtotalHiddenPageItems -> bool
  PivotTable.Summary -> Returns or sets the description associated with the alternative text string for the specified PivotTable. Read/write.
  PivotTable.TableRange1 -> Range
  PivotTable.TableRange2 -> Range
  PivotTable.TableStyle2 -> The TableStyle2 property specifies the PivotTable style currently applied to the PivotTable. Read/write.
  PivotTable.Tag -> Returns or sets a string saved with the PivotTable report. Read/write String.
  PivotTable.TotalsAnnotation -> True if an asterisk (*) is displayed next to each subtotal and grand total value in the specified PivotTable report if the report is based on an OLAP data source. The default value is True. Read/write Boolean.
  PivotTable.VacatedStyle -> Returns or sets the style applied to cells vacated when the PivotTable report is refreshed. The default value is a null string (no style is applied by default). Read/write String.
  PivotTable.Value -> Returns or sets a String value that represents the name of the PivotTable report.
  PivotTable.Version -> XlPivotTableVersionList
  PivotTable.ViewCalculatedMembers -> When set to True (default), calculated members for Online Analytical Processing (OLAP) PivotTables can be viewed. Read/write Boolean.
  PivotTable.VisibleFields -> PivotField
  PivotTable.VisualTotals -> True (default) to enable Online Analytical Processing (OLAP) PivotTables to retotal after an item has been hidden from view. Read/write Boolean.
  PivotTable.VisualTotalsForSets -> Returns or sets whether to include filtered items in the totals of named sets for the specified PivotTable. Read/write.
  Phonetic.Alignment -> Returns or sets a Long value that represents the alignment for the specified phonetic text or tick label.
  Phonetic.Application -> Application
  Phonetic.CharacterType -> XlPhoneticCharacterType
  Phonetic.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Phonetic.Font -> Font
  Phonetic.Parent -> Returns the parent object for the specified object. Read-only.
  Phonetic.Text -> Returns or sets the text for the specified object. Read/write String.
  Phonetic.Visible -> Returns or sets a Boolean value that determines whether the object is visible. Read/write.
  Phonetics.Alignment -> Returns or sets a Long value that represents the alignment for the specified phonetic text or tick label.
  Phonetics.Application -> Application
  Phonetics.CharacterType -> XlPhoneticCharacterType
  Phonetics.Count -> Returns a Long value that represents the number of objects in the collection.
  Phonetics.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Phonetics.Font -> Font
  Phonetics.Item -> Returns a single object from a collection.
  Phonetics.Length -> Start
  Phonetics.Parent -> Returns the parent object for the specified object. Read-only.
  Phonetics.Start -> Returns the position that represents the first character of a phonetic text string in the specified cell. Read-only Long.
  Phonetics.Text -> Returns or sets the text for the specified object. Read/write String.
  Phonetics.Visible -> Returns or sets a Boolean value that determines whether the object is visible. Read/write.
  PivotCell.Application -> Application
  PivotCell.CellChanged -> Returns whether a PivotTable value cell has been edited or recalculated since the PivotTable report was created or the last commit operation was performed. Read-only.
  PivotCell.ColumnItems -> PivotItemList
  PivotCell.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PivotCell.CustomSubtotalFunction -> XlConsolidationFunction
  PivotCell.DataField -> PivotField
  PivotCell.DataSourceValue -> Returns the value last retrieved from the data source for edited cells in a PivotTable report. Read-only.
  PivotCell.MDX -> Returns a tuple that provides the full MDX coordinates of the specified value cell in a PivotTable with an OLAP data source. Read-only.
  PivotCell.Parent -> Returns the parent object for the specified object. Read-only.
  PivotCell.PivotCellType -> XlPivotCellType
  PivotCell.PivotColumnLine -> PivotLine
  PivotCell.PivotField -> PivotField
  PivotCell.PivotItem -> PivotItem
  PivotCell.PivotRowLine -> PivotLine
  PivotCell.PivotTable -> PivotTable
  PivotCell.Range -> Range
  PivotCell.RowItems -> PivotItemList
  PivotCell.ServerActions -> Represents a collection of actions consisting of OLAP-defined actions that can be executed. The actions are specific to PivotTables existing at a worksheet-level. Read-only.
  PivotField.AllItemsVisible -> Used to retrieve a Boolean value that indicates whether any manual filtering is applied to the PivotField. Read-only.
  PivotField.Application -> Application
  PivotField.AutoShowCount -> Returns the number of top or bottom items that are automatically shown in the specified PivotTable field. Read-only Long.
  PivotField.AutoShowField -> Returns the name of the data field used to determine the top or bottom items that are automatically shown in the specified PivotTable field. Read-only String.
  PivotField.AutoShowRange -> constant
  PivotField.AutoShowType -> constant
  PivotField.AutoSortCustomSubtotal -> Returns the name of the custom subtotal used to sort the specified PivotTable field automatically. Read-only.
  PivotField.AutoSortField -> Returns the name of the data field used to sort the specified PivotTable field automatically. Read-only String.
  PivotField.AutoSortOrder -> XlSortOrder
  PivotField.AutoSortPivotLine -> PivotLine
  PivotField.BaseField -> Returns or sets the base field for a custom calculation. This property is valid only for data fields. Read/write Variant.
  PivotField.BaseItem -> Returns or sets the item in the base field for a custom calculation. Valid only for data fields. Read/write Variant.
  PivotField.Calculation -> XlPivotFieldCalculation
  PivotField.Caption -> Returns a String value that represents the label text for the pivot field.
  PivotField.ChildField -> Returns a PivotField object that represents the child field for the specified field (if the field is grouped and has a child field). Read-only.
  PivotField.ChildItems -> PivotItem
  PivotField.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PivotField.CubeField -> CubeField
  PivotField.CurrentPage -> PivotItem
  PivotField.CurrentPageList -> Returns or sets an array of strings corresponding to the list of items included in a multiple-item page field of a PivotTable report. Read/write Variant.
  PivotField.CurrentPageName -> Returns or sets the currently displayed page of the specified PivotTable report. The name of the page appears in the page field. Note that this property works only if the currently displayed page already exists. Read/write String.
  PivotField.DatabaseSort -> When set to True, manual repositioning of items in a PivotTable field is allowed. Returns True if the field has no manually positioned items. Read/write Boolean.
  PivotField.DataRange -> Range
  PivotField.DataType -> XlPivotFieldDataType
  PivotField.DisplayAsCaption -> This property is used to display member properties of PivotFields as captions. Read-only.
  PivotField.DisplayAsTooltip -> This property is used to specify whether a specific member property PivotField is displayed in tooltips. Read/write Boolean.
  PivotField.DisplayInReport -> This property is used to specify whether the specified member property PivotField is displayed in the PivotTable or not. Read/write Boolean.
  PivotField.DragToColumn -> True if the specified field can be dragged to the column position. The default value is True. Read/write Boolean.
  PivotField.DragToData -> True if the specified field can be dragged to the data position. The default value is True. Read/write Boolean.
  PivotField.DragToHide -> True if the field can be hidden by being dragged off the PivotTable report. The default value is True. Read/write Boolean.
  PivotField.DragToPage -> True if the field can be dragged to the page position. The default value is True. Read/write Boolean.
  PivotField.DragToRow -> True if the field can be dragged to the row position. The default value is True. Read/write Boolean.
  PivotField.DrilledDown -> True if the flag for the specified PivotTable field or PivotTable item is set to "drilled" (expanded, or visible). Read/write Boolean.
  PivotField.EnableItemSelection -> When set to False, disables the ability to use the field dropdown in the user interface. The default value is True. Read/write Boolean.
  PivotField.EnableMultiplePageItems -> Used for specifying whether check boxes are present in the filter drop-down list for fields in the page area. Read/write Boolean.
  PivotField.Formula -> Returns or sets a String value that represents the object's formula in A1-style notation and in the language of the macro.
  PivotField.Function -> XlConsolidationFunction
  PivotField.GroupLevel -> Returns the placement of the specified field within a group of fields (if the field is a member of a grouped set of fields). Read-only.
  PivotField.Hidden -> This property is used to hide the individual levels of an OLAP hierarchy. Read/write Boolean.
  PivotField.HiddenItems -> PivotItem
  PivotField.HiddenItemsList -> Returns or sets a Variant specifying an array of strings that are hidden items for a PivotTable field. Read/write.
  PivotField.IncludeNewItemsInFilter -> Allows developers to specify whether excluded or included items should be tracked when manual filtering is applied to the PivotField. Read/write Boolean.
  PivotField.IsCalculated -> True if the PivotTable field is a calculated field or item. Read-only Boolean.
  PivotField.IsMemberProperty -> Returns True when the PivotField contains member properties. Read-only Boolean.
  PivotField.LabelRange -> Range
  PivotField.LayoutBlankLine -> bool
  PivotField.LayoutCompactRow -> Specifies whether or not a PivotField is compacted (items of multiple PivotFields are displayed in a single column) when rows are selected. Read/write Boolean.
  PivotField.LayoutForm -> XlLayoutFormType
  PivotField.LayoutPageBreak -> bool
  PivotField.LayoutSubtotalLocation -> XlSubtotalLocationType
  PivotField.MemberPropertyCaption -> Setting the MemberPropertyCaption property controls which member property is used as a caption for a given level. Read/write Boolean.
  PivotField.MemoryUsed -> Returns the amount of memory currently being used by the object, in bytes. Read-only Long.
  PivotField.Name -> Returns or sets a String value representing the name of the object.
  PivotField.NumberFormat -> Returns or sets a String value that represents the format code for the object.
  PivotField.Orientation -> XlPivotFieldOrientation
  PivotField.Parent -> Returns the parent object for the specified object. Read-only.
  PivotField.ParentField -> Returns a PivotField object that represents the PivotTable field that's the group parent of the specified object. The field must be grouped and must have a parent field. Read-only.
  PivotField.ParentItems -> PivotItem
  PivotField.PivotFilters -> Returns or sets the PivotFilters for the specified PivotField object. Read-only.
  PivotField.Position -> Returns or sets a Variant value that represents the position of the field (first, second, third, and so on) among all the fields in its orientation (Rows, Columns, Pages, Data).
  PivotField.PropertyOrder -> Valid only for PivotTable fields that are member property fields. Returns a Long indicating the display position of the member property within the cube field to which it belongs. Read/write.
  PivotField.PropertyParentField -> Returns a PivotField object representing the field to which the properties in this field pertain.
  PivotField.RepeatLabels -> Returns or sets whether item labels are repeated in the PivotTable for the specified PivotField. Read/write.
  PivotField.ServerBased -> True if the data source for the specified PivotTable report is external and only the items matching the page field selection are retrieved. Read/write Boolean.
  PivotField.ShowAllItems -> bool
  PivotField.ShowDetail -> Gets or sets whether the specified PivotField object is showing detail. Read/write Boolean.
  PivotField.ShowingInAxis -> Indicates if the PivotField is currently visible in the PivotTable or not. Read-only.
  PivotField.SourceCaption -> The SourceCaption property is applicable only for OLAP PivotTables, and returns the original caption from the OLAP server for a PivotField. Read-only.
  PivotField.SourceName -> Returns a String value that represents the specified object's name as it appears in the original source data for the specified PivotTable report.
  PivotField.StandardFormula -> Returns or sets a String specifying formulas with standard English (United States) formatting. Read/write.
  PivotField.SubtotalName -> Returns or sets the text string label displayed in the subtotal column or row heading in the specified PivotTable report. The default value is the string Subtotal. Read/write String.
  PivotField.Subtotals -> Returns or sets subtotals displayed with the specified field. Valid only for nondata fields. Read/write Variant.
  PivotField.TotalLevels -> Returns the total number of fields in the current field group. If the field isn't grouped, or if the data source is OLAP-based, TotalLevels returns the value 1. Read-only Long.
  PivotField.UseMemberPropertyAsCaption -> This property is used to control whether member property captions are used for PivotItem captions of the PivotField. Read/write Boolean.
  PivotField.Value -> Returns or sets a String value that represents the name of the specified field in the PivotTable report.
  PivotField.VisibleItems -> PivotItem
  PivotField.VisibleItemsList -> Returns or sets a Variant specifying an array of strings that represent included items in a manual filter applied to a PivotField. Read/write.
  PivotItem.Application -> Application
  PivotItem.Caption -> Returns a String value that represents the label text for the pivot item.
  PivotItem.ChildItems -> PivotItem
  PivotItem.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PivotItem.DataRange -> Range
  PivotItem.DrilledDown -> True if the flag for the specified PivotTable field or PivotTable item is set to "drilled" (expanded or visible). Read/write Boolean.
  PivotItem.Formula -> Returns or sets a String value that represents the object's formula in A1-style notation and in the language of the macro.
  PivotItem.IsCalculated -> True if the PivotTable item is a calculated field or item. Read-only Boolean.
  PivotItem.LabelRange -> Range
  PivotItem.Name -> Returns or sets a String value representing the name of the object.
  PivotItem.Parent -> Returns the parent object for the specified object. Read-only.
  PivotItem.ParentItem -> PivotField
  PivotItem.ParentShowDetail -> bool
  PivotItem.Position -> Returns or sets a Long value that represents the position of the item in its field, if the item is currently showing.
  PivotItem.RecordCount -> Returns the number of records in the PivotTable cache or the number of cache records that contain the specified item. Read-only Long.
  PivotItem.ShowDetail -> True if the outline is expanded for the specified range (so that the detail of the column or row is visible). The specified range must be a single summary column or row in an outline. Read/write Variant. For the PivotItem object (or the Range object if the range is in a PivotTable report), this property is set to True if the item is showing detail.
  PivotItem.SourceName -> Returns a Variant value that represents the specified object's name as it appears in the original source data for the specified PivotTable report.
  PivotItem.SourceNameStandard -> Returns a String that represents the PivotTable items' source name in standard English (United States) format settings. Read-only.
  PivotItem.StandardFormula -> Returns or sets a String specifying formulas with standard English (United States) formatting. Read/write.
  PivotItem.Value -> Returns or sets a String value that represents the name of the specified item in the PivotTable field.
  PivotItem.Visible -> Returns or sets a Boolean value that determines whether the object is visible. Read/write.
  QueryTable.AdjustColumnWidth -> bool
  QueryTable.Application -> Application
  QueryTable.BackgroundQuery -> True if queries for the query table are performed asynchronously (in the background). Read/write Boolean.
  QueryTable.CommandText -> Returns or sets the command string for the specified data source. Read/write Variant.
  QueryTable.CommandType -> XlCmdType
  QueryTable.Connection -> Returns or sets a string that contains one of the following:
  QueryTable.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  QueryTable.Destination -> Range
  QueryTable.EditWebPage -> Returns or sets the webpage Uniform Resource Locator (URL) for a web query. Read/write Variant.
  QueryTable.EnableEditing -> bool
  QueryTable.EnableRefresh -> True if the PivotTable cache or query table can be refreshed by the user. The default value is True. Read/write Boolean.
  QueryTable.FetchedRowOverflow -> Refresh
  QueryTable.FieldNames -> True if field names from the data source appear as column headings for the returned data. The default value is True. Read/write Boolean.
  QueryTable.FillAdjacentFormulas -> True if formulas to the right of the specified query table are automatically updated whenever the query table is refreshed. Read/write Boolean.
  QueryTable.ListObject -> ListObject
  QueryTable.MaintainConnection -> True if the connection to the specified data source is maintained after the refresh and until the workbook is closed. The default value is True. Read/write Boolean.
  QueryTable.Name -> Returns or sets a String value representing the name of the object.
  QueryTable.Parameters -> Parameters
  QueryTable.Parent -> Returns the parent object for the specified object. Read-only.
  QueryTable.PostText -> Returns or sets the string used with the post method of inputting data into a web server to return data from a web query. Read/write String.
  QueryTable.PreserveColumnInfo -> True if column sorting, filtering, and layout information is preserved whenever a query table is refreshed. The default value is True. Read/write Boolean.
  QueryTable.PreserveFormatting -> bool
  QueryTable.QueryType -> XlQueryType
  QueryTable.Recordset -> Returns or sets a Recordset object that's used as the data source for the specified query table. Read/write.
  QueryTable.Refreshing -> True if there is a background query in progress for the specified query table. Read-only Boolean.
  QueryTable.RefreshOnFileOpen -> bool
  QueryTable.RefreshPeriod -> Returns or sets the number of minutes between refreshes. Read/write Long.
  QueryTable.RefreshStyle -> XlCellInsertionMode
  QueryTable.ResultRange -> Range
  QueryTable.RobustConnect -> XlRobustConnect
  QueryTable.RowNumbers -> True if row numbers are added as the first column of the specified query table. Read/write Boolean.
  QueryTable.SaveData -> bool
  QueryTable.SavePassword -> bool
  QueryTable.Sort -> Returns the sort criteria for the query table range. Read-only.
  QueryTable.SourceConnectionFile -> Returns or sets a String indicating the Microsoft Office Data Connection file or similar file that was used to create the QueryTable. Read/write.
  QueryTable.SourceDataFile -> Returns or sets a String value that indicates the source data file for a query table.
  QueryTable.TextFileColumnDataTypes -> Returns or sets an ordered array of constants that specify the data types applied to the corresponding columns in the text file that you are importing into a query table. The default constant for each column is xlGeneral. Read/write Variant.
  QueryTable.TextFileCommaDelimiter -> bool
  QueryTable.TextFileConsecutiveDelimiter -> bool
  QueryTable.TextFileDecimalSeparator -> Returns or sets the decimal separator character that Microsoft Excel uses when you import a text file into a query table. The default is the system decimal separator character. Read/write String.
  QueryTable.TextFileFixedColumnWidths -> Returns or sets an array of integers that correspond to the widths of the columns (in characters) in the text file that you are importing into a query table. Valid widths are from 1 through 32767 characters. Read/write Variant.
  QueryTable.TextFileOtherDelimiter -> Returns or sets the character used as the delimiter when you import a text file into a query table. The default value is null. Read/write String.
  QueryTable.TextFileParseType -> XlTextParsingType
  QueryTable.TextFilePlatform -> XlPlatform
  QueryTable.TextFilePromptOnRefresh -> bool
  QueryTable.TextFileSemicolonDelimiter -> TextFileParseType
  QueryTable.TextFileSpaceDelimiter -> bool
  QueryTable.TextFileStartRow -> Returns or sets the row number at which text parsing will begin when you import a text file into a query table. Valid values are integers from 1 through 32767. The default value is 1. Read/write Long.
  QueryTable.TextFileTabDelimiter -> bool
  QueryTable.TextFileTextQualifier -> XlTextQualifier
  QueryTable.TextFileThousandsSeparator -> Returns or sets the thousands separator character that Microsoft Excel uses when you import a text file into a query table. The default is the system thousands separator character. Read/write String.
  QueryTable.TextFileTrailingMinusNumbers -> bool
  QueryTable.TextFileVisualLayout -> XlTextVisualLayoutType
  QueryTable.WebConsecutiveDelimitersAsOne -> bool
  QueryTable.WebDisableDateRecognition -> bool
  QueryTable.WebDisableRedirections -> bool
  QueryTable.WebFormatting -> XlWebFormatting
  QueryTable.WebPreFormattedTextToColumns -> Returns or sets whether data contained within HTML <PRE> tags on the webpage is parsed into columns when you import the page into a query table. The default is True. Read/write Boolean.
  QueryTable.WebSelectionType -> XlWebSelectionType
  QueryTable.WebSingleBlockTextImport -> bool
  QueryTable.WebTables -> Returns or sets a comma-delimited list of table names or table index numbers when you import a webpage into a query table. Read/write String.
  QueryTable.WorkbookConnection -> WorkbookConnection
  SparklineGroups.Application -> Application
  SparklineGroups.Count -> Range
  SparklineGroups.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SparklineGroups.Item -> SparklineGroup
  SparklineGroups.Parent -> Range
  Style.AddIndent -> Returns or sets a Boolean value that indicates if text is automatically indented when the text alignment in a cell is set to equal distribution (either horizontally or vertically).
  Style.Application -> Application
  Style.Borders -> Borders
  Style.BuiltIn -> True if the style is a built-in style. Read-only Boolean.
  Style.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Style.Font -> Font
  Style.FormulaHidden -> Returns or sets a Boolean value that indicates if the formula will be hidden when the worksheet is protected.
  Style.HorizontalAlignment -> XlHAlign
  Style.IncludeAlignment -> True if the style includes the AddIndent, HorizontalAlignment, VerticalAlignment, WrapText, IndentLevel, and Orientation properties of the Style object. Read/write Boolean.
  Style.IncludeBorder -> Border
  Style.IncludeFont -> Background
  Style.IncludeNumber -> True if the style includes the NumberFormat property. Read/write Boolean.
  Style.IncludePatterns -> Interior
  Style.IncludeProtection -> True if the style includes the FormulaHidden and Locked protection properties. Read/write Boolean.
  Style.IndentLevel -> Returns or sets a Long value that represents the indent level for the style.
  Style.Interior -> Interior
  Style.Locked -> Returns or sets a Boolean value that indicates if the object is locked.
  Style.MergeCells -> True if the style contains merged cells. Read/write Variant.
  Style.Name -> Returns a String value that represents the name of the object.
  Style.NameLocal -> Returns or sets the name of the object, in the language of the user. Read-only String.
  Style.NumberFormat -> Returns or sets a String value that represents the format code for the object.
  Style.NumberFormatLocal -> Returns or sets a String value that represents the format code for the object as a string in the language of the user.
  Style.Orientation -> XlOrientation
  Style.Parent -> Returns the parent object for the specified object. Read-only.
  Style.ReadingOrder -> XlReadingOrder
  Style.ShrinkToFit -> Returns or sets a Boolean value that indicates if text automatically shrinks to fit in the available column width.
  Style.Value -> Returns a String value that represents the name of the specified style.
  Style.VerticalAlignment -> XlVAlign
  Style.WrapText -> Returns or sets a Boolean value that indicates if Microsoft Excel wraps the text in the object.
  Validation.AlertStyle -> XlDVAlertStyle
  Validation.Application -> Application
  Validation.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Validation.ErrorMessage -> Returns or sets the data validation error message. Read/write String.
  Validation.ErrorTitle -> Returns or sets the title of the data-validation error dialog box. Read/write String.
  Validation.Formula1 -> Returns the value or expression associated with the conditional format or data validation. Can be a constant value, a string value, a cell reference, or a formula. Read-only String.
  Validation.Formula2 -> Operator
  Validation.IgnoreBlank -> True if blank values are permitted by the range data validation. Read/write Boolean.
  Validation.IMEMode -> XlIMEMode
  Validation.InCellDropdown -> True if data validation displays a drop-down list that contains acceptable values. Read/write Boolean.
  Validation.InputMessage -> Returns or sets the data validation input message. Read/write String.
  Validation.InputTitle -> Returns or sets the title of the data-validation input dialog box. Read/write String. Limited to 32 characters.
  Validation.Operator -> XlFormatConditionOperator
  Validation.Parent -> Returns the parent object for the specified object. Read-only.
  Validation.ShowError -> True if the data validation error message will be displayed whenever the user enters invalid data. Read/write Boolean.
  Validation.ShowInput -> True if the data validation input message will be displayed whenever the user selects a cell in the data validation range. Read/write Boolean.
  Validation.Type -> XlDVType
  Validation.Value -> Returns a Boolean value that indicates if all the validation criteria are met (that is, if the range contains valid data).
  Worksheet.Application -> Application
  Worksheet.AutoFilter -> AutoFilter
  Worksheet.AutoFilterMode -> True if the AutoFilter drop-down arrows are currently displayed on the sheet. This property is independent of the FilterMode property. Read/write Boolean.
  Worksheet.Cells -> Range
  Worksheet.CircularReference -> Range
  Worksheet.CodeName -> Returns the code name for the object. Read-only String.
  Worksheet.Columns -> Range
  Worksheet.Comments -> Comments
  Worksheet.CommentsThreaded -> CommentsThreaded
  Worksheet.ConsolidationFunction -> XlConsolidationFunction
  Worksheet.ConsolidationOptions -> Returns a three-element array of consolidation options, as shown in the following table. If the element is True, that option is set. Read-only Variant.
  Worksheet.ConsolidationSources -> Returns an array of string values that name the source sheets for the worksheet's current consolidation. Returns Empty if there's no consolidation on the sheet. Read-only Variant.
  Worksheet.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Worksheet.CustomProperties -> CustomProperties
  Worksheet.DisplayPageBreaks -> True if page breaks (both automatic and manual) on the specified worksheet are displayed. Read/write Boolean.
  Worksheet.DisplayRightToLeft -> bool
  Worksheet.EnableAutoFilter -> True if AutoFilter arrows are enabled when user-interface-only protection is turned on. Read/write Boolean.
  Worksheet.EnableCalculation -> bool
  Worksheet.EnableFormatConditionsCalculation -> Returns or sets if conditional formats occur automatically as needed. Read/write Boolean.
  Worksheet.EnableOutlining -> True if outlining symbols are enabled when user-interface-only protection is turned on. Read/write Boolean.
  Worksheet.EnablePivotTable -> True if PivotTable controls and actions are enabled when user-interface-only protection is turned on. Read/write Boolean.
  Worksheet.EnableSelection -> XlEnableSelection
  Worksheet.FilterMode -> True if the worksheet is in the filter mode. Read-only Boolean.
  Worksheet.HPageBreaks -> HPageBreaks
  Worksheet.Hyperlinks -> Hyperlinks
  Worksheet.Index -> Returns a Long value that represents the index number of the object within the collection of similar objects.
  Worksheet.ListObjects -> ListObject
  Worksheet.MailEnvelope -> Represents an email header for a document.
  Worksheet.Name -> Returns or sets a String value that represents the object name.
  Worksheet.Names -> Names
  Worksheet.Next -> Returns a Worksheet object that represents the next sheet.
  Worksheet.Outline -> Outline
  Worksheet.PageSetup -> PageSetup
  Worksheet.Parent -> Returns the parent object for the specified object. Read-only.
  Worksheet.Previous -> Returns a Worksheet object that represents the previous sheet.
  Worksheet.PrintedCommentPages -> Returns the number of comment pages that will be printed for the current worksheet. Read-only.
  Worksheet.ProtectContents -> Protect
  Worksheet.ProtectDrawingObjects -> Protect
  Worksheet.Protection -> Protection
  Worksheet.ProtectionMode -> Protect
  Worksheet.ProtectScenarios -> True if the worksheet scenarios are protected. Read-only Boolean.
  Worksheet.QueryTables -> QueryTables
  Worksheet.Range -> Range
  Worksheet.Rows -> Range
  Worksheet.ScrollArea -> Returns or sets the range where scrolling is allowed, as an A1-style range reference. Cells outside the scroll area cannot be selected. Read/write String.
  Worksheet.Shapes -> Shapes
  Worksheet.Sort -> Sort
  Worksheet.StandardHeight -> points
  Worksheet.StandardWidth -> Returns or sets the standard (default) width of all the columns on the worksheet. Read/write Double.
  Worksheet.Tab -> Tab
  Worksheet.TransitionExpEval -> True if Microsoft Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet. Read/write Boolean.
  Worksheet.TransitionFormEntry -> True if Microsoft Excel uses Lotus 1-2-3 formula entry rules for the worksheet. Read/write Boolean.
  Worksheet.Type -> XlSheetType
  Worksheet.UsedRange -> Range
  Worksheet.Visible -> XlSheetVisibility
  Worksheet.VPageBreaks -> VPageBreaks
  XPath.Application -> Application
  XPath.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  XPath.Map -> XmlMap
  XPath.Parent -> Returns the parent object for the specified object. Read-only.
  XPath.Repeating -> bool
  XPath.Value -> Returns a String that represents the XPath for the specified object.
  Walls.Application -> Application
  Walls.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Walls.Format -> ChartFormat
  Walls.Name -> Returns a String value that represents the name of the object.
  Walls.Parent -> Returns the parent object for the specified object. Read-only.
  Walls.PictureType -> Returns or sets a Variant value that represents the way pictures are displayed on the walls and faces of a 3D chart.
  Walls.PictureUnit -> PictureType
  Walls.Thickness -> Returns or sets a Long specifying the thickness of the wall. Read/write.
  ChartArea.Application -> Application
  ChartArea.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ChartArea.Format -> ChartFormat
  ChartArea.Height -> points
  ChartArea.Left -> points
  ChartArea.Name -> Returns a String value that represents the name of the object.
  ChartArea.Parent -> Returns the parent object for the specified object. Read-only.
  ChartArea.RoundedCorners -> True if the chart area of the chart has rounded corners. Read/write Boolean.
  ChartArea.Shadow -> Returns or sets a Boolean value that determines if the object has a shadow.
  ChartArea.Top -> points
  ChartArea.Width -> points
  ChartTitle.Application -> Application
  ChartTitle.Caption -> Returns or sets a String value that represents the chart title text.
  ChartTitle.Characters -> Characters
  ChartTitle.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ChartTitle.Format -> ChartFormat
  ChartTitle.Formula -> Gets or sets a String value that represents the formula of the object by using A1-style notation, in English. Read/write.
  ChartTitle.FormulaLocal -> Gets or sets a String value that represents the formula of the object by using A1-style notation, in the language of the user. Read/write.
  ChartTitle.FormulaR1C1 -> Gets or sets a String value that represents the formula of the object by using R1C1-style notation, in English. Read/write.
  ChartTitle.FormulaR1C1Local -> Gets or sets a String value that represents the formula of the object by using R1C1-style notation, in the language of the user. Read/write.
  ChartTitle.Height -> points
  ChartTitle.HorizontalAlignment -> Returns or sets a Variant value that represents the horizontal alignment for the specified object.
  ChartTitle.IncludeInLayout -> True if a chart title will occupy the chart layout space when a chart layout is being determined. The default value is True. Read/write Boolean.
  ChartTitle.Left -> points
  ChartTitle.Name -> Returns a String value that represents the name of the object.
  ChartTitle.Orientation -> Returns or sets a Variant value that represents the text orientation.
  ChartTitle.Parent -> Returns the parent object for the specified object. Read-only.
  ChartTitle.Position -> XlChartElementPosition
  ChartTitle.ReadingOrder -> XlReadingOrder
  ChartTitle.Shadow -> Returns or sets a Boolean value that determines if the object has a shadow.
  ChartTitle.Text -> Returns or sets the text for the specified object. Read/write String.
  ChartTitle.Top -> points
  ChartTitle.VerticalAlignment -> Returns or sets a Variant value that represents the vertical alignment of the specified object.
  ChartTitle.Width -> points
  DataTable.Application -> Application
  DataTable.Border -> Border
  DataTable.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  DataTable.Font -> Font
  DataTable.Format -> ChartFormat
  DataTable.HasBorderHorizontal -> True if the chart data table has horizontal cell borders. Read/write Boolean.
  DataTable.HasBorderOutline -> True if the chart data table has outline borders. Read/write Boolean.
  DataTable.HasBorderVertical -> True if the chart data table has vertical cell borders. Read/write Boolean.
  DataTable.Parent -> Returns the parent object for the specified object. Read-only.
  DataTable.ShowLegendKey -> True if the data label legend key is visible. Read/write Boolean.
  Floor.Application -> Application
  Floor.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Floor.Format -> ChartFormat
  Floor.Name -> Returns a String value that represents the name of the object.
  Floor.Parent -> Returns the parent object for the specified object. Read-only.
  Floor.PictureType -> Returns or sets a Variant value that represents the way pictures are displayed on the walls and faces of a 3D chart.
  Floor.Thickness -> Returns or sets a Long, specifying the thickness of the floor. Read/write.
  Legend.Application -> Application
  Legend.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Legend.Format -> ChartFormat
  Legend.Height -> points
  Legend.IncludeInLayout -> True if a legend will occupy the chart layout space when a chart layout is being determined. The default value is True. Read/write Boolean.
  Legend.Left -> points
  Legend.Name -> Returns a String value that represents the name of the object.
  Legend.Parent -> Returns the parent object for the specified object. Read-only.
  Legend.Position -> XlLegendPosition
  Legend.Shadow -> Returns or sets a Boolean value that determines if the object has a shadow.
  Legend.Top -> points
  Legend.Width -> points
  PageSetup.AlignMarginsHeaderFooter -> Returns True for Excel to align the header and the footer with the margins set in the page setup options. Read/write Boolean.
  PageSetup.Application -> Application
  PageSetup.BlackAndWhite -> True if elements of the document will be printed in black and white. Read/write Boolean.
  PageSetup.BottomMargin -> points
  PageSetup.CenterFooter -> Center aligns the footer information in the PageSetup object. Read/write String.
  PageSetup.CenterFooterPicture -> Graphic
  PageSetup.CenterHeader -> Center aligns the header information in the PageSetup object. Read/write String.
  PageSetup.CenterHeaderPicture -> Graphic
  PageSetup.CenterHorizontally -> True if the sheet is centered horizontally on the page when it's printed. Read/write Boolean.
  PageSetup.CenterVertically -> True if the sheet is centered vertically on the page when it's printed. Read/write Boolean.
  PageSetup.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PageSetup.DifferentFirstPageHeaderFooter -> True if a different header or footer is used on the first page. Read/write Boolean.
  PageSetup.Draft -> True if the sheet will be printed without graphics. Read/write Boolean.
  PageSetup.EvenPage -> Returns or sets the alignment of text on the even page of a workbook or section.
  PageSetup.FirstPage -> Returns or sets the alignment of text on the first page of a workbook or section.
  PageSetup.FirstPageNumber -> Constants
  PageSetup.FitToPagesTall -> Returns or sets the number of pages tall that the worksheet will be scaled to when it's printed. Applies only to worksheets. Read/write Variant.
  PageSetup.FitToPagesWide -> Returns or sets the number of pages wide that the worksheet will be scaled to when it's printed. Applies only to worksheets. Read/write Variant.
  PageSetup.FooterMargin -> points
  PageSetup.HeaderMargin -> points
  PageSetup.LeftFooter -> Returns or sets the alignment of text on the left footer of a workbook or section.
  PageSetup.LeftFooterPicture -> Graphic
  PageSetup.LeftHeader -> Returns or sets the alignment of text on the left header of a workbook or section.
  PageSetup.LeftHeaderPicture -> Graphic
  PageSetup.LeftMargin -> points
  PageSetup.OddAndEvenPagesHeaderFooter -> True if the specified PageSetup object has different headers and footers for odd-numbered and even-numbered pages. Read/write Boolean.
  PageSetup.Order -> XlOrder
  PageSetup.Orientation -> XlPageOrientation
  PageSetup.Pages -> Pages
  PageSetup.PaperSize -> XlPaperSize
  PageSetup.Parent -> Returns the parent object for the specified object. Read-only.
  PageSetup.PrintArea -> Returns or sets the range to be printed as a String using A1-style references in the language of the macro. Read/write String.
  PageSetup.PrintComments -> XlPrintLocation
  PageSetup.PrintErrors -> XlPrintErrors
  PageSetup.PrintGridlines -> True if cell gridlines are printed on the page. Applies only to worksheets. Read/write Boolean.
  PageSetup.PrintHeadings -> True if row and column headings are printed with this page. Applies only to worksheets. Read/write Boolean.
  PageSetup.PrintNotes -> True if cell notes are printed as end notes with the sheet. Applies only to worksheets. Read/write Boolean.
  PageSetup.PrintQuality -> Returns or sets the print quality. Read/write Variant.
  PageSetup.PrintTitleColumns -> Returns or sets the columns that contain the cells to be repeated on the left side of each page, as a String in A1-style notation in the language of the macro. Read/write String.
  PageSetup.PrintTitleRows -> Returns or sets the rows that contain the cells to be repeated at the top of each page, as a String in A1-style notation in the language of the macro. Read/write String.
  PageSetup.RightFooter -> points
  PageSetup.RightFooterPicture -> Graphic
  PageSetup.RightHeader -> Returns or sets the right part of the header. Read/write String.
  PageSetup.RightHeaderPicture -> Graphic
  PageSetup.RightMargin -> points
  PageSetup.ScaleWithDocHeaderFooter -> Returns or sets if the header and footer should be scaled with the document when the size of the document changes. Read/write Boolean.
  PageSetup.TopMargin -> points
  PageSetup.Zoom -> Returns or sets a Variant value that represents a percentage (between 10 and 400 percent) by which Microsoft Excel will scale the worksheet for printing.
  PivotLayout.Application -> Application
  PivotLayout.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PivotLayout.Parent -> Returns the parent object for the specified object. Read-only.
  PivotLayout.PivotTable -> PivotTable
  PlotArea.Application -> Application
  PlotArea.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PlotArea.Format -> ChartFormat
  PlotArea.Height -> points
  PlotArea.InsideHeight -> points
  PlotArea.InsideLeft -> points
  PlotArea.InsideTop -> points
  PlotArea.InsideWidth -> points
  PlotArea.Left -> points
  PlotArea.Name -> Returns a String value that represents the name of the object.
  PlotArea.Parent -> Returns the parent object for the specified object. Read-only.
  PlotArea.Position -> XlChartElementPosition
  PlotArea.Top -> points
  PlotArea.Width -> points
  Shapes.Application -> Application
  Shapes.Count -> Returns a Long value that represents the number of objects in the collection.
  Shapes.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Shapes.Parent -> Returns the parent object for the specified object. Read-only.
  Shapes.Range -> ShapeRange
  Tab.Application -> Application
  Tab.Color -> RGB
  Tab.ColorIndex -> Returns or sets a Variant value that represents the color of the specified worksheet tab or chart tab.
  Tab.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Tab.Parent -> Returns the parent object for the specified object. Read-only.
  Tab.ThemeColor -> XlThemeColor
  Tab.TintAndShade -> Returns or sets a Single that lightens or darkens a color.
  Pane.Application -> Application
  Pane.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Pane.Index -> Returns a Long value that represents the index number of the object within the collection of similar objects.
  Pane.Parent -> Returns the parent object for the specified object. Read-only.
  Pane.ScrollColumn -> Returns or sets the number of the leftmost column in the pane or window. Read/write Long.
  Pane.ScrollRow -> Returns or sets the number of the row that appears at the top of the pane or window. Read/write Long.
  Pane.VisibleRange -> Range
  Panes.Application -> Application
  Panes.Count -> Returns a Long value that represents the number of objects in the collection.
  Panes.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Panes.Item -> Returns a single object from a collection.
  Panes.Parent -> Returns the parent object for the specified object. Read-only.
  SheetViews.Application -> Application
  SheetViews.Count -> Returns the number of objects in the collection. Read-only Long.
  SheetViews.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SheetViews.Item -> Returns a SheetView object that represents views in a workbook. Read-only.
  SheetViews.Parent -> Returns the parent object for the specified object. Read-only.
  Connections.Application -> Application
  Connections.Count -> Returns the number of objects in the collection. Read-only Long.
  Connections.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Connections.Parent -> Returns the parent object for the specified object. Read-only.
  CustomViews.Application -> Application
  CustomViews.Count -> Returns a Long value that represents the number of objects in the collection.
  CustomViews.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  CustomViews.Parent -> Returns the parent object for the specified object. Read-only.
  TableStyles.Application -> Application
  TableStyles.Count -> Returns the number of objects in the collection. Read-only Long.
  TableStyles.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  TableStyles.Parent -> Returns the parent object for the specified object. Read-only.
  IconSets.Application -> Application
  IconSets.Count -> Returns a Long value that specifies the number of icon sets available in the workbook. Read-only.
  IconSets.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  IconSets.Item -> IconSet
  IconSets.Parent -> Returns the parent object for the specified object. Read-only.
  Model.Application -> Application
  Model.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  Model.DataModelConnection -> WorkbookConnection
  Model.ModelFormatBoolean -> ModelFormatBoolean
  Model.ModelFormatCurrency -> ModelFormatCurrency
  Model.ModelFormatDate -> ModelFormatDate
  Model.ModelFormatDecimalNumber -> ModelFormatDecimalNumber
  Model.ModelFormatGeneral -> ModelFormatGeneral
  Model.ModelFormatPercentageNumber -> ModelFormatPercentageNumber
  Model.ModelFormatScientificNumber -> ModelFormatScientificNumber
  Model.ModelFormatWholeNumber -> ModelFormatWholeNumber
  Model.ModelMeasures -> ModelMeasures
  Model.ModelRelationships -> ModelRelationships
  Model.ModelTables -> ModelTables
  Model.Name -> Returns a String value representing the name of the Model object. Read-only.
  Model.Parent -> Returns an Object that represents the parent object of the specified object. Read-only.
  PublishObjects.Application -> Application
  PublishObjects.Count -> Returns a Long value that represents the number of objects in the collection.
  PublishObjects.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PublishObjects.Item -> Returns a single object from a collection.
  PublishObjects.Parent -> Returns the parent object for the specified object. Read-only.
  Queries.Application -> Application
  Queries.Count -> Returns an integer that represents the number of objects in the collection.
  Queries.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Queries.FastCombine -> True to enable the fast combine feature, as long as the workbook is open. Read/write Boolean.
  Queries.Parent -> Returns the parent object for the specified object. Read-only.
  SlicerCaches.Application -> Application
  SlicerCaches.Count -> Returns the number of objects in the collection.
  SlicerCaches.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SlicerCaches.Item -> SlicerCache
  SlicerCaches.Parent -> Workbook
  Styles.Application -> Application
  Styles.Count -> Returns a Long value that represents the number of objects in the collection.
  Styles.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Styles.Item -> Returns a single object from a collection.
  Styles.Parent -> Returns the parent object for the specified object. Read-only.
  WebOptions.AllowPNG -> bool
  WebOptions.Application -> Application
  WebOptions.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  WebOptions.DownloadComponents -> bool
  WebOptions.Encoding -> MsoEncoding
  WebOptions.FolderSuffix -> UseLongFileNames
  WebOptions.LocationOfComponents -> Returns or sets the central URL (on the intranet or web) or path (local or network) to the location from which authorized users can download Microsoft Office Web components when viewing your saved document. The default value is the local or network installation path for Microsoft Office. Read/write String.
  WebOptions.OrganizeInFolder -> bool
  WebOptions.Parent -> Returns the parent object for the specified object. Read-only.
  WebOptions.PixelsPerInch -> Returns or sets the density (pixels per inch) of graphics images and table cells on a webpage. The range of settings is usually from 19 to 480, and common settings for popular screen sizes are 72, 96, and 120. The default setting is 96. Read/write Long.
  WebOptions.RelyOnCSS -> OrganizeInFolder
  WebOptions.RelyOnVML -> bool
  WebOptions.ScreenSize -> MsoScreenSize
  WebOptions.TargetBrowser -> MsoTargetBrowser
  WebOptions.UseLongFileNames -> bool
  Worksheets.Application -> Application
  Worksheets.Count -> Returns a Long value that represents the number of objects in the collection.
  Worksheets.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Worksheets.HPageBreaks -> HPageBreaks
  Worksheets.Item -> Returns a single object from a collection.
  Worksheets.Parent -> Returns the parent object for the specified object. Read-only.
  Worksheets.Visible -> Returns or sets a Variant value that determines whether the object is visible.
  Worksheets.VPageBreaks -> VPageBreaks
  XmlMaps.Application -> Application
  XmlMaps.Count -> Returns a Long value that represents the number of objects in the collection.
  XmlMaps.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  XmlMaps.Item -> Returns a single object from a collection.
  XmlMaps.Parent -> Returns the parent object for the specified object. Read-only.
  XmlNamespaces.Application -> Application
  XmlNamespaces.Count -> Returns a Long value that represents the number of objects in the collection.
  XmlNamespaces.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  XmlNamespaces.Item -> Returns a single object from a collection.
  XmlNamespaces.Parent -> Returns the parent object for the specified object. Read-only.
  XmlNamespaces.Value -> Returns a String value that represents the XML namespaces that have been added to the workbook.
  HPageBreaks.Application -> Application
  HPageBreaks.Count -> Returns a Long value that represents the number of objects in the collection.
  HPageBreaks.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  HPageBreaks.Item -> Returns a single object from a collection.
  HPageBreaks.Parent -> Returns the parent object for the specified object. Read-only.
  VPageBreaks.Application -> Application
  VPageBreaks.Count -> Returns a Long value that represents the number of objects in the collection.
  VPageBreaks.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  VPageBreaks.Item -> Returns a single object from a collection.
  VPageBreaks.Parent -> Returns the parent object for the specified object. Read-only.
  FileExportConverter.Application -> Application
  FileExportConverter.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  FileExportConverter.Description -> Returns the description for the file converter. Read-only String.
  FileExportConverter.Extensions -> Returns the file name extensions associated with the specified FileExportConverter object. Read-only String.
  FileExportConverter.FileFormat -> Returns an integer that identifies the file format associated with the specified FileExportConverter object. Read-only.
  FileExportConverter.Parent -> Returns an Object that represents the parent object of the specified FileExportConverter object. Read-only.
  Name.Application -> Application
  Name.Category -> Returns or sets the category for the specified name in the language of the macro. The name must refer to a custom function or command. Read/write String.
  Name.CategoryLocal -> Returns or sets the category for the specified name, in the language of the user, if the name refers to a custom function or command. Read/write String.
  Name.Comment -> Returns or sets the comment associated with the name. Read/write String.
  Name.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Name.Index -> Returns a Long value that represents the index number of the object within the collection of similar objects.
  Name.MacroType -> XlXLMMacroType
  Name.Name -> Returns or sets a String value representing the name of the object.
  Name.NameLocal -> Returns or sets the name of the object, in the language of the user. Read/write String.
  Name.Parent -> Returns the parent object for the specified object. Read-only.
  Name.RefersTo -> Returns or sets the formula that the name is defined to refer to, in the language of the macro and in A1-style notation, beginning with an equal sign. Read/write String.
  Name.RefersToLocal -> Returns or sets the formula that the name refers to. The formula is in the language of the user, and it's in A1-style notation, beginning with an equal sign. Read/write String.
  Name.RefersToR1C1 -> Returns or sets the formula that the name refers to. The formula is in the language of the macro, and it's in R1C1-style notation, beginning with an equal sign. Read/write String.
  Name.RefersToR1C1Local -> Returns or sets the formula that the name refers to. This formula is in the language of the user, and it's in R1C1-style notation, beginning with an equal sign. Read/write String.
  Name.RefersToRange -> Range
  Name.ShortcutKey -> Returns or sets the shortcut key for a name defined as a custom Microsoft Excel 4.0 macro command. Read/write String.
  Name.ValidWorkbookParameter -> Returns True if the specified Name object is a valid workbook parameter. Read-only Boolean.
  Name.Value -> Returns or sets a String value that represents the formula that the name is defined to refer to.
  Name.Visible -> Returns or sets a Boolean value that determines whether the object is visible. Read/write.
  Name.WorkbookParameter -> Returns or sets the specified Name object as a workbook parameter. Read/write.
  ODBCError.Application -> Application
  ODBCError.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ODBCError.ErrorString -> Returns a String value that represents the ODBC error string.
  ODBCError.Parent -> Returns the parent object for the specified object. Read-only.
  ODBCError.SqlState -> Returns the SQL state error. Read-only String.
  OLEDBError.Application -> Application
  OLEDBError.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  OLEDBError.ErrorString -> Returns a String value that represents the ODBC error string.
  OLEDBError.Native -> Returns a provider-specific numeric value that specifies an error. The error number corresponds to an error condition that resulted after the most recent OLE DB query. Read-only Long.
  OLEDBError.Number -> Returns a numeric value that specifies an error. The error number corresponds to a unique trap number corresponding to an error condition that resulted after the most recent OLE DB query. Read-only Long.
  OLEDBError.Parent -> Returns the parent object for the specified object. Read-only.
  OLEDBError.SqlState -> Returns the SQL state error. Read-only String.
  OLEDBError.Stage -> Returns a numeric value specifying the stage of an error that resulted after the most recent OLE DB query. Read-only Long.
  RecentFile.Application -> Application
  RecentFile.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  RecentFile.Index -> Returns a Long value that represents the index number of the object within the collection of similar objects.
  RecentFile.Name -> Returns a String value that represents the name of the object.
  RecentFile.Parent -> Returns the parent object for the specified object. Read-only.
  RecentFile.Path -> Returns a String value that represents the complete path to the workbook or file that this RecentFile object represents.
  Watch.Application -> Application
  Watch.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Watch.Parent -> Returns the parent object for the specified object. Read-only.
  Watch.Source -> SourceType
  Border.Application -> Application
  Border.Color -> RGB
  Border.ColorIndex -> Returns or sets a Variant value that represents the color of the border.
  Border.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Border.LineStyle -> XlLineStyle
  Border.Parent -> Returns the parent object for the specified object. Read-only.
  Border.ThemeColor -> Returns or sets the theme color in the applied color scheme that is associated with the specified object. Read/write Variant.
  Border.TintAndShade -> Returns or sets a Single that lightens or darkens a color.
  Border.Weight -> XlBorderWeight
  Shape.Adjustments -> Adjustments
  Shape.AlternativeText -> Returns or sets the descriptive (alternative) text string for a Shape object when the object is saved to a webpage. Read/write String.
  Shape.Application -> Application
  Shape.AutoShapeType -> ShapeRange
  Shape.BackgroundStyle -> MsoBackgroundStyleIndex
  Shape.BlackWhiteMode -> MsoBlackWhiteMode
  Shape.BottomRightCell -> Range
  Shape.Callout -> CalloutFormat
  Shape.Chart -> Chart
  Shape.Child -> MsoTriState
  Shape.ConnectionSiteCount -> Returns the number of connection sites on the specified shape. Read-only Long.
  Shape.Connector -> MsoTriState
  Shape.ConnectorFormat -> ConnectorFormat
  Shape.ControlFormat -> ControlFormat
  Shape.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Shape.Decorative -> Sets or returns the decorative flag for the specified object. Read/write.
  Shape.Fill -> FillFormat
  Shape.FormControlType -> XlFormControl
  Shape.Glow -> GlowFormat
  Shape.GraphicStyle -> MsoGraphicStyleIndex
  Shape.GroupItems -> GroupShapes
  Shape.HasChart -> MsoTriState
  Shape.HasSmartArt -> Returns whether there is a SmartArt diagram present on the specified shape. Read-only.
  Shape.Height -> points
  Shape.HorizontalFlip -> MsoTriState
  Shape.Hyperlink -> Hyperlink
  Shape.ID -> Returns a Long value that represents the type for the specified object.
  Shape.Left -> points
  Shape.Line -> LineFormat
  Shape.LinkFormat -> LinkFormat
  Shape.LockAspectRatio -> MsoTriState
  Shape.Locked -> Returns or sets a Boolean value that indicates if the object is locked.
  Shape.Model3D -> Model3DFormat
  Shape.Name -> Returns or sets a String value representing the name of the object.
  Shape.Nodes -> ShapeNodes
  Shape.OLEFormat -> OLEFormat
  Shape.OnAction -> Returns or sets the name of a macro that's run when the specified object is chosen. Read/write String.
  Shape.Parent -> Returns the parent object for the specified object. Read-only.
  Shape.ParentGroup -> Returns a Shape object that represents the common parent shape of a child shape or a range of child shapes.
  Shape.PictureFormat -> PictureFormat
  Shape.Placement -> XlPlacement
  Shape.Reflection -> ReflectionFormat
  Shape.Rotation -> Returns or sets the rotation of the shape, in degrees. Read/write Single.
  Shape.Shadow -> ShadowFormat
  Shape.ShapeStyle -> MsoShapeStyleIndex
  Shape.SmartArt -> Returns an object that represents the SmartArt associated with the shape. Read-only.
  Shape.SoftEdge -> SoftEdgeFormat
  Shape.TextEffect -> TextEffectFormat
  Shape.TextFrame -> TextFrame
  Shape.TextFrame2 -> TextFrame2
  Shape.ThreeD -> ThreeDFormat
  Shape.Title -> Returns or sets the title of the alternative text associated with the specified shape. Read/write.
  Shape.Top -> points
  Shape.TopLeftCell -> Range
  Shape.Type -> MsoShapeType
  Shape.VerticalFlip -> MsoTriState
  Shape.Vertices -> AddCurve
  Shape.Visible -> MsoTriState
  Shape.Width -> points
  Shape.ZOrderPosition -> Returns the position of the specified shape in the z-order. Read-only Long.
  Author.Application -> Application
  Author.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Author.Name -> Returns a String that contains the display name of the specified comment author. Read-only.
  Author.Parent -> Returns the parent object for the specified object. Read-only.
  Author.ProviderID -> Returns a String that represents the ID of the service providing the contact information. Read-only.
  Author.UserID -> Returns a String that represents the user ID of the contact. Read-only.
  CommentsThreaded.Application -> Application
  CommentsThreaded.Count -> Returns a Long value that represents the number of objects in the collection.
  CommentsThreaded.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  CommentsThreaded.Parent -> Returns the parent object for the specified object. Read-only.
  FormatCondition.Application -> Application
  FormatCondition.AppliesTo -> Range
  FormatCondition.Borders -> Borders
  FormatCondition.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  FormatCondition.DateOperator -> Specifies the Date operator used in the format condition. Read/write.
  FormatCondition.Font -> Font
  FormatCondition.Formula1 -> Returns the value or expression associated with the conditional format or data validation. Can be a constant value, a string value, a cell reference, or a formula. Read-only String.
  FormatCondition.Formula2 -> Operator
  FormatCondition.Interior -> Interior
  FormatCondition.NumberFormat -> Returns or sets the number format applied to a cell if the conditional formatting rule evaluates to True. Read/write Variant.
  FormatCondition.Operator -> Returns a Long value that represents the operator for the conditional format.
  FormatCondition.Parent -> Returns the parent object for the specified object. Read-only.
  FormatCondition.Priority -> Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist on a worksheet.
  FormatCondition.PTCondition -> Returns a Boolean value indicating if the conditional format is being applied to a PivotTable. Read-only.
  FormatCondition.ScopeType -> XlPivotConditionScope
  FormatCondition.StopIfTrue -> Returns or sets a Boolean value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to True.
  FormatCondition.Text -> Returns or sets a String value specifying the text string used by the conditional formatting rule.
  FormatCondition.TextOperator -> XlContainsOperator
  FormatCondition.Type -> XlFormatConditionType
  Hyperlink.Address -> Returns or sets a String value that represents the address of the target document.
  Hyperlink.Application -> Application
  Hyperlink.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Hyperlink.EmailSubject -> Returns or sets the text string of the specified hyperlink's email subject line. The subject line is appended to the hyperlink's address. Read/write String.
  Hyperlink.Name -> Returns a String value that represents the name of the object.
  Hyperlink.Parent -> Returns the parent object for the specified object. Read-only.
  Hyperlink.Range -> Range
  Hyperlink.ScreenTip -> Returns or sets the ScreenTip text for the specified hyperlink. Read/write String.
  Hyperlink.Shape -> Shape
  Hyperlink.SubAddress -> Returns or sets the location within the document associated with the hyperlink. Read/write String.
  Hyperlink.TextToDisplay -> Returns or sets the text to be displayed for the specified hyperlink. The default value is the address of the hyperlink. Read/write String.
  Hyperlink.Type -> MsoHyperlinkType
  ListColumns.Application -> Application
  ListColumns.Count -> Returns an Integer value that represents the number of objects in the collection.
  ListColumns.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ListColumns.Item -> Returns a single object from a collection.
  ListColumns.Parent -> Returns the parent object for the specified object. Read-only.
  ListRows.Application -> Application
  ListRows.Count -> Returns an Integer value that represents the number of objects in the collection.
  ListRows.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ListRows.Item -> Returns a single object from a collection.
  ListRows.Parent -> Returns the parent object for the specified object. Read-only.
  TableObject.AdjustColumnWidth -> Specifies if the column widths are automatically adjusted for the best fit each time you refresh the specified query table. The default value is True. Read/write Boolean.
  TableObject.Application -> Application
  TableObject.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  TableObject.Destination -> Returns the cell in the upper-left corner of the query table destination range (the range where the resulting query table will be placed). The destination range must be on the worksheet that contains the TableObject object. Read-only Range.
  TableObject.EnableEditing -> bool
  TableObject.EnableRefresh -> Specifies if the query table can be refreshed by the user. Read/write Boolean.
  TableObject.FetchedRowOverflow -> Specifies if the number of rows returned by the last use of the Refresh method is greater than the number of rows available on the worksheet. Read-only Boolean.
  TableObject.ListObject -> ListObject
  TableObject.Parent -> Returns an Object that represents the parent object of the specified TableObject object. Read-only.
  TableObject.PreserveColumnInfo -> Specifies if column sorting, filtering, and layout information is preserved whenever a query table is refreshed. The default value is False. Read/write Boolean.
  TableObject.PreserveFormatting -> bool
  TableObject.RefreshStyle -> XlCellInsertionMode
  TableObject.ResultRange -> Range
  TableObject.RowNumbers -> Specifies if row numbers are added as the first column of the specified query table. Read/write Boolean.
  TableObject.WorkbookConnection -> WorkbookConnection
  XmlMap.AdjustColumnWidth -> True if the column widths are automatically adjusted for the best fit each time that you refresh the specified XML map.
  XmlMap.AppendOnImport -> True if you want to append new rows to XML lists that are bound to the specified schema map when you are importing new data or refreshing an existing connection.
  XmlMap.Application -> Application
  XmlMap.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  XmlMap.DataBinding -> XmlDataBinding
  XmlMap.IsExportable -> XPath
  XmlMap.Name -> Returns or sets a String value that represents the friendly name used to uniquely identify a mapping in the workbook.
  XmlMap.Parent -> Returns the parent object for the specified object. Read-only.
  XmlMap.PreserveColumnFilter -> Returns or sets whether filtering is preserved when the specified XML map is refreshed. Read/write Boolean.
  XmlMap.PreserveNumberFormatting -> bool
  XmlMap.RootElementName -> Returns a String that represents the name of the root element for the specified XML schema map. Read-only.
  XmlMap.RootElementNamespace -> XmlNamespace
  XmlMap.SaveDataSourceDefinition -> True if the data source definition of the specified XML schema map is saved with the workbook. The default value is True. Read/write Boolean.
  XmlMap.Schemas -> XmlSchemas
  XmlMap.ShowImportExportValidationErrors -> Returns or sets whether to display a dialog box that details schema-validation errors when data is imported or exported through the specified XML schema map. The default value is False. Read/write Boolean.
  XmlMap.WorkbookConnection -> Returns a new connection for the specified XMLMap object. Read-only.
  CalculatedMembers.Application -> Application
  CalculatedMembers.Count -> Returns a Long value that represents the number of objects in the collection.
  CalculatedMembers.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  CalculatedMembers.Item -> Returns a single object from a collection.
  CalculatedMembers.Parent -> Returns the parent object for the specified object. Read-only.
  PivotTableChangeList.Application -> Application
  PivotTableChangeList.Count -> Returns a Long value that represents the number of objects in the collection.
  PivotTableChangeList.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PivotTableChangeList.Item -> ValueChange
  PivotTableChangeList.Parent -> PivotTable
  CubeFields.Application -> Application
  CubeFields.Count -> Returns a Long value that represents the number of objects in the collection.
  CubeFields.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  CubeFields.Item -> Returns a single object from a collection.
  CubeFields.Parent -> Returns the parent object for the specified object. Read-only.
  PivotAxis.Application -> Application
  PivotAxis.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PivotAxis.Parent -> Returns the parent object for the specified PivotAxis object. Read-only.
  PivotAxis.PivotLines -> PivotLines
  PivotFormulas.Application -> Application
  PivotFormulas.Count -> Returns a Long value that represents the number of objects in the collection.
  PivotFormulas.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PivotFormulas.Parent -> Returns the parent object for the specified object. Read-only.
  Slicers.Application -> Application
  Slicers.Count -> Returns the number of objects in the collection.
  Slicers.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Slicers.Item -> Slicer
  Slicers.Parent -> SlicerCache
  PivotItemList.Application -> Application
  PivotItemList.Count -> Returns a Long value that represents the number of objects in the collection.
  PivotItemList.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PivotItemList.Parent -> Returns the parent object for the specified object. Read-only.
  PivotLine.Application -> Application
  PivotLine.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PivotLine.LineType -> XlPivotLineType
  PivotLine.Parent -> Returns the parent object for the specified PivotLine object. Read-only.
  PivotLine.PivotLineCells -> PivotCell
  PivotLine.PivotLineCellsFull -> Retrieves all the PivotLine cells including those that are hidden in compact form. Read-only.
  PivotLine.Position -> Returns or sets the position of the PivotLine object. Read-only.
  CubeField.AllItemsVisible -> The AllItemsVisible property checks whether manual filtering is applied to a PivotField or CubeField. Read-only Boolean.
  CubeField.Application -> Application
  CubeField.Caption -> Returns a String value that represents the label text for the cube field.
  CubeField.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  CubeField.CubeFieldSubType -> Specifies the type of a CubeField. Read-only.
  CubeField.CubeFieldType -> XlCubeFieldType
  CubeField.CurrentPageName -> Returns or sets the page name for a CubeField. Read/write String.
  CubeField.DragToColumn -> True if the specified field can be dragged to the column position. The default value is True. Read/write Boolean.
  CubeField.DragToData -> True if the specified field can be dragged to the data position. The default value is True. Read/write Boolean.
  CubeField.DragToHide -> True if the field can be hidden by being dragged off the PivotTable report. The default value is True. Read/write Boolean.
  CubeField.DragToPage -> True if the field can be dragged to the page position. The default value is True. Read/write Boolean.
  CubeField.DragToRow -> True if the field can be dragged to the row position. The default value is True. Read/write Boolean.
  CubeField.EnableMultiplePageItems -> bool
  CubeField.FlattenHierarchies -> Returns or sets whether items from all levels of hierarchies in a named set cube field are displayed in the same field of a PivotTable report based on an OLAP cube. Read/write.
  CubeField.HasMemberProperties -> Returns True when there are member properties specified to be displayed for the cube field. Read-only Boolean.
  CubeField.HierarchizeDistinct -> Returns or sets whether to order and remove duplicates when displaying the specified named set in a PivotTable report based on an OLAP cube. Read/write.
  CubeField.IncludeNewItemsInFilter -> The IncludeNewItemsInFilter property is used to track included/excluded items in OLAP PivotTables. Read/write.
  CubeField.IsDate -> Returns True if the CubeField is a date. Read-only Boolean.
  CubeField.LayoutForm -> XlLayoutFormType
  CubeField.LayoutSubtotalLocation -> XlSubtotalLocationType
  CubeField.Name -> Returns a String value that represents the name of the object.
  CubeField.Orientation -> XlPivotFieldOrientation
  CubeField.Parent -> Returns the parent object for the specified object. Read-only.
  CubeField.PivotFields -> PivotFields
  CubeField.Position -> Returns or sets a Long value that represents the position of the hierarchy field on the PivotTable report when it's dragged from the field well.
  CubeField.ShowInFieldList -> When set to True (default), a CubeField object will be shown in the field list. Read/write Boolean.
  CubeField.TreeviewControl -> TreeviewControl
  CubeField.Value -> Returns a String value that represents the name of the specified field.
  Parameters.Application -> Application
  Parameters.Count -> Returns a Long value that represents the number of objects in the collection.
  Parameters.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Parameters.Parent -> Returns the parent object for the specified object. Read-only.
  WorkbookConnection.Application -> Application
  WorkbookConnection.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  WorkbookConnection.DataFeedConnection -> DataFeedConnection
  WorkbookConnection.Description -> Returns or sets a brief description for a WorkbookConnection object. Read/write String.
  WorkbookConnection.InModel -> Specifies whether the WorkbookConnection has been added to the model. Read-only Boolean.
  WorkbookConnection.ModelConnection -> Returns an object that contains information for the new model connection type introduced in Excel 2013 to interact with the integrated Data Model. Read-only.
  WorkbookConnection.ModelTables -> ModelTables
  WorkbookConnection.Name -> Returns or sets the name of the WorkbookConnection object. Read/write String.
  WorkbookConnection.ODBCConnection -> Returns the ODBC connection details for the specified WorkbookConnection object. Read-only ODBCConnection.
  WorkbookConnection.OLEDBConnection -> Returns the OLEDB connection details for the specified WorkbookConnection object. Read-only OLEDBConnection.
  WorkbookConnection.Parent -> Returns the parent object for the specified object. Read-only.
  WorkbookConnection.Ranges -> Returns the range of objects for the specified WorkbookConnection object. Read-only Ranges.
  WorkbookConnection.RefreshWithRefreshAll -> Determines if the connection should be refreshed when Refresh All is executed. Read/write Boolean.
  WorkbookConnection.TextConnection -> TextConnection
  WorkbookConnection.Type -> XlConnectionType
  WorkbookConnection.WorksheetDataConnection -> Returns an object that contains information for a connection from the PowerPivot Model to data within the workbook, such as a range, named range, or table. Read-only.
  SparklineGroup.Application -> Application
  SparklineGroup.Axes -> SparkAxes
  SparklineGroup.Count -> Returns the number of sparklines in the sparkline group. Read-only.
  SparklineGroup.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SparklineGroup.DateRange -> Gets or sets the date range for the sparkline group. Read/write.
  SparklineGroup.DisplayBlanksAs -> 
  SparklineGroup.DisplayHidden -> Specifies if hidden cells are plotted in the sparkline group. Read/write.
  SparklineGroup.Item -> Sparkline
  SparklineGroup.LineWeight -> Gets or sets the thickness of the sparklines in the sparkline group. Read/write.
  SparklineGroup.Location -> Range
  SparklineGroup.Parent -> Returns the parent object for the specified object. Read-only.
  SparklineGroup.PlotBy -> Returns or sets how to plot the sparkline when the data on which it is based is in a square-shaped range. Read/write.
  SparklineGroup.Points -> SparkPoints
  SparklineGroup.SeriesColor -> FormatColor
  SparklineGroup.SourceData -> Returns or sets the range that contains the source data for the sparkline group. Read/write.
  SparklineGroup.Type -> Gets or sets the type of sparkline for the group. Read/write.
  AutoFilter.Application -> Application
  AutoFilter.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  AutoFilter.FilterMode -> Returns True if the worksheet is in the AutoFilter filter mode. Read-only Boolean.
  AutoFilter.Filters -> Filters
  AutoFilter.Parent -> Returns the parent object for the specified object. Read-only.
  AutoFilter.Range -> Range
  AutoFilter.Sort -> Gets the sort column or columns, and sort order for the AutoFilter collection.
  Comments.Application -> Application
  Comments.Count -> Returns a Long value that represents the number of objects in the collection.
  Comments.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Comments.Parent -> Returns the parent object for the specified object. Read-only.
  CustomProperties.Application -> Application
  CustomProperties.Count -> Returns a Long value that represents the number of objects in the collection.
  CustomProperties.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  CustomProperties.Item -> Returns a single object from a collection.
  CustomProperties.Parent -> Returns the parent object for the specified object. Read-only.
  Outline.Application -> Application
  Outline.AutomaticStyles -> True if the outline uses automatic styles. Read/write Boolean.
  Outline.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Outline.Parent -> Returns the parent object for the specified object. Read-only.
  Outline.SummaryColumn -> XlSummaryColumn
  Outline.SummaryRow -> XlSummaryRow
  Protection.AllowDeletingColumns -> Returns True if the deletion of columns is allowed on a protected worksheet. Read-only Boolean.
  Protection.AllowDeletingRows -> Returns True if the deletion of rows is allowed on a protected worksheet. Read-only Boolean.
  Protection.AllowEditRanges -> AllowEditRanges
  Protection.AllowFiltering -> Returns True if the user is allowed to make use of an AutoFilter that was created before the sheet was protected. Read-only Boolean.
  Protection.AllowFormattingCells -> Returns True if the formatting of cells is allowed on a protected worksheet. Read-only Boolean.
  Protection.AllowFormattingColumns -> Returns True if the formatting of columns is allowed on a protected worksheet. Read-only Boolean.
  Protection.AllowFormattingRows -> Returns True if the formatting of rows is allowed on a protected worksheet. Read-only Boolean.
  Protection.AllowInsertingColumns -> Returns True if the insertion of columns is allowed on a protected worksheet. Read-only Boolean.
  Protection.AllowInsertingHyperlinks -> Returns True if the insertion of hyperlinks is allowed on a protected worksheet. Read-only Boolean.
  Protection.AllowInsertingRows -> Returns True if the insertion of rows is allowed on a protected worksheet. Read-only Boolean.
  Protection.AllowSorting -> Returns True if the sorting option is allowed on a protected worksheet. Read-only Boolean.
  Protection.AllowUsingPivotTables -> Returns True if the user is allowed to manipulate PivotTables on a protected worksheet. Read-only Boolean.
  QueryTables.Application -> Application
  QueryTables.Count -> Returns a Long value that represents the number of objects in the collection.
  QueryTables.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  QueryTables.Parent -> Returns the parent object for the specified object. Read-only.
  Sort.Application -> Application
  Sort.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Sort.Header -> XlYesNoGuess
  Sort.MatchCase -> bool
  Sort.Orientation -> XlSortOrientation
  Sort.Parent -> Returns the parent object for the specified object. Read-only.
  Sort.Rng -> Return the range of values on which the sort is performed. Read-only.
  Sort.SortFields -> SortFields
  Sort.SortMethod -> XlSortMethod
  ChartFormat.Adjustments -> Adjustments
  ChartFormat.Application -> Application
  ChartFormat.AutoShapeType -> MsoAutoShapeType
  ChartFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ChartFormat.Fill -> FillFormat
  ChartFormat.Glow -> GlowFormat
  ChartFormat.Line -> LineFormat
  ChartFormat.Parent -> Returns the parent object for the specified object. Read-only.
  ChartFormat.PictureFormat -> PictureFormat
  ChartFormat.Shadow -> ShadowFormat
  ChartFormat.SoftEdge -> SoftEdgeFormat
  ChartFormat.TextFrame2 -> TextFrame2
  ChartFormat.ThreeD -> ThreeDFormat
  Graphic.Application -> Application
  Graphic.Brightness -> Returns or sets the brightness of the specified picture or OLE object. The value for this property must be a number from 0.0 (dimmest) to 1.0 (brightest). Read/write Single.
  Graphic.ColorType -> MsoPictureColorType
  Graphic.Contrast -> Returns or sets the contrast for the specified picture or OLE object. The value for this property must be a number from 0.0 (the least contrast) to 1.0 (the greatest contrast). Read/write Single.
  Graphic.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Graphic.CropBottom -> points
  Graphic.CropLeft -> points
  Graphic.CropRight -> points
  Graphic.CropTop -> points
  Graphic.Filename -> Returns or sets the URL (on the intranet or the web) or path (local or network) to the location where the specified source object was saved. Read/write String.
  Graphic.Height -> points
  Graphic.LockAspectRatio -> MsoTriState
  Graphic.Parent -> Returns the parent object for the specified object. Read-only.
  Graphic.Width -> points
  Pages.Count -> Returns the number of objects in the collection. Read-only Long.
  Pages.Item -> Page
  ShapeRange.Adjustments -> Adjustments
  ShapeRange.AlternativeText -> ShapeRange
  ShapeRange.Application -> Application
  ShapeRange.AutoShapeType -> Shape
  ShapeRange.BackgroundStyle -> MsoBackgroundStyleIndex
  ShapeRange.BlackWhiteMode -> MsoBlackWhiteMode
  ShapeRange.Callout -> CalloutFormat
  ShapeRange.Chart -> Chart
  ShapeRange.Child -> MsoTriState
  ShapeRange.ConnectionSiteCount -> Returns the number of connection sites on the specified shape. Read-only Long.
  ShapeRange.Connector -> MsoTriState
  ShapeRange.ConnectorFormat -> ConnectorFormat
  ShapeRange.Count -> Returns a Long value that represents the number of objects in the collection.
  ShapeRange.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ShapeRange.Decorative -> Sets or returns the decorative flag for the specified object. Read/write.
  ShapeRange.Fill -> FillFormat
  ShapeRange.Glow -> GlowFormat
  ShapeRange.GraphicStyle -> MsoGraphicStyleIndex
  ShapeRange.GroupItems -> GroupShapes
  ShapeRange.HasChart -> MsoTriState
  ShapeRange.Height -> points
  ShapeRange.HorizontalFlip -> MsoTriState
  ShapeRange.ID -> Returns a Long value that represents the type for the specified object.
  ShapeRange.Left -> points
  ShapeRange.Line -> LineFormat
  ShapeRange.LockAspectRatio -> MsoTriState
  ShapeRange.Model3D -> Model3DFormat
  ShapeRange.Name -> Returns or sets a String value representing the name of the object.
  ShapeRange.Nodes -> ShapeNodes
  ShapeRange.Parent -> Returns the parent object for the specified object. Read-only.
  ShapeRange.ParentGroup -> Shape
  ShapeRange.PictureFormat -> PictureFormat
  ShapeRange.Reflection -> ReflectionFormat
  ShapeRange.Rotation -> Returns or sets the rotation of the shape, in degrees. Read/write Single.
  ShapeRange.Shadow -> ShadowFormat
  ShapeRange.ShapeStyle -> MsoShapeStyleIndex
  ShapeRange.SoftEdge -> SoftEdgeFormat
  ShapeRange.TextEffect -> TextEffectFormat
  ShapeRange.TextFrame -> TextFrame
  ShapeRange.TextFrame2 -> TextFrame2
  ShapeRange.ThreeD -> ThreeDFormat
  ShapeRange.Title -> Returns or sets the title of the alternative text associated with the specified shape range. Read/write.
  ShapeRange.Top -> points
  ShapeRange.Type -> MsoShapeType
  ShapeRange.VerticalFlip -> MsoTriState
  ShapeRange.Vertices -> AddCurve
  ShapeRange.Visible -> MsoTriState
  ShapeRange.Width -> points
  ShapeRange.ZOrderPosition -> Returns the position of the specified shape in the z-order. Read-only Long.
  CustomView.Application -> Application
  CustomView.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  CustomView.Name -> Returns a String value that represents the name of the object.
  CustomView.Parent -> Returns the parent object for the specified object. Read-only.
  CustomView.PrintSettings -> True if print settings are included in the custom view. Read-only Boolean.
  CustomView.RowColSettings -> True if the custom view includes settings for hidden rows and columns (including filter information). Read-only Boolean.
  IconSet.Application -> Application
  IconSet.Count -> Returns a Long value that specifies the number of icons in the icon set. Read-only.
  IconSet.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  IconSet.ID -> XlIconSet
  IconSet.Item -> Icon
  IconSet.Parent -> Returns the parent object for the specified object. Read-only.
  ModelFormatBoolean.Application -> Application
  ModelFormatBoolean.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ModelFormatBoolean.Parent -> Returns the parent object for the specified object. Read-only.
  ModelFormatCurrency.Application -> Application
  ModelFormatCurrency.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ModelFormatCurrency.DecimalPlaces -> Specifies the number of decimal places after the dot. Read/write Long.
  ModelFormatCurrency.Parent -> Returns the parent object for the specified object. Read-only.
  ModelFormatCurrency.Symbol -> Specifies the symbol to use to represent the currency. Read/write String.
  ModelFormatDate.Application -> Application
  ModelFormatDate.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ModelFormatDate.FormatString -> Specifies the date format, for example, "dd/mm/yy". Read/write String.
  ModelFormatDate.Parent -> Returns the parent object for the specified object. Read-only.
  ModelFormatDecimalNumber.Application -> Application
  ModelFormatDecimalNumber.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ModelFormatDecimalNumber.DecimalPlaces -> Specifies the number of decimal places after the dot. Read/write Long.
  ModelFormatDecimalNumber.Parent -> Returns the parent object for the specified object. Read-only.
  ModelFormatDecimalNumber.UseThousandSeparator -> Specifies whether to display commas between thousands. Read/write Boolean.
  ModelFormatGeneral.Application -> Application
  ModelFormatGeneral.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ModelFormatGeneral.Parent -> Returns the parent object for the specified object. Read-only.
  ModelFormatPercentageNumber.Application -> Application
  ModelFormatPercentageNumber.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ModelFormatPercentageNumber.DecimalPlaces -> Specifies the number of decimal places after the dot. Read/write Long.
  ModelFormatPercentageNumber.Parent -> Returns the parent object for the specified object. Read-only.
  ModelFormatPercentageNumber.UseThousandSeparator -> Specifies whether to display commas between thousands. Read/write Boolean.
  ModelFormatScientificNumber.Application -> Application
  ModelFormatScientificNumber.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ModelFormatScientificNumber.DecimalPlaces -> Specifies the number of decimal places after the dot. Read/write Long.
  ModelFormatScientificNumber.Parent -> Returns the parent object for the specified object. Read-only.
  ModelFormatWholeNumber.Application -> Application
  ModelFormatWholeNumber.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ModelFormatWholeNumber.Parent -> Returns the parent object for the specified object. Read-only.
  ModelFormatWholeNumber.UseThousandSeparator -> Specifies whether to display commas between thousands. Read/write Boolean.
  ModelMeasures.Application -> Application
  ModelMeasures.Count -> Returns an integer that represents the number of objects in the collection.
  ModelMeasures.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ModelMeasures.Parent -> Returns the parent object for the specified object. Read-only.
  ModelRelationships.Application -> Application
  ModelRelationships.Count -> ModelRelationship
  ModelRelationships.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  ModelRelationships.Parent -> Returns an Object that represents the parent object of the specified ModelRelationships object. Read-only.
  ModelTables.Application -> Application
  ModelTables.Count -> ModelTable
  ModelTables.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  ModelTables.Parent -> Returns an Object that represents the parent object of the specified ModelTables object. Read-only.
  WorkbookQuery.Application -> Application
  WorkbookQuery.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  WorkbookQuery.Description -> The description of the query. Read/write String.
  WorkbookQuery.Formula -> The Power Query M formula for the object. Read/write String.
  WorkbookQuery.Name -> The name of the query. Read/write String.
  WorkbookQuery.Parent -> Returns the parent object for the specified object. Read-only.
  SlicerCache.Application -> Application
  SlicerCache.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SlicerCache.CrossFilterType -> Returns or sets whether a slicer is participating in cross filtering with other slicers that share the same slicer cache, and how cross filtering is displayed. Read/write.
  SlicerCache.FilterCleared -> Returns whether the slicer or timeline filter state is cleared. Read-only Boolean.
  SlicerCache.Index -> SlicerCaches
  SlicerCache.List -> bool
  SlicerCache.ListObject -> ListObject
  SlicerCache.Name -> Returns or sets the name of the slicer cache.
  SlicerCache.OLAP -> Returns whether the slicer associated with the specified slicer cache is based on an OLAP data source. Read-only.
  SlicerCache.Parent -> SlicerCaches
  SlicerCache.PivotTables -> SlicerPivotTables
  SlicerCache.RequireManualUpdate -> True when manual updates of the slicer cache are required. Read/write Boolean.
  SlicerCache.ShowAllItems -> Returns or sets whether slicers connected to the specified slicer cache display items that have been deleted from the corresponding PivotCache. Read/write.
  SlicerCache.SlicerCacheLevels -> SlicerCacheLevel
  SlicerCache.SlicerCacheType -> XlSlicerCacheType
  SlicerCache.SlicerItems -> SlicerItems
  SlicerCache.Slicers -> Slicers
  SlicerCache.SortItems -> XlSlicerSort
  SlicerCache.SortUsingCustomLists -> Returns or sets whether items in the specified slicer cache will be sorted by the custom lists. Read/write.
  SlicerCache.SourceName -> Returns the name of the data source that the slicer is connected to. Read-only.
  SlicerCache.SourceType -> Returns the kind of data source that the slicer is connected to. Read-only.
  SlicerCache.TimelineState -> The timeline-specific state of the SlicerCache object. Read-only.
  SlicerCache.VisibleSlicerItems -> SlicerItems
  SlicerCache.VisibleSlicerItemsList -> Returns or sets the list of MDX unique names for members at all levels of the hierarchy where manual filtering is applied. Read/write.
  SlicerCache.WorkbookConnection -> WorkbookConnection
  HPageBreak.Application -> Application
  HPageBreak.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  HPageBreak.Extent -> XlPageBreakExtent
  HPageBreak.Location -> Range
  HPageBreak.Parent -> Returns the parent object for the specified object. Read-only.
  HPageBreak.Type -> XlPageBreak
  VPageBreak.Application -> Application
  VPageBreak.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  VPageBreak.Extent -> XlPageBreakExtent
  VPageBreak.Location -> Range
  VPageBreak.Parent -> Returns the parent object for the specified object. Read-only.
  VPageBreak.Type -> XlPageBreak
  Adjustments.Application -> Application
  Adjustments.Count -> Returns an Integer value that represents the number of objects in the collection.
  Adjustments.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Adjustments.Item -> Returns or sets the adjustment value specified by the Index argument. Read/write Single.
  Adjustments.Parent -> Returns the parent object for the specified object. Read-only.
  CalloutFormat.Accent -> MsoTriState
  CalloutFormat.Angle -> MsoCalloutAngleType
  CalloutFormat.Application -> Application
  CalloutFormat.AutoAttach -> MsoTriState
  CalloutFormat.AutoLength -> MsoCalloutType
  CalloutFormat.Border -> MsoTriState
  CalloutFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  CalloutFormat.Drop -> points
  CalloutFormat.DropType -> MsoCalloutDropType
  CalloutFormat.Gap -> points
  CalloutFormat.Length -> points
  CalloutFormat.Parent -> Returns the parent object for the specified object. Read-only.
  CalloutFormat.Type -> MsoCalloutType
  ConnectorFormat.Application -> Application
  ConnectorFormat.BeginConnected -> MsoTriState
  ConnectorFormat.BeginConnectedShape -> Shape
  ConnectorFormat.BeginConnectionSite -> Returns an integer that specifies the connection site that the beginning of a connector is connected to. Read-only Long.
  ConnectorFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ConnectorFormat.EndConnected -> MsoTriState
  ConnectorFormat.EndConnectedShape -> Shape
  ConnectorFormat.EndConnectionSite -> Returns an integer that specifies the connection site that the end of a connector is connected to. Read-only Long.
  ConnectorFormat.Parent -> Returns the parent object for the specified object. Read-only.
  ConnectorFormat.Type -> MsoConnectorType
  ControlFormat.Application -> Application
  ControlFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ControlFormat.DropDownLines -> Returns or sets the number of list lines displayed in the drop-down portion of a combo box. Read/write Long.
  ControlFormat.Enabled -> True if the object is enabled. Read/write Boolean.
  ControlFormat.LargeChange -> Returns or sets the amount that the scroll box increments or decrements for a page scroll (when the user clicks in the scroll bar body region). Read/write Long.
  ControlFormat.LinkedCell -> Returns or sets the worksheet range linked to the control's value. If you place a value in the cell, the control takes this value. Likewise, if you change the value of the control, that value is also placed in the cell. Read/write String.
  ControlFormat.ListCount -> Returns the number of entries in a list box or combo box. Returns 0 (zero) if there are no entries in the list. Read-only Long.
  ControlFormat.ListFillRange -> Returns or sets the worksheet range used to fill the specified list box. Setting this property destroys any existing list in the list box. Read/write String.
  ControlFormat.ListIndex -> Returns or sets the index number of the currently selected item in a list box or combo box. Read/write Long.
  ControlFormat.LockedText -> True if the text in the specified object will be locked to prevent changes when the workbook is protected. Read/write Boolean.
  ControlFormat.Max -> Returns or sets the maximum value of a scroll bar or spinner range. The scroll bar or spinner won't take on values greater than this maximum value. Read/write Long.
  ControlFormat.Min -> Returns or sets the minimum value of a scroll bar or spinner range. The scroll bar or spinner won't take on values less than this minimum value. Read/write Long.
  ControlFormat.MultiSelect -> constants
  ControlFormat.Parent -> Returns the parent object for the specified object. Read-only.
  ControlFormat.PrintObject -> True if the object will be printed when the document is printed. Read/write Boolean.
  ControlFormat.SmallChange -> Returns or sets the amount that the scroll bar or spinner is incremented or decremented for a line scroll (when the user chooses an arrow). Read/write Long.
  ControlFormat.Value -> Returns or sets a Long value that represents the name of the specified control format.
  FillFormat.Application -> Application
  FillFormat.BackColor -> ColorFormat
  FillFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  FillFormat.ForeColor -> ColorFormat
  FillFormat.GradientAngle -> Returns or sets the angle of the gradient fill for the specified fill format. Read/write.
  FillFormat.GradientColorType -> MsoGradientColorType
  FillFormat.GradientDegree -> Returns the gradient degree of the specified one-color shaded fill as a floating-point value from 0.0 (dark) through 1.0 (light). Read-only Single.
  FillFormat.GradientStops -> Returns the end point for the gradient fill. Read-only.
  FillFormat.GradientStyle -> MsoGradientStyle
  FillFormat.GradientVariant -> Returns the shade variant for the specified fill as an integer value from 1 through 4. The values for this property correspond to the gradient variants (numbered from left to right and from top to bottom) on the Gradient tab in the Fill Effects dialog box. Read-only Long.
  FillFormat.Parent -> Returns the parent object for the specified object. Read-only.
  FillFormat.Pattern -> MsoPatternType
  FillFormat.PictureEffects -> PictureEffects
  FillFormat.PresetGradientType -> MsoPresetGradientType
  FillFormat.PresetTexture -> MsoPresetTexture
  FillFormat.RotateWithObject -> MsoTriState
  FillFormat.TextureAlignment -> Returns or sets the alignment (the origin of the coordinate grid) for the tiling of the texture fill. Read/write.
  FillFormat.TextureHorizontalScale -> Returns or sets the horizontal scaling factor for the texture fill. Read/write Single.
  FillFormat.TextureName -> Returns the name of the custom texture file for the specified fill. Read-only String.
  FillFormat.TextureOffsetX -> Returns the offset X value for the specified fill. Read/write Single.
  FillFormat.TextureOffsetY -> Returns the offset Y value for the specified fill. Read/write Single.
  FillFormat.TextureTile -> MsoTriState
  FillFormat.TextureType -> MsoTextureType
  FillFormat.TextureVerticalScale -> Returns the texture vertical scale for the specified fill. Read/write Single.
  FillFormat.Transparency -> Returns or sets the degree of transparency of the specified fill as a value from 0.0 (opaque) through 1.0 (clear). Read/write Double.
  FillFormat.Type -> MsoFillType
  FillFormat.Visible -> MsoTriState
  GroupShapes.Application -> Application
  GroupShapes.Count -> Returns a Long value that represents the number of objects in the collection.
  GroupShapes.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  GroupShapes.Parent -> Returns the parent object for the specified object. Read-only.
  GroupShapes.Range -> ShapeRange
  LineFormat.Application -> Application
  LineFormat.BackColor -> ColorFormat
  LineFormat.BeginArrowheadLength -> MsoArrowheadLength
  LineFormat.BeginArrowheadStyle -> MsoArrowheadStyle
  LineFormat.BeginArrowheadWidth -> MsoArrowheadWidth
  LineFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  LineFormat.DashStyle -> MsoLineDashStyle
  LineFormat.EndArrowheadLength -> MsoArrowheadLength
  LineFormat.EndArrowheadStyle -> MsoArrowheadStyle
  LineFormat.EndArrowheadWidth -> MsoArrowheadWidth
  LineFormat.ForeColor -> ColorFormat
  LineFormat.InsetPen -> Returns or sets whether lines are drawn inside the specified shape's boundaries. Read/write.
  LineFormat.Parent -> Returns the parent object for the specified object. Read-only.
  LineFormat.Pattern -> MsoPatternType
  LineFormat.Style -> MsoLineStyle
  LineFormat.Transparency -> Returns or sets the degree of transparency of the specified fill as a value from 0.0 (opaque) through 1.0 (clear). Read/write Double.
  LineFormat.Visible -> MsoTriState
  LineFormat.Weight -> Returns or sets a Single value that represents the weight of the line.
  LinkFormat.Application -> Application
  LinkFormat.AutoUpdate -> True if the LinkFormat object is updated automatically when the source changes. Read-only Boolean.
  LinkFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  LinkFormat.Locked -> Returns or sets a Boolean value that indicates if the object is locked.
  LinkFormat.Parent -> Returns the parent object for the specified object. Read-only.
  Model3DFormat.Application -> Application
  Model3DFormat.AutoFit -> Returns whether AutoFit is enabled for the model. Read/write.
  Model3DFormat.CameraPositionX -> Returns the x-coordinate of a 3D model object's camera position. Read/write.
  Model3DFormat.CameraPositionY -> Returns the y-coordinate of a 3D model object's camera position. Read/write.
  Model3DFormat.CameraPositionZ -> Returns the z-coordinate of a 3D model object's camera position. Read/write.
  Model3DFormat.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only.
  Model3DFormat.FieldOfView -> Returns the field-of-view angle of a 3D model object's camera, expressed in degrees. Read/write.
  Model3DFormat.LookAtPointX -> Returns the x-coordinate of a 3D model object's camera look-at position. Read/write.
  Model3DFormat.LookAtPointY -> Returns the y-coordinate of a 3D model object's camera look-at position. Read/write.
  Model3DFormat.LookAtPointZ -> Returns the z-coordinate of a 3D model object's camera look-at position. Read/write.
  Model3DFormat.Parent -> Returns the parent object for the specified object. Read-only.
  Model3DFormat.RotationX -> Returns the x-angle of a 3D model object's rotation. Read/write.
  Model3DFormat.RotationY -> Returns the y-angle of a 3D model object's rotation. Read/write.
  Model3DFormat.RotationZ -> Returns the z-angle of a 3D model object's rotation. Read/write.
  ShapeNodes.Application -> Application
  ShapeNodes.Count -> Returns an Integer value that represents the number of objects in the collection.
  ShapeNodes.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ShapeNodes.Parent -> Returns the parent object for the specified object. Read-only.
  OLEFormat.Application -> Application
  OLEFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  OLEFormat.Object -> Returns the OLE Automation object associated with this OLE object. Read-only Object.
  OLEFormat.Parent -> Returns the parent object for the specified object. Read-only.
  OLEFormat.progID -> Returns the programmatic identifiers for the object. Read-only String.
  PictureFormat.Application -> Application
  PictureFormat.Brightness -> Returns or sets the brightness of the specified picture or OLE object. The value for this property must be a number from 0.0 (dimmest) to 1.0 (brightest). Read/write Single.
  PictureFormat.ColorType -> Returns or sets the type of color transformation applied to the specified picture or OLE object. Read/write.
  PictureFormat.Contrast -> Returns or sets the contrast for the specified picture or OLE object. The value for this property must be a number from 0.0 (the least contrast) to 1.0 (the greatest contrast). Read/write Single.
  PictureFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PictureFormat.Crop -> Crop
  PictureFormat.CropBottom -> points
  PictureFormat.CropLeft -> points
  PictureFormat.CropRight -> points
  PictureFormat.CropTop -> points
  PictureFormat.Parent -> Returns the parent object for the specified object. Read-only.
  PictureFormat.TransparencyColor -> TransparentBackground
  PictureFormat.TransparentBackground -> TransparencyColor
  ShadowFormat.Application -> Application
  ShadowFormat.Blur -> Returns or sets the degree of blurriness of the specified shadow. Read/write Single.
  ShadowFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ShadowFormat.ForeColor -> ColorFormat
  ShadowFormat.Obscured -> True if the shadow of the specified shape appears filled in and is obscured by the shape, even if the shape has no fill.
  ShadowFormat.OffsetX -> points
  ShadowFormat.OffsetY -> points
  ShadowFormat.Parent -> Returns the parent object for the specified object. Read-only.
  ShadowFormat.RotateWithShape -> MsoTriState
  ShadowFormat.Size -> Returns or sets the size of the specified shadow. Read/write Single.
  ShadowFormat.Style -> MsoShadowStyle
  ShadowFormat.Transparency -> Returns or sets the degree of transparency of the specified fill as a value from 0.0 (opaque) through 1.0 (clear). Read/write Double.
  ShadowFormat.Type -> MsoShadowType
  ShadowFormat.Visible -> MsoTriState
  TextEffectFormat.Alignment -> MsoTextEffectAlignment
  TextEffectFormat.Application -> Application
  TextEffectFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  TextEffectFormat.FontBold -> MsoTriState
  TextEffectFormat.FontItalic -> MsoTriState
  TextEffectFormat.FontName -> Returns or sets the name of the font in the specified WordArt. Read/write String.
  TextEffectFormat.FontSize -> points
  TextEffectFormat.KernedPairs -> MsoTriState
  TextEffectFormat.NormalizedHeight -> MsoTriState
  TextEffectFormat.Parent -> Returns the parent object for the specified object. Read-only.
  TextEffectFormat.PresetShape -> MsoPresetTextEffectShape
  TextEffectFormat.PresetTextEffect -> MsoPresetTextEffect
  TextEffectFormat.RotatedChars -> MsoTriState
  TextEffectFormat.Text -> Returns or sets the text for the specified object. Read/write String.
  TextEffectFormat.Tracking -> Returns or sets the ratio of the horizontal space allotted to each character in the specified WordArt to the width of the character. Can be a value from 0 (zero) through 5. Large values for this property specify ample space between characters; values less than 1 can produce character overlap. Read/write Single.
  TextFrame.Application -> Application
  TextFrame.AutoMargins -> Returns or sets whether Excel automatically calculates text frame margins. Read/write.
  TextFrame.AutoSize -> True if the size of the specified object is changed automatically to fit text within its boundaries. Read/write Boolean.
  TextFrame.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  TextFrame.HorizontalAlignment -> XlHAlign
  TextFrame.HorizontalOverflow -> Returns or sets the horizontal overflow setting for the specified object. Read/write.
  TextFrame.MarginBottom -> points
  TextFrame.MarginLeft -> points
  TextFrame.MarginRight -> points
  TextFrame.MarginTop -> points
  TextFrame.Orientation -> Returns or sets a Long value that represents the text frame orientation.
  TextFrame.Parent -> Returns the parent object for the specified object. Read-only.
  TextFrame.ReadingOrder -> XlReadingOrder
  TextFrame.VerticalAlignment -> XlVAlign
  TextFrame.VerticalOverflow -> Returns or sets the vertical overflow setting for the specified object. Read/write.
  TextFrame2.Application -> Application
  TextFrame2.AutoSize -> MsoAutoSize
  TextFrame2.Column -> TextColumn2
  TextFrame2.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  TextFrame2.HasText -> MsoTriState
  TextFrame2.HorizontalAnchor -> MsoHorizontalAnchor
  TextFrame2.MarginBottom -> points
  TextFrame2.MarginLeft -> points
  TextFrame2.MarginRight -> points
  TextFrame2.MarginTop -> points
  TextFrame2.NoTextRotation -> Returns or sets whether text remains flat when the specified object is rotated. Read/write.
  TextFrame2.Orientation -> MsoTextOrientation
  TextFrame2.Parent -> Returns the parent object for the specified object. Read-only.
  TextFrame2.PathFormat -> MsoPathFormat
  TextFrame2.Ruler -> Ruler2
  TextFrame2.TextRange -> TextRange2
  TextFrame2.ThreeD -> ThreeDFormat
  TextFrame2.VerticalAnchor -> MsoVerticalAnchor
  TextFrame2.WarpFormat -> MsoWarpFormat
  TextFrame2.WordArtformat -> MsoPresetTextEffect
  TextFrame2.WordWrap -> MsoTriState
  ThreeDFormat.Application -> Application
  ThreeDFormat.BevelBottomDepth -> Returns or sets the bottom depth when using the bevel effect on a ThreeDFormat object. Read/write Single.
  ThreeDFormat.BevelBottomInset -> Returns or sets a value indicating whether the bottom insert bevel should be raised for a ThreeDFormat object. Read/write Single.
  ThreeDFormat.BevelBottomType -> MsoBevelType
  ThreeDFormat.BevelTopDepth -> Returns or sets the top depth when using the bevel effect on a ThreeDFormat object. Read/write Single.
  ThreeDFormat.BevelTopInset -> Returns or sets a value indicating whether the top insert bevel should be raised for a ThreeDFormat object. Read/write Single.
  ThreeDFormat.BevelTopType -> MsoBevelType
  ThreeDFormat.ContourColor -> ColorFormat
  ThreeDFormat.ContourWidth -> Returns or sets the contour width for a ThreeDFormat object. Read/write Single.
  ThreeDFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ThreeDFormat.Depth -> Returns or sets a Single value that represents the depth of the shape's extrusion.
  ThreeDFormat.ExtrusionColor -> ColorFormat
  ThreeDFormat.ExtrusionColorType -> MsoExtrusionColorType
  ThreeDFormat.FieldOfView -> Returns or sets the angle at which a ThreeDFormat object can be viewed. Read/write Single.
  ThreeDFormat.LightAngle -> Returns or sets the angle of the extrusion lights set on a ThreeDFormat object. Read/write Single.
  ThreeDFormat.Parent -> Returns the parent object for the specified object. Read-only.
  ThreeDFormat.Perspective -> MsoTriState
  ThreeDFormat.PresetCamera -> MsoPresetCamera
  ThreeDFormat.PresetExtrusionDirection -> MsoPresetExtrusionDirection
  ThreeDFormat.PresetLighting -> MsoLightRigType
  ThreeDFormat.PresetLightingDirection -> MsoPresetLightingDirection
  ThreeDFormat.PresetLightingSoftness -> MsoPresetLightingSoftness
  ThreeDFormat.PresetMaterial -> MsoPresetMaterial
  ThreeDFormat.PresetThreeDFormat -> MsoPresetThreeDFormat
  ThreeDFormat.ProjectText -> MsoTriState
  ThreeDFormat.RotationX -> Returns or sets the rotation of the extruded shape around the x-axis in degrees. Can be a value from -90 through 90. A positive value indicates upward rotation; a negative value indicates downward rotation. Read/write Single.
  ThreeDFormat.RotationY -> Returns or sets the rotation of the extruded shape around the y-axis in degrees. Can be a value from -90 through 90. A positive value indicates rotation to the left; a negative value indicates rotation to the right. Read/write Single.
  ThreeDFormat.RotationZ -> Returns or sets the rotation of the extruded shape around the z-axis in degrees. Can be a value from -90 through 90. A positive value indicates upward rotation; a negative value indicates downward rotation. Read/write Single.
  ThreeDFormat.Visible -> MsoTriState
  ThreeDFormat.Z -> Returns the Z order of the specified ThreeDFormat object. Read/write Single.
  ListColumn.Application -> Application
  ListColumn.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ListColumn.DataBodyRange -> Range
  ListColumn.Index -> ListColumns
  ListColumn.Name -> Returns or sets a String value that represents the name of the list column.
  ListColumn.Parent -> Returns the parent object for the specified object. Read-only.
  ListColumn.Range -> Range
  ListColumn.Total -> Returns the Total row for a ListColumn object. Read-only.
  ListColumn.TotalsCalculation -> XlTotalsCalculation
  ListColumn.XPath -> XPath
  ListRow.Application -> Application
  ListRow.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ListRow.Index -> ListRows
  ListRow.Parent -> Returns the parent object for the specified object. Read-only.
  ListRow.Range -> Range
  XmlDataBinding.Application -> Application
  XmlDataBinding.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  XmlDataBinding.Parent -> Returns the parent object for the specified object. Read-only.
  XmlDataBinding.SourceUrl -> Returns a String that represents the path to the XML data file or the web service that provides the source data for the specified data binding. Read-only.
  XmlNamespace.Application -> Application
  XmlNamespace.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  XmlNamespace.Parent -> Returns the parent object for the specified object. Read-only.
  XmlNamespace.Prefix -> Returns a String that represents the prefix for the specified XML namespace. Read-only.
  XmlNamespace.Uri -> Returns a String that represents the Uniform Resource Identifier (URI) for the specified XML namespace. Read-only.
  XmlSchemas.Application -> Application
  XmlSchemas.Count -> Returns a Long value that represents the number of objects in the collection.
  XmlSchemas.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  XmlSchemas.Item -> Returns a single object from a collection.
  XmlSchemas.Parent -> Returns the parent object for the specified object. Read-only.
  ValueChange.AllocationMethod -> Returns the method to use to allocate this value when performing what-if analysis. Read-only.
  ValueChange.AllocationValue -> Returns the value to allocate when performing what-if analysis. Read-only.
  ValueChange.AllocationWeightExpression -> Returns the MDX weight expression to use for this value when performing what-if analysis. Read-only.
  ValueChange.Application -> Application
  ValueChange.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ValueChange.Order -> PivotTableChangeList
  ValueChange.Parent -> Returns the parent object for the specified object. Read-only.
  ValueChange.PivotCell -> PivotCell
  ValueChange.Tuple -> Returns the MDX tuple of the value that was changed in the OLAP data source. Read-only.
  ValueChange.Value -> Returns the value that the user entered in the cell or that the formula in the cell was evaluated to when the UPDATE CUBE statement was last run against the OLAP data source. Read-only.
  ValueChange.VisibleInPivotTable -> Returns whether the cell (tuple) is currently visible in the PivotTable report. Read-only.
  PivotLines.Application -> Application
  PivotLines.Count -> Returns the number of items in the PivotLines collection. Read-only.
  PivotLines.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PivotLines.Item -> Returns a specific element of the PivotLines collection object by its position in the collection. Read-only.
  PivotLines.Parent -> Returns the parent object for the specified PivotLines object. Read-only.
  PivotFormula.Application -> Application
  PivotFormula.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PivotFormula.Formula -> Returns or sets a String value that represents the object's formula in A1-style notation and in the language of the macro.
  PivotFormula.Index -> PivotFormulas
  PivotFormula.Parent -> Returns the parent object for the specified object. Read-only.
  PivotFormula.StandardFormula -> Returns or sets a String specifying formulas with standard English (United States) formatting. Read/write.
  PivotFormula.Value -> Returns or sets a String value that represents the name of the specified formula in the PivotTable formula.
  Slicer.ActiveItem -> SlicerItem
  Slicer.Application -> Application
  Slicer.Caption -> Returns or sets the caption of the specified slicer. Read/write.
  Slicer.ColumnWidth -> points
  Slicer.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Slicer.DisableMoveResizeUI -> Returns or sets whether the specified slicer can be moved or resized by using the user interface. Read/write.
  Slicer.DisplayHeader -> Caption
  Slicer.Height -> points
  Slicer.Left -> points
  Slicer.Locked -> Returns or sets whether the specified slicer can be modified when the sheet that contains it is protected. Read/write.
  Slicer.Name -> Returns or sets the name of the specified slicer. Read/write.
  Slicer.NumberOfColumns -> Returns or sets the number of columns in the specified slicer. Read/write.
  Slicer.Parent -> Worksheet
  Slicer.RowHeight -> points
  Slicer.Shape -> Shape
  Slicer.SlicerCache -> SlicerCache
  Slicer.SlicerCacheLevel -> SlicerCacheLevel
  Slicer.SlicerCacheType -> XlSlicerCacheType
  Slicer.Style -> Returns or sets the style currently applied to the specified slicer. Read/write.
  Slicer.TimelineViewState -> TimelineViewState
  Slicer.Top -> points
  Slicer.Width -> points
  PivotFields.Application -> Application
  PivotFields.Count -> Returns a Long value that represents the number of objects in the collection.
  PivotFields.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  PivotFields.Parent -> Returns the parent object for the specified object. Read-only.
  TreeviewControl.Application -> Application
  TreeviewControl.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  TreeviewControl.Drilled -> Sets the "drilled" (expanded or visible) status of the cube field members in the hierarchical member-selection control of a cube field. This property is used primarily for macro recording and isn't intended for any other use. Read/write.
  TreeviewControl.Hidden -> Returns or sets a Variant value that represents the hidden status of the cube field members in the hierarchical member-selection control of a cube field.
  TreeviewControl.Parent -> Returns the parent object for the specified object. Read-only.
  Parameter.Application -> Application
  Parameter.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Parameter.DataType -> XlParameterDataType
  Parameter.Name -> Returns or sets a String value representing the name of the object.
  Parameter.Parent -> Returns the parent object for the specified object. Read-only.
  Parameter.PromptString -> Returns the phrase that prompts the user for a parameter value in a parameter query. Read-only String.
  Parameter.RefreshOnChange -> True if the specified query table is refreshed whenever you change the parameter value of a parameter query. Read/write Boolean.
  Parameter.SourceRange -> Range
  Parameter.Type -> XlParameterType
  Parameter.Value -> Returns a Variant value that represents the parameter value.
  DataFeedConnection.AlwaysUseConnectionFile -> True if the connection file is always used to establish a connection to the data source. Read/write Boolean.
  DataFeedConnection.Application -> Application
  DataFeedConnection.CommandText -> Returns or sets the command string for the specified data source. Read/write Variant.
  DataFeedConnection.CommandType -> Returns or sets the command string for the specified data source. Read/write Variant.
  DataFeedConnection.Connection -> Returns or sets a string that contains Service Contract settings that enable Microsoft Excel to connect to a Data Feed data source. Read/write Variant.
  DataFeedConnection.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  DataFeedConnection.EnableRefresh -> True if the connection can be refreshed by the user. The default value is True. Read/write Boolean.
  DataFeedConnection.Parent -> Returns an Object that represents the parent object of the specified DataFeedConnection object. Read-only.
  DataFeedConnection.RefreshDate -> Returns the date on which the OLE DB connection was last refreshed. Read-only Date.
  DataFeedConnection.Refreshing -> True if an OLE DB query is in progress for the specified data source connection. Read/write Boolean.
  DataFeedConnection.RefreshOnFileOpen -> bool
  DataFeedConnection.RefreshPeriod -> Returns or sets the number of minutes between refreshes. Read/write Long.
  DataFeedConnection.SavePassword -> bool
  DataFeedConnection.ServerCredentialsMethod -> XlCredentialsMethod
  DataFeedConnection.SourceConnectionFile -> Returns or sets a String indicating the Microsoft Office Data Connection file or similar file that was used to create the connection. Read/write.
  DataFeedConnection.SourceDataFile -> A path to the original file used to create the connection. In the case of an OData connection, this is the location of the *.atom or *.atomsvc file used to create the connection. Read/write String.
  TextConnection.Application -> Application
  TextConnection.Connection -> Returns or sets a string that contains text file names that enable Microsoft Excel to connect to text data sources. Read/write Variant.
  TextConnection.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  TextConnection.Parent -> Returns an Object that represents the parent object of the specified TextConnection object. Read-only.
  TextConnection.TextFileColumnDataTypes -> Returns or sets an ordered array of constants that specify the data types applied to the corresponding columns in the text file that you are importing into a query table. The default constant for each column is xlGeneral. Read/write Variant.
  TextConnection.TextFileCommaDelimiter -> bool
  TextConnection.TextFileConsecutiveDelimiter -> bool
  TextConnection.TextFileDecimalSeparator -> Returns or sets the decimal separator character that Microsoft Excel uses when you import a text file into a query table. The default is the system decimal separator character. Read/write String.
  TextConnection.TextFileFixedColumnWidths -> Returns or sets an array of integers that correspond to the widths of the columns (in characters) in the text file that you are importing into a query table. Valid widths are from 1 through 32767 characters. Read/write Variant.
  TextConnection.TextFileHeaderRow -> Returns or sets a value that specifies whether the first row (from the starting row) should be treated as a header row. Read/write Boolean.
  TextConnection.TextFileOtherDelimiter -> Returns or sets the character used as the delimiter when you import a text file into a query table. The default value is null. Read/write String.
  TextConnection.TextFileParseType -> XlTextParsingType
  TextConnection.TextFilePlatform -> XlPlatform
  TextConnection.TextFilePromptOnRefresh -> bool
  TextConnection.TextFileSemicolonDelimiter -> TextFileParseType
  TextConnection.TextFileSpaceDelimiter -> bool
  TextConnection.TextFileStartRow -> Returns or sets the row number at which text parsing will begin when you import a text file into a query table. Valid values are integers from 1 through 32767. The default value is 1. Read/write Long.
  TextConnection.TextFileTabDelimiter -> bool
  TextConnection.TextFileTextQualifier -> XlTextQualifier
  TextConnection.TextFileThousandsSeparator -> Returns or sets the thousands separator character that Microsoft Excel uses when you import a text file into a query table. The default is the system thousands separator character. Read/write String.
  TextConnection.TextFileTrailingMinusNumbers -> bool
  TextConnection.TextFileVisualLayout -> XlTextVisualLayoutType
  SparkAxes.Application -> Application
  SparkAxes.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SparkAxes.Horizontal -> SparkHorizontalAxis
  SparkAxes.Parent -> SparklineGroup
  SparkAxes.Vertical -> SparkVerticalAxis
  Sparkline.Application -> Application
  Sparkline.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Sparkline.Location -> Returns or sets the location of a single sparkline. Read/write.
  Sparkline.Parent -> SparklineGroup
  Sparkline.SourceData -> Returns or sets the range that contains the source data for a single sparkline. Read/write.
  SparkPoints.Application -> Application
  SparkPoints.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SparkPoints.Firstpoint -> SparkColor
  SparkPoints.Highpoint -> SparkColor
  SparkPoints.Lastpoint -> SparkColor
  SparkPoints.Lowpoint -> SparkColor
  SparkPoints.Markers -> SparkColor
  SparkPoints.Negative -> SparkColor
  SparkPoints.Parent -> SparklineGroup
  FormatColor.Application -> Application
  FormatColor.Color -> Returns or sets the fill color associated with a threshold for a data bar or color scale conditional formatting rule.
  FormatColor.ColorIndex -> XlColorIndex
  FormatColor.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  FormatColor.Parent -> Returns the parent object for the specified object. Read-only.
  FormatColor.ThemeColor -> XlThemeColor
  FormatColor.TintAndShade -> Returns or sets a Single that lightens or darkens the fill color of a cell for a threshold of a data bar or color scale conditional formatting rule.
  Filters.Application -> Application
  Filters.Count -> Returns a Long value that represents the number of objects in the collection.
  Filters.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Filters.Item -> Returns a single object from a collection.
  Filters.Parent -> Returns the parent object for the specified object. Read-only.
  CustomProperty.Application -> Application
  CustomProperty.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  CustomProperty.Name -> Returns or sets a String value representing the name of the object.
  CustomProperty.Parent -> Returns the parent object for the specified object. Read-only.
  CustomProperty.Value -> Borders.LineStyle
  AllowEditRanges.Count -> Returns a Long value that represents the number of objects in the collection.
  AllowEditRanges.Item -> Returns a single object from a collection.
  SortFields.Application -> Application
  SortFields.Count -> Returns the number of objects in the collection. Read-only Long.
  SortFields.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SortFields.Item -> SortField
  SortFields.Parent -> Returns the parent object for the specified object. Read-only.
  Page.CenterFooter -> Specifies a picture or text to be center-aligned in the page footer.
  Page.CenterHeader -> Specifies a picture or text to be center-aligned in the page header.
  Page.LeftFooter -> Specifies a picture or text to be left-aligned in the page footer.
  Page.LeftHeader -> Specifies a picture or text to be left-aligned in the page header.
  Page.RightFooter -> Specifies a picture or text to be right-aligned in the page footer.
  Page.RightHeader -> Specifies a picture or text to be right-aligned in the page header.
  Icon.Application -> Application
  Icon.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  Icon.Index -> IconSet
  Icon.Parent -> Returns the parent object for the specified object. Read-only.
  ModelMeasure.Application -> Application
  ModelMeasure.AssociatedTable -> ModelTable
  ModelMeasure.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ModelMeasure.Description -> The description of the model measure. Read/write String.
  ModelMeasure.FormatInformation -> The format of the model measure. Read/write Variant.
  ModelMeasure.Formula -> The Data Analysis Expressions (DAX) formula of the model measure. Read/write String.
  ModelMeasure.Name -> The name of the model measure. Read/write String.
  ModelMeasure.Parent -> Returns the parent object for the specified object. Read-only.
  ModelRelationship.Active -> bool
  ModelRelationship.Application -> Application
  ModelRelationship.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  ModelRelationship.ForeignKeyColumn -> ModelTableColumn
  ModelRelationship.ForeignKeyTable -> ModelTable
  ModelRelationship.Parent -> Returns an Object that represents the parent object of the specified ModelRelationship object. Read-only.
  ModelRelationship.PrimaryKeyColumn -> ModelTableColumn
  ModelRelationship.PrimaryKeyTable -> ModelTable
  ModelTable.Application -> Application
  ModelTable.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  ModelTable.ModelTableColumns -> ModelTableColumns
  ModelTable.Name -> Returns a String value that represents the name of the object.
  ModelTable.Parent -> Returns an Object that represents the parent object of the specified ModelTable object. Read-only.
  ModelTable.RecordCount -> Returns the total row count for the model table. Read-only Integer.
  ModelTable.SourceName -> Name of the data source for the table. If the table has no data source, the call will generate a run-time error. Read-only String.
  ModelTable.SourceWorkbookConnection -> Workbook Connection
  SlicerPivotTables.Application -> Application
  SlicerPivotTables.Count -> Returns the number of objects in the collection.
  SlicerPivotTables.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SlicerPivotTables.Item -> PivotTable
  SlicerPivotTables.Parent -> SlicerCache
  SlicerCacheLevel.Application -> Application
  SlicerCacheLevel.Count -> SlicerItem
  SlicerCacheLevel.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SlicerCacheLevel.CrossFilterType -> Returns or sets whether a slicer is participating in cross filtering with other slicers that share the same slicer cache, and how cross filtering is displayed. Read/write.
  SlicerCacheLevel.Name -> Returns the MDX unique name of the OLAP hierarchy level represented by the object.
  SlicerCacheLevel.Ordinal -> Returns the one-based ordinal value of the hierarchy level represented by the specified SlicerCacheLevel object. Read-only.
  SlicerCacheLevel.Parent -> SlicerCache
  SlicerCacheLevel.SlicerItems -> SlicerItems
  SlicerCacheLevel.SortItems -> Returns or sets the sort order of the items in the slicer. Read/write.
  SlicerCacheLevel.VisibleSlicerItemsList -> Returns the list of slicer items that are currently included in the slicer filter. Read-only.
  SlicerItems.Application -> Application
  SlicerItems.Count -> Returns the number of objects in the collection. Read-only.
  SlicerItems.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SlicerItems.Item -> SlicerItem
  SlicerItems.Parent -> SlicerCache
  ColorFormat.Application -> Application
  ColorFormat.Brightness -> Returns or sets the luminosity of the specified object. Read/write.
  ColorFormat.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ColorFormat.ObjectThemeColor -> MsoThemeColorIndex
  ColorFormat.Parent -> Returns the parent object for the specified object. Read-only.
  ColorFormat.RGB -> Returns or sets a Long value that represents the red-green-blue value of the specified color.
  ColorFormat.SchemeColor -> Returns or sets an Integer value that represents the color of a Color object, as an index in the current color.
  ColorFormat.TintAndShade -> Returns or sets a Single that lightens or darkens a color.
  ColorFormat.Type -> MsoColorType
  ShapeNode.Application -> Application
  ShapeNode.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  ShapeNode.EditingType -> MsoEditingType
  ShapeNode.Parent -> Returns the parent object for the specified object. Read-only.
  ShapeNode.Points -> points
  ShapeNode.SegmentType -> MsoSegmentType
  SlicerItem.Application -> Application
  SlicerItem.Caption -> Returns the label text for the slicer item. Read-only.
  SlicerItem.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SlicerItem.HasData -> Returns whether the slicer item contains data that matches the current manual filter state. Read-only.
  SlicerItem.Name -> Returns the name of the slicer item. Read-only.
  SlicerItem.Parent -> SlicerCache
  SlicerItem.Selected -> Returns or sets whether the slicer item is selected. Read/write for slicers connected to non-OLAP data sources. Read-only for slicers connected to OLAP data sources.
  SlicerItem.SourceName -> Returns the source name of the slicer item. Read-only.
  SlicerItem.SourceNameStandard -> Returns the slicer item's source name in standard English (United States) format settings. Read-only.
  SlicerItem.Value -> Returns the value of the slicer item. Read-only.
  TimelineViewState.Application -> Application
  TimelineViewState.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  TimelineViewState.Level -> XlTimelineLevel
  TimelineViewState.Parent -> Returns an Object that represents the parent object of the specified TimelineViewState object. Read-only.
  TimelineViewState.ShowHeader -> Gets or sets whether the control's header is displayed. Read/write Boolean.
  TimelineViewState.ShowHorizontalScrollbar -> Gets or sets whether the control's horizontal scrollbar is displayed. Read/write Boolean.
  TimelineViewState.ShowSelectionLabel -> Gets or sets whether the control's filter selection label is displayed. Read/write Boolean.
  TimelineViewState.ShowTimeLevel -> Gets or sets whether the control's time level drop-down is displayed. Read/write Boolean.
  SparkHorizontalAxis.Application -> Application
  SparkHorizontalAxis.Axis -> SparkColor
  SparkHorizontalAxis.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SparkHorizontalAxis.IsDateAxis -> Returns whether the horizontal axis of the sparkline is based on date values. Read-only.
  SparkHorizontalAxis.Parent -> SparklineGroup
  SparkHorizontalAxis.RightToLeftPlotOrder -> Returns or sets whether the points on the horizontal axis are plotted in right-to-left order. Read/write.
  SparkVerticalAxis.Application -> Application
  SparkVerticalAxis.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SparkVerticalAxis.CustomMaxScaleValue -> Returns or sets the custom maximum value for the vertical axis of a sparkline. Read/write.
  SparkVerticalAxis.CustomMinScaleValue -> Returns or sets the custom minimum value for the vertical axis of a sparkline. Read/write.
  SparkVerticalAxis.MaxScaleType -> Returns or sets how the maximum value of the vertical axis of the sparkline is scaled relative to other sparklines in the group. Read/write.
  SparkVerticalAxis.MinScaleType -> Returns or sets how the minimum value of the vertical axis of the sparkline is scaled relative to other sparklines in the group. Read/write.
  SparkVerticalAxis.Parent -> SparklineGroup
  SparkColor.Application -> Application
  SparkColor.Color -> FormatColor
  SparkColor.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SparkColor.Parent -> SparklineGroup
  SparkColor.Visible -> Returns or sets whether the point is visible. Read/write.
  SortField.Application -> Application
  SortField.Creator -> Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.
  SortField.CustomOrder -> Specifies a custom order to sort the fields. Read/write Variant.
  SortField.DataOption -> XlSortDataOption
  SortField.Key -> Specifies the range that is currently being sorted on. Read-only.
  SortField.Order -> Determines the sort order for the values specified in the key. Read/write.
  SortField.Parent -> Returns the parent object for the specified object. Read-only.
  SortField.Priority -> Specifies the priority for the sort field. Read/write.
  SortField.SortOn -> XlSortOn
  SortField.SortOnValue -> Returns the value on which the sort is performed for the specified SortField object. Read-only.
  ModelTableColumn.Application -> Application
  ModelTableColumn.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  ModelTableColumn.DataType -> XlParameterDataType
  ModelTableColumn.Name -> Returns a String value that represents the name of the object.
  ModelTableColumn.Parent -> Returns an Object that represents the parent object of the specified ModelTableColumn object. Read-only.
  ModelTableColumns.Application -> Application
  ModelTableColumns.Count -> ModelTableColumn
  ModelTableColumns.Creator -> Returns a 32-bit integer that indicates the application in which the specified object was created. Read-only Long.
  ModelTableColumns.Parent -> Returns an Object that represents the parent object of the specified ModelTableColumns object. Read-only.
2577
